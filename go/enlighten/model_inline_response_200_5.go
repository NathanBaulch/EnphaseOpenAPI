/*
 * The Enlighten Systems API
 *
 * The Enlighten Systems API is a JSON-based API that provides access to performance data for a PV system. By using the Enlighten Systems API, you agree to the Enphase Energy API License Agreement.  Please note that the Enlighten Systems API does not provide performance data at a panel or microinverter level.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package enlighten

import (
	"encoding/json"
)

// InlineResponse2005 struct for InlineResponse2005
type InlineResponse2005 struct {
	// Enlighten ID for this system.
	SystemId int32 `json:"system_id"`
	// First day included in the reporting period. The format is `YYYY-mm-dd` unless you pass a `datetime_format` parameter as described [here](https://developer.enphase.com/docs#Datetimes).
	StartDate string `json:"start_date"`
	// Last day included in the reporting period.
	EndDate string `json:"end_date"`
	// Total production for the requested period in Watt-hours.
	ProductionWh int32 `json:"production_wh"`
	// If the system has any revenue-grade meters installed, the meter readings at the beginning and end of the reporting period are included here. Otherwise, the array is empty.
	MeterReadings []InlineResponse2005MeterReadings `json:"meter_readings"`
	Meta Meta `json:"meta"`
}

// NewInlineResponse2005 instantiates a new InlineResponse2005 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2005(systemId int32, startDate string, endDate string, productionWh int32, meterReadings []InlineResponse2005MeterReadings, meta Meta) *InlineResponse2005 {
	this := InlineResponse2005{}
	this.SystemId = systemId
	this.StartDate = startDate
	this.EndDate = endDate
	this.ProductionWh = productionWh
	this.MeterReadings = meterReadings
	this.Meta = meta
	return &this
}

// NewInlineResponse2005WithDefaults instantiates a new InlineResponse2005 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2005WithDefaults() *InlineResponse2005 {
	this := InlineResponse2005{}
	return &this
}

// GetSystemId returns the SystemId field value
func (o *InlineResponse2005) GetSystemId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SystemId
}

// GetSystemIdOk returns a tuple with the SystemId field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2005) GetSystemIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SystemId, true
}

// SetSystemId sets field value
func (o *InlineResponse2005) SetSystemId(v int32) {
	o.SystemId = v
}

// GetStartDate returns the StartDate field value
func (o *InlineResponse2005) GetStartDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2005) GetStartDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.StartDate, true
}

// SetStartDate sets field value
func (o *InlineResponse2005) SetStartDate(v string) {
	o.StartDate = v
}

// GetEndDate returns the EndDate field value
func (o *InlineResponse2005) GetEndDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2005) GetEndDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EndDate, true
}

// SetEndDate sets field value
func (o *InlineResponse2005) SetEndDate(v string) {
	o.EndDate = v
}

// GetProductionWh returns the ProductionWh field value
func (o *InlineResponse2005) GetProductionWh() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProductionWh
}

// GetProductionWhOk returns a tuple with the ProductionWh field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2005) GetProductionWhOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ProductionWh, true
}

// SetProductionWh sets field value
func (o *InlineResponse2005) SetProductionWh(v int32) {
	o.ProductionWh = v
}

// GetMeterReadings returns the MeterReadings field value
func (o *InlineResponse2005) GetMeterReadings() []InlineResponse2005MeterReadings {
	if o == nil {
		var ret []InlineResponse2005MeterReadings
		return ret
	}

	return o.MeterReadings
}

// GetMeterReadingsOk returns a tuple with the MeterReadings field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2005) GetMeterReadingsOk() (*[]InlineResponse2005MeterReadings, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MeterReadings, true
}

// SetMeterReadings sets field value
func (o *InlineResponse2005) SetMeterReadings(v []InlineResponse2005MeterReadings) {
	o.MeterReadings = v
}

// GetMeta returns the Meta field value
func (o *InlineResponse2005) GetMeta() Meta {
	if o == nil {
		var ret Meta
		return ret
	}

	return o.Meta
}

// GetMetaOk returns a tuple with the Meta field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2005) GetMetaOk() (*Meta, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Meta, true
}

// SetMeta sets field value
func (o *InlineResponse2005) SetMeta(v Meta) {
	o.Meta = v
}

func (o InlineResponse2005) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["system_id"] = o.SystemId
	}
	if true {
		toSerialize["start_date"] = o.StartDate
	}
	if true {
		toSerialize["end_date"] = o.EndDate
	}
	if true {
		toSerialize["production_wh"] = o.ProductionWh
	}
	if true {
		toSerialize["meter_readings"] = o.MeterReadings
	}
	if true {
		toSerialize["meta"] = o.Meta
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2005 struct {
	value *InlineResponse2005
	isSet bool
}

func (v NullableInlineResponse2005) Get() *InlineResponse2005 {
	return v.value
}

func (v *NullableInlineResponse2005) Set(val *InlineResponse2005) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2005) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2005) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2005(val *InlineResponse2005) *NullableInlineResponse2005 {
	return &NullableInlineResponse2005{value: val, isSet: true}
}

func (v NullableInlineResponse2005) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2005) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


