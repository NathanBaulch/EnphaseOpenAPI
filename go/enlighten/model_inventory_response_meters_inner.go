/*
The Enlighten Systems API

The Enlighten Systems API is a JSON-based API that provides access to performance data for a PV system. By using the Enlighten Systems API, you agree to the Enphase Energy API License Agreement.  Please note that the Enlighten Systems API does not provide performance data at a panel or microinverter level.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package enlighten

import (
	"encoding/json"
)

// InventoryResponseMetersInner struct for InventoryResponseMetersInner
type InventoryResponseMetersInner struct {
	Sn string `json:"sn"`
	Manufacturer string `json:"manufacturer"`
	Model string `json:"model"`
	Status *string `json:"status,omitempty"`
	State *string `json:"state,omitempty"`
}

// NewInventoryResponseMetersInner instantiates a new InventoryResponseMetersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInventoryResponseMetersInner(sn string, manufacturer string, model string) *InventoryResponseMetersInner {
	this := InventoryResponseMetersInner{}
	this.Sn = sn
	this.Manufacturer = manufacturer
	this.Model = model
	return &this
}

// NewInventoryResponseMetersInnerWithDefaults instantiates a new InventoryResponseMetersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInventoryResponseMetersInnerWithDefaults() *InventoryResponseMetersInner {
	this := InventoryResponseMetersInner{}
	return &this
}

// GetSn returns the Sn field value
func (o *InventoryResponseMetersInner) GetSn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sn
}

// GetSnOk returns a tuple with the Sn field value
// and a boolean to check if the value has been set.
func (o *InventoryResponseMetersInner) GetSnOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Sn, true
}

// SetSn sets field value
func (o *InventoryResponseMetersInner) SetSn(v string) {
	o.Sn = v
}

// GetManufacturer returns the Manufacturer field value
func (o *InventoryResponseMetersInner) GetManufacturer() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Manufacturer
}

// GetManufacturerOk returns a tuple with the Manufacturer field value
// and a boolean to check if the value has been set.
func (o *InventoryResponseMetersInner) GetManufacturerOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Manufacturer, true
}

// SetManufacturer sets field value
func (o *InventoryResponseMetersInner) SetManufacturer(v string) {
	o.Manufacturer = v
}

// GetModel returns the Model field value
func (o *InventoryResponseMetersInner) GetModel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *InventoryResponseMetersInner) GetModelOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *InventoryResponseMetersInner) SetModel(v string) {
	o.Model = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InventoryResponseMetersInner) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryResponseMetersInner) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InventoryResponseMetersInner) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InventoryResponseMetersInner) SetStatus(v string) {
	o.Status = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *InventoryResponseMetersInner) GetState() string {
	if o == nil || isNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryResponseMetersInner) GetStateOk() (*string, bool) {
	if o == nil || isNil(o.State) {
    return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *InventoryResponseMetersInner) HasState() bool {
	if o != nil && !isNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *InventoryResponseMetersInner) SetState(v string) {
	o.State = &v
}

func (o InventoryResponseMetersInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["sn"] = o.Sn
	}
	if true {
		toSerialize["manufacturer"] = o.Manufacturer
	}
	if true {
		toSerialize["model"] = o.Model
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.State) {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableInventoryResponseMetersInner struct {
	value *InventoryResponseMetersInner
	isSet bool
}

func (v NullableInventoryResponseMetersInner) Get() *InventoryResponseMetersInner {
	return v.value
}

func (v *NullableInventoryResponseMetersInner) Set(val *InventoryResponseMetersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableInventoryResponseMetersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableInventoryResponseMetersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInventoryResponseMetersInner(val *InventoryResponseMetersInner) *NullableInventoryResponseMetersInner {
	return &NullableInventoryResponseMetersInner{value: val, isSet: true}
}

func (v NullableInventoryResponseMetersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInventoryResponseMetersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


