/*
The Enlighten Systems API

The Enlighten Systems API is a JSON-based API that provides access to performance data for a PV system. By using the Enlighten Systems API, you agree to the Enphase Energy API License Agreement.  Please note that the Enlighten Systems API does not provide performance data at a panel or microinverter level.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package enlighten

import (
	"encoding/json"
)

// checks if the InventoryResponseEnvoysInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InventoryResponseEnvoysInner{}

// InventoryResponseEnvoysInner struct for InventoryResponseEnvoysInner
type InventoryResponseEnvoysInner struct {
	Sn string `json:"sn"`
	Model string `json:"model"`
	Sku string `json:"sku"`
}

// NewInventoryResponseEnvoysInner instantiates a new InventoryResponseEnvoysInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInventoryResponseEnvoysInner(sn string, model string, sku string) *InventoryResponseEnvoysInner {
	this := InventoryResponseEnvoysInner{}
	this.Sn = sn
	this.Model = model
	this.Sku = sku
	return &this
}

// NewInventoryResponseEnvoysInnerWithDefaults instantiates a new InventoryResponseEnvoysInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInventoryResponseEnvoysInnerWithDefaults() *InventoryResponseEnvoysInner {
	this := InventoryResponseEnvoysInner{}
	return &this
}

// GetSn returns the Sn field value
func (o *InventoryResponseEnvoysInner) GetSn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sn
}

// GetSnOk returns a tuple with the Sn field value
// and a boolean to check if the value has been set.
func (o *InventoryResponseEnvoysInner) GetSnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sn, true
}

// SetSn sets field value
func (o *InventoryResponseEnvoysInner) SetSn(v string) {
	o.Sn = v
}

// GetModel returns the Model field value
func (o *InventoryResponseEnvoysInner) GetModel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *InventoryResponseEnvoysInner) GetModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *InventoryResponseEnvoysInner) SetModel(v string) {
	o.Model = v
}

// GetSku returns the Sku field value
func (o *InventoryResponseEnvoysInner) GetSku() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sku
}

// GetSkuOk returns a tuple with the Sku field value
// and a boolean to check if the value has been set.
func (o *InventoryResponseEnvoysInner) GetSkuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sku, true
}

// SetSku sets field value
func (o *InventoryResponseEnvoysInner) SetSku(v string) {
	o.Sku = v
}

func (o InventoryResponseEnvoysInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InventoryResponseEnvoysInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sn"] = o.Sn
	toSerialize["model"] = o.Model
	toSerialize["sku"] = o.Sku
	return toSerialize, nil
}

type NullableInventoryResponseEnvoysInner struct {
	value *InventoryResponseEnvoysInner
	isSet bool
}

func (v NullableInventoryResponseEnvoysInner) Get() *InventoryResponseEnvoysInner {
	return v.value
}

func (v *NullableInventoryResponseEnvoysInner) Set(val *InventoryResponseEnvoysInner) {
	v.value = val
	v.isSet = true
}

func (v NullableInventoryResponseEnvoysInner) IsSet() bool {
	return v.isSet
}

func (v *NullableInventoryResponseEnvoysInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInventoryResponseEnvoysInner(val *InventoryResponseEnvoysInner) *NullableInventoryResponseEnvoysInner {
	return &NullableInventoryResponseEnvoysInner{value: val, isSet: true}
}

func (v NullableInventoryResponseEnvoysInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInventoryResponseEnvoysInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


