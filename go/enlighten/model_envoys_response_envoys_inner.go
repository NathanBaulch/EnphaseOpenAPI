/*
The Enlighten Systems API

The Enlighten Systems API is a JSON-based API that provides access to performance data for a PV system. By using the Enlighten Systems API, you agree to the Enphase Energy API License Agreement.  Please note that the Enlighten Systems API does not provide performance data at a panel or microinverter level.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package enlighten

import (
	"encoding/json"
)

// EnvoysResponseEnvoysInner struct for EnvoysResponseEnvoysInner
type EnvoysResponseEnvoysInner struct {
	// The Enlighten ID of the Envoy.
	EnvoyId int32 `json:"envoy_id"`
	// The last time this Envoy submitted a report, by default expressed in Unix epoch time. When the `datetime_format` query parameter is `iso8601`, `last_report_at` is in ISO 8601 format. If Enlighten has no record of a report from this Envoy, returns null.
	LastReportAt int64 `json:"last_report_at"`
	// The human-friendly name of this Envoy.
	Name string `json:"name"`
	// The Enphase part number of this Envoy.
	PartNumber string `json:"part_number"`
	// The serial number of this Envoy.
	SerialNumber string `json:"serial_number"`
	// The current status of this Envoy. * `normal` - The Envoy is operating normally. * `comm` - The Envoy is not communicating to Enlighten.
	Status string `json:"status"`
}

// NewEnvoysResponseEnvoysInner instantiates a new EnvoysResponseEnvoysInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvoysResponseEnvoysInner(envoyId int32, lastReportAt int64, name string, partNumber string, serialNumber string, status string) *EnvoysResponseEnvoysInner {
	this := EnvoysResponseEnvoysInner{}
	this.EnvoyId = envoyId
	this.LastReportAt = lastReportAt
	this.Name = name
	this.PartNumber = partNumber
	this.SerialNumber = serialNumber
	this.Status = status
	return &this
}

// NewEnvoysResponseEnvoysInnerWithDefaults instantiates a new EnvoysResponseEnvoysInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvoysResponseEnvoysInnerWithDefaults() *EnvoysResponseEnvoysInner {
	this := EnvoysResponseEnvoysInner{}
	return &this
}

// GetEnvoyId returns the EnvoyId field value
func (o *EnvoysResponseEnvoysInner) GetEnvoyId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.EnvoyId
}

// GetEnvoyIdOk returns a tuple with the EnvoyId field value
// and a boolean to check if the value has been set.
func (o *EnvoysResponseEnvoysInner) GetEnvoyIdOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.EnvoyId, true
}

// SetEnvoyId sets field value
func (o *EnvoysResponseEnvoysInner) SetEnvoyId(v int32) {
	o.EnvoyId = v
}

// GetLastReportAt returns the LastReportAt field value
func (o *EnvoysResponseEnvoysInner) GetLastReportAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.LastReportAt
}

// GetLastReportAtOk returns a tuple with the LastReportAt field value
// and a boolean to check if the value has been set.
func (o *EnvoysResponseEnvoysInner) GetLastReportAtOk() (*int64, bool) {
	if o == nil {
    return nil, false
	}
	return &o.LastReportAt, true
}

// SetLastReportAt sets field value
func (o *EnvoysResponseEnvoysInner) SetLastReportAt(v int64) {
	o.LastReportAt = v
}

// GetName returns the Name field value
func (o *EnvoysResponseEnvoysInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *EnvoysResponseEnvoysInner) GetNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *EnvoysResponseEnvoysInner) SetName(v string) {
	o.Name = v
}

// GetPartNumber returns the PartNumber field value
func (o *EnvoysResponseEnvoysInner) GetPartNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PartNumber
}

// GetPartNumberOk returns a tuple with the PartNumber field value
// and a boolean to check if the value has been set.
func (o *EnvoysResponseEnvoysInner) GetPartNumberOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PartNumber, true
}

// SetPartNumber sets field value
func (o *EnvoysResponseEnvoysInner) SetPartNumber(v string) {
	o.PartNumber = v
}

// GetSerialNumber returns the SerialNumber field value
func (o *EnvoysResponseEnvoysInner) GetSerialNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value
// and a boolean to check if the value has been set.
func (o *EnvoysResponseEnvoysInner) GetSerialNumberOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.SerialNumber, true
}

// SetSerialNumber sets field value
func (o *EnvoysResponseEnvoysInner) SetSerialNumber(v string) {
	o.SerialNumber = v
}

// GetStatus returns the Status field value
func (o *EnvoysResponseEnvoysInner) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *EnvoysResponseEnvoysInner) GetStatusOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *EnvoysResponseEnvoysInner) SetStatus(v string) {
	o.Status = v
}

func (o EnvoysResponseEnvoysInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["envoy_id"] = o.EnvoyId
	}
	if true {
		toSerialize["last_report_at"] = o.LastReportAt
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["part_number"] = o.PartNumber
	}
	if true {
		toSerialize["serial_number"] = o.SerialNumber
	}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableEnvoysResponseEnvoysInner struct {
	value *EnvoysResponseEnvoysInner
	isSet bool
}

func (v NullableEnvoysResponseEnvoysInner) Get() *EnvoysResponseEnvoysInner {
	return v.value
}

func (v *NullableEnvoysResponseEnvoysInner) Set(val *EnvoysResponseEnvoysInner) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvoysResponseEnvoysInner) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvoysResponseEnvoysInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvoysResponseEnvoysInner(val *EnvoysResponseEnvoysInner) *NullableEnvoysResponseEnvoysInner {
	return &NullableEnvoysResponseEnvoysInner{value: val, isSet: true}
}

func (v NullableEnvoysResponseEnvoysInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvoysResponseEnvoysInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


