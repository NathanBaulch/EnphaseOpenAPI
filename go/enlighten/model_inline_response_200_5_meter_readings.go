/*
 * The Enlighten Systems API
 *
 * The Enlighten Systems API is a JSON-based API that provides access to performance data for a PV system. By using the Enlighten Systems API, you agree to the Enphase Energy API License Agreement.  Please note that the Enlighten Systems API does not provide performance data at a panel or microinverter level.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package enlighten

import (
	"encoding/json"
)

// InlineResponse2005MeterReadings struct for InlineResponse2005MeterReadings
type InlineResponse2005MeterReadings struct {
	SerialNumber string `json:"serial_number"`
	Start int32 `json:"start"`
	End int32 `json:"end"`
}

// NewInlineResponse2005MeterReadings instantiates a new InlineResponse2005MeterReadings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2005MeterReadings(serialNumber string, start int32, end int32) *InlineResponse2005MeterReadings {
	this := InlineResponse2005MeterReadings{}
	this.SerialNumber = serialNumber
	this.Start = start
	this.End = end
	return &this
}

// NewInlineResponse2005MeterReadingsWithDefaults instantiates a new InlineResponse2005MeterReadings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2005MeterReadingsWithDefaults() *InlineResponse2005MeterReadings {
	this := InlineResponse2005MeterReadings{}
	return &this
}

// GetSerialNumber returns the SerialNumber field value
func (o *InlineResponse2005MeterReadings) GetSerialNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2005MeterReadings) GetSerialNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SerialNumber, true
}

// SetSerialNumber sets field value
func (o *InlineResponse2005MeterReadings) SetSerialNumber(v string) {
	o.SerialNumber = v
}

// GetStart returns the Start field value
func (o *InlineResponse2005MeterReadings) GetStart() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Start
}

// GetStartOk returns a tuple with the Start field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2005MeterReadings) GetStartOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Start, true
}

// SetStart sets field value
func (o *InlineResponse2005MeterReadings) SetStart(v int32) {
	o.Start = v
}

// GetEnd returns the End field value
func (o *InlineResponse2005MeterReadings) GetEnd() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.End
}

// GetEndOk returns a tuple with the End field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2005MeterReadings) GetEndOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.End, true
}

// SetEnd sets field value
func (o *InlineResponse2005MeterReadings) SetEnd(v int32) {
	o.End = v
}

func (o InlineResponse2005MeterReadings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["serial_number"] = o.SerialNumber
	}
	if true {
		toSerialize["start"] = o.Start
	}
	if true {
		toSerialize["end"] = o.End
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2005MeterReadings struct {
	value *InlineResponse2005MeterReadings
	isSet bool
}

func (v NullableInlineResponse2005MeterReadings) Get() *InlineResponse2005MeterReadings {
	return v.value
}

func (v *NullableInlineResponse2005MeterReadings) Set(val *InlineResponse2005MeterReadings) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2005MeterReadings) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2005MeterReadings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2005MeterReadings(val *InlineResponse2005MeterReadings) *NullableInlineResponse2005MeterReadings {
	return &NullableInlineResponse2005MeterReadings{value: val, isSet: true}
}

func (v NullableInlineResponse2005MeterReadings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2005MeterReadings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


