/*
 * The Enlighten Systems API
 *
 * The Enlighten Systems API is a JSON-based API that provides access to performance data for a PV system. By using the Enlighten Systems API, you agree to the Enphase Energy API License Agreement.  Please note that the Enlighten Systems API does not provide performance data at a panel or microinverter level.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package enlighten

import (
	"encoding/json"
)

// InlineResponse2003Meters struct for InlineResponse2003Meters
type InlineResponse2003Meters struct {
	Sn string `json:"sn"`
	Manufacturer string `json:"manufacturer"`
	Model string `json:"model"`
}

// NewInlineResponse2003Meters instantiates a new InlineResponse2003Meters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2003Meters(sn string, manufacturer string, model string) *InlineResponse2003Meters {
	this := InlineResponse2003Meters{}
	this.Sn = sn
	this.Manufacturer = manufacturer
	this.Model = model
	return &this
}

// NewInlineResponse2003MetersWithDefaults instantiates a new InlineResponse2003Meters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2003MetersWithDefaults() *InlineResponse2003Meters {
	this := InlineResponse2003Meters{}
	return &this
}

// GetSn returns the Sn field value
func (o *InlineResponse2003Meters) GetSn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sn
}

// GetSnOk returns a tuple with the Sn field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003Meters) GetSnOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Sn, true
}

// SetSn sets field value
func (o *InlineResponse2003Meters) SetSn(v string) {
	o.Sn = v
}

// GetManufacturer returns the Manufacturer field value
func (o *InlineResponse2003Meters) GetManufacturer() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Manufacturer
}

// GetManufacturerOk returns a tuple with the Manufacturer field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003Meters) GetManufacturerOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Manufacturer, true
}

// SetManufacturer sets field value
func (o *InlineResponse2003Meters) SetManufacturer(v string) {
	o.Manufacturer = v
}

// GetModel returns the Model field value
func (o *InlineResponse2003Meters) GetModel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003Meters) GetModelOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *InlineResponse2003Meters) SetModel(v string) {
	o.Model = v
}

func (o InlineResponse2003Meters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["sn"] = o.Sn
	}
	if true {
		toSerialize["manufacturer"] = o.Manufacturer
	}
	if true {
		toSerialize["model"] = o.Model
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2003Meters struct {
	value *InlineResponse2003Meters
	isSet bool
}

func (v NullableInlineResponse2003Meters) Get() *InlineResponse2003Meters {
	return v.value
}

func (v *NullableInlineResponse2003Meters) Set(val *InlineResponse2003Meters) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2003Meters) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2003Meters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2003Meters(val *InlineResponse2003Meters) *NullableInlineResponse2003Meters {
	return &NullableInlineResponse2003Meters{value: val, isSet: true}
}

func (v NullableInlineResponse2003Meters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2003Meters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


