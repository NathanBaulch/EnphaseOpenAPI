/*
 * The Enlighten Systems API
 *
 * The Enlighten Systems API is a JSON-based API that provides access to performance data for a PV system. By using the Enlighten Systems API, you agree to the Enphase Energy API License Agreement.  Please note that the Enlighten Systems API does not provide performance data at a panel or microinverter level.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package enlighten

import (
	"encoding/json"
)

// InlineResponse2003Envoys struct for InlineResponse2003Envoys
type InlineResponse2003Envoys struct {
	Sn string `json:"sn"`
	Model string `json:"model"`
}

// NewInlineResponse2003Envoys instantiates a new InlineResponse2003Envoys object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2003Envoys(sn string, model string) *InlineResponse2003Envoys {
	this := InlineResponse2003Envoys{}
	this.Sn = sn
	this.Model = model
	return &this
}

// NewInlineResponse2003EnvoysWithDefaults instantiates a new InlineResponse2003Envoys object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2003EnvoysWithDefaults() *InlineResponse2003Envoys {
	this := InlineResponse2003Envoys{}
	return &this
}

// GetSn returns the Sn field value
func (o *InlineResponse2003Envoys) GetSn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sn
}

// GetSnOk returns a tuple with the Sn field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003Envoys) GetSnOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Sn, true
}

// SetSn sets field value
func (o *InlineResponse2003Envoys) SetSn(v string) {
	o.Sn = v
}

// GetModel returns the Model field value
func (o *InlineResponse2003Envoys) GetModel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2003Envoys) GetModelOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *InlineResponse2003Envoys) SetModel(v string) {
	o.Model = v
}

func (o InlineResponse2003Envoys) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["sn"] = o.Sn
	}
	if true {
		toSerialize["model"] = o.Model
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2003Envoys struct {
	value *InlineResponse2003Envoys
	isSet bool
}

func (v NullableInlineResponse2003Envoys) Get() *InlineResponse2003Envoys {
	return v.value
}

func (v *NullableInlineResponse2003Envoys) Set(val *InlineResponse2003Envoys) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2003Envoys) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2003Envoys) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2003Envoys(val *InlineResponse2003Envoys) *NullableInlineResponse2003Envoys {
	return &NullableInlineResponse2003Envoys{value: val, isSet: true}
}

func (v NullableInlineResponse2003Envoys) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2003Envoys) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


