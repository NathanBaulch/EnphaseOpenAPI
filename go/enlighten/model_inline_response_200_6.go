/*
 * The Enlighten Systems API
 *
 * The Enlighten Systems API is a JSON-based API that provides access to performance data for a PV system. By using the Enlighten Systems API, you agree to the Enphase Energy API License Agreement.  Please note that the Enlighten Systems API does not provide performance data at a panel or microinverter level.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package enlighten

import (
	"encoding/json"
)

// InlineResponse2006 struct for InlineResponse2006
type InlineResponse2006 struct {
	SystemId int32 `json:"system_id"`
	MeterReadings []InlineResponse2006MeterReadings `json:"meter_readings"`
	Meta Meta `json:"meta"`
}

// NewInlineResponse2006 instantiates a new InlineResponse2006 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2006(systemId int32, meterReadings []InlineResponse2006MeterReadings, meta Meta) *InlineResponse2006 {
	this := InlineResponse2006{}
	this.SystemId = systemId
	this.MeterReadings = meterReadings
	this.Meta = meta
	return &this
}

// NewInlineResponse2006WithDefaults instantiates a new InlineResponse2006 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2006WithDefaults() *InlineResponse2006 {
	this := InlineResponse2006{}
	return &this
}

// GetSystemId returns the SystemId field value
func (o *InlineResponse2006) GetSystemId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SystemId
}

// GetSystemIdOk returns a tuple with the SystemId field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2006) GetSystemIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SystemId, true
}

// SetSystemId sets field value
func (o *InlineResponse2006) SetSystemId(v int32) {
	o.SystemId = v
}

// GetMeterReadings returns the MeterReadings field value
func (o *InlineResponse2006) GetMeterReadings() []InlineResponse2006MeterReadings {
	if o == nil {
		var ret []InlineResponse2006MeterReadings
		return ret
	}

	return o.MeterReadings
}

// GetMeterReadingsOk returns a tuple with the MeterReadings field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2006) GetMeterReadingsOk() (*[]InlineResponse2006MeterReadings, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MeterReadings, true
}

// SetMeterReadings sets field value
func (o *InlineResponse2006) SetMeterReadings(v []InlineResponse2006MeterReadings) {
	o.MeterReadings = v
}

// GetMeta returns the Meta field value
func (o *InlineResponse2006) GetMeta() Meta {
	if o == nil {
		var ret Meta
		return ret
	}

	return o.Meta
}

// GetMetaOk returns a tuple with the Meta field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2006) GetMetaOk() (*Meta, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Meta, true
}

// SetMeta sets field value
func (o *InlineResponse2006) SetMeta(v Meta) {
	o.Meta = v
}

func (o InlineResponse2006) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["system_id"] = o.SystemId
	}
	if true {
		toSerialize["meter_readings"] = o.MeterReadings
	}
	if true {
		toSerialize["meta"] = o.Meta
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2006 struct {
	value *InlineResponse2006
	isSet bool
}

func (v NullableInlineResponse2006) Get() *InlineResponse2006 {
	return v.value
}

func (v *NullableInlineResponse2006) Set(val *InlineResponse2006) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2006) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2006) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2006(val *InlineResponse2006) *NullableInlineResponse2006 {
	return &NullableInlineResponse2006{value: val, isSet: true}
}

func (v NullableInlineResponse2006) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2006) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


