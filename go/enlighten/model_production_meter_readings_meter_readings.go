/*
 * The Enlighten Systems API
 *
 * The Enlighten Systems API is a JSON-based API that provides access to performance data for a PV system. By using the Enlighten Systems API, you agree to the Enphase Energy API License Agreement.  Please note that the Enlighten Systems API does not provide performance data at a panel or microinverter level.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package enlighten

import (
	"encoding/json"
)

// ProductionMeterReadingsMeterReadings struct for ProductionMeterReadingsMeterReadings
type ProductionMeterReadingsMeterReadings struct {
	// The serial number of the meter.
	SerialNumber string `json:"serial_number"`
	// The odometer reading, in Watt-hours.
	Value int32 `json:"value"`
	// The time when the reading was taken, always prior or equal to the requested `end_at`.
	ReadAt int64 `json:"read_at"`
}

// NewProductionMeterReadingsMeterReadings instantiates a new ProductionMeterReadingsMeterReadings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductionMeterReadingsMeterReadings(serialNumber string, value int32, readAt int64) *ProductionMeterReadingsMeterReadings {
	this := ProductionMeterReadingsMeterReadings{}
	this.SerialNumber = serialNumber
	this.Value = value
	this.ReadAt = readAt
	return &this
}

// NewProductionMeterReadingsMeterReadingsWithDefaults instantiates a new ProductionMeterReadingsMeterReadings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductionMeterReadingsMeterReadingsWithDefaults() *ProductionMeterReadingsMeterReadings {
	this := ProductionMeterReadingsMeterReadings{}
	return &this
}

// GetSerialNumber returns the SerialNumber field value
func (o *ProductionMeterReadingsMeterReadings) GetSerialNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value
// and a boolean to check if the value has been set.
func (o *ProductionMeterReadingsMeterReadings) GetSerialNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SerialNumber, true
}

// SetSerialNumber sets field value
func (o *ProductionMeterReadingsMeterReadings) SetSerialNumber(v string) {
	o.SerialNumber = v
}

// GetValue returns the Value field value
func (o *ProductionMeterReadingsMeterReadings) GetValue() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *ProductionMeterReadingsMeterReadings) GetValueOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *ProductionMeterReadingsMeterReadings) SetValue(v int32) {
	o.Value = v
}

// GetReadAt returns the ReadAt field value
func (o *ProductionMeterReadingsMeterReadings) GetReadAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ReadAt
}

// GetReadAtOk returns a tuple with the ReadAt field value
// and a boolean to check if the value has been set.
func (o *ProductionMeterReadingsMeterReadings) GetReadAtOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ReadAt, true
}

// SetReadAt sets field value
func (o *ProductionMeterReadingsMeterReadings) SetReadAt(v int64) {
	o.ReadAt = v
}

func (o ProductionMeterReadingsMeterReadings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["serial_number"] = o.SerialNumber
	}
	if true {
		toSerialize["value"] = o.Value
	}
	if true {
		toSerialize["read_at"] = o.ReadAt
	}
	return json.Marshal(toSerialize)
}

type NullableProductionMeterReadingsMeterReadings struct {
	value *ProductionMeterReadingsMeterReadings
	isSet bool
}

func (v NullableProductionMeterReadingsMeterReadings) Get() *ProductionMeterReadingsMeterReadings {
	return v.value
}

func (v *NullableProductionMeterReadingsMeterReadings) Set(val *ProductionMeterReadingsMeterReadings) {
	v.value = val
	v.isSet = true
}

func (v NullableProductionMeterReadingsMeterReadings) IsSet() bool {
	return v.isSet
}

func (v *NullableProductionMeterReadingsMeterReadings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductionMeterReadingsMeterReadings(val *ProductionMeterReadingsMeterReadings) *NullableProductionMeterReadingsMeterReadings {
	return &NullableProductionMeterReadingsMeterReadings{value: val, isSet: true}
}

func (v NullableProductionMeterReadingsMeterReadings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductionMeterReadingsMeterReadings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


