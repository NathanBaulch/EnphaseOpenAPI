/*
 * The Enlighten Systems API
 *
 * The Enlighten Systems API is a JSON-based API that provides access to performance data for a PV system. By using the Enlighten Systems API, you agree to the Enphase Energy API License Agreement.  Please note that the Enlighten Systems API does not provide performance data at a panel or microinverter level.
 *
 * API version: 2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package enlighten

import (
	"encoding/json"
)

// InlineResponse2002Systems struct for InlineResponse2002Systems
type InlineResponse2002Systems struct {
	// The Enlighten ID of the system.
	SystemId int32 `json:"system_id"`
	// The name of the system. Even if the system owner has indicated their site is anonymous for public lists, the actual system name is returned here for identification purposes.
	SystemName string `json:"system_name"`
	// The display name of the system. Use this when displaying the system name on a public list or view.
	SystemPublicName string `json:"system_public_name"`
	// If the calling user belongs to a company and that company has provided its own identifiers for a system, that ID is included here. Otherwise, this attribute is not returned.
	Reference string `json:"reference"`
	// If any other companies have provided their own identifiers for a system, those identifiers are included here. Otherwise, this attribute is not returned.
	OtherReferences []string `json:"other_references"`
	// The two-letter code for the country where the system is located. See [ISO_3166-1_alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) for reference.
	Country string `json:"country"`
	// The two-letter code for the state where the system is located. See [ISO_3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) for reference.
	State string `json:"state"`
	// The name of the city where the system is located.
	City string `json:"city"`
	// The postal code where the system is located.
	PostalCode string `json:"postal_code"`
	// The timezone of the system.
	Timezone string `json:"timezone"`
	ConnectionType ConnectionType `json:"connection_type"`
	// The current status of the system. You can find this and more in the `meta` property.
	Status string `json:"status"`
	Meta Meta `json:"meta"`
}

// NewInlineResponse2002Systems instantiates a new InlineResponse2002Systems object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2002Systems(systemId int32, systemName string, systemPublicName string, reference string, otherReferences []string, country string, state string, city string, postalCode string, timezone string, connectionType ConnectionType, status string, meta Meta) *InlineResponse2002Systems {
	this := InlineResponse2002Systems{}
	this.SystemId = systemId
	this.SystemName = systemName
	this.SystemPublicName = systemPublicName
	this.Reference = reference
	this.OtherReferences = otherReferences
	this.Country = country
	this.State = state
	this.City = city
	this.PostalCode = postalCode
	this.Timezone = timezone
	this.ConnectionType = connectionType
	this.Status = status
	this.Meta = meta
	return &this
}

// NewInlineResponse2002SystemsWithDefaults instantiates a new InlineResponse2002Systems object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2002SystemsWithDefaults() *InlineResponse2002Systems {
	this := InlineResponse2002Systems{}
	return &this
}

// GetSystemId returns the SystemId field value
func (o *InlineResponse2002Systems) GetSystemId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SystemId
}

// GetSystemIdOk returns a tuple with the SystemId field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Systems) GetSystemIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SystemId, true
}

// SetSystemId sets field value
func (o *InlineResponse2002Systems) SetSystemId(v int32) {
	o.SystemId = v
}

// GetSystemName returns the SystemName field value
func (o *InlineResponse2002Systems) GetSystemName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SystemName
}

// GetSystemNameOk returns a tuple with the SystemName field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Systems) GetSystemNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SystemName, true
}

// SetSystemName sets field value
func (o *InlineResponse2002Systems) SetSystemName(v string) {
	o.SystemName = v
}

// GetSystemPublicName returns the SystemPublicName field value
func (o *InlineResponse2002Systems) GetSystemPublicName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SystemPublicName
}

// GetSystemPublicNameOk returns a tuple with the SystemPublicName field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Systems) GetSystemPublicNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SystemPublicName, true
}

// SetSystemPublicName sets field value
func (o *InlineResponse2002Systems) SetSystemPublicName(v string) {
	o.SystemPublicName = v
}

// GetReference returns the Reference field value
func (o *InlineResponse2002Systems) GetReference() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Systems) GetReferenceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Reference, true
}

// SetReference sets field value
func (o *InlineResponse2002Systems) SetReference(v string) {
	o.Reference = v
}

// GetOtherReferences returns the OtherReferences field value
func (o *InlineResponse2002Systems) GetOtherReferences() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.OtherReferences
}

// GetOtherReferencesOk returns a tuple with the OtherReferences field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Systems) GetOtherReferencesOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OtherReferences, true
}

// SetOtherReferences sets field value
func (o *InlineResponse2002Systems) SetOtherReferences(v []string) {
	o.OtherReferences = v
}

// GetCountry returns the Country field value
func (o *InlineResponse2002Systems) GetCountry() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Country
}

// GetCountryOk returns a tuple with the Country field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Systems) GetCountryOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Country, true
}

// SetCountry sets field value
func (o *InlineResponse2002Systems) SetCountry(v string) {
	o.Country = v
}

// GetState returns the State field value
func (o *InlineResponse2002Systems) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Systems) GetStateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *InlineResponse2002Systems) SetState(v string) {
	o.State = v
}

// GetCity returns the City field value
func (o *InlineResponse2002Systems) GetCity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.City
}

// GetCityOk returns a tuple with the City field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Systems) GetCityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.City, true
}

// SetCity sets field value
func (o *InlineResponse2002Systems) SetCity(v string) {
	o.City = v
}

// GetPostalCode returns the PostalCode field value
func (o *InlineResponse2002Systems) GetPostalCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Systems) GetPostalCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PostalCode, true
}

// SetPostalCode sets field value
func (o *InlineResponse2002Systems) SetPostalCode(v string) {
	o.PostalCode = v
}

// GetTimezone returns the Timezone field value
func (o *InlineResponse2002Systems) GetTimezone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Systems) GetTimezoneOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Timezone, true
}

// SetTimezone sets field value
func (o *InlineResponse2002Systems) SetTimezone(v string) {
	o.Timezone = v
}

// GetConnectionType returns the ConnectionType field value
func (o *InlineResponse2002Systems) GetConnectionType() ConnectionType {
	if o == nil {
		var ret ConnectionType
		return ret
	}

	return o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Systems) GetConnectionTypeOk() (*ConnectionType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ConnectionType, true
}

// SetConnectionType sets field value
func (o *InlineResponse2002Systems) SetConnectionType(v ConnectionType) {
	o.ConnectionType = v
}

// GetStatus returns the Status field value
func (o *InlineResponse2002Systems) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Systems) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *InlineResponse2002Systems) SetStatus(v string) {
	o.Status = v
}

// GetMeta returns the Meta field value
func (o *InlineResponse2002Systems) GetMeta() Meta {
	if o == nil {
		var ret Meta
		return ret
	}

	return o.Meta
}

// GetMetaOk returns a tuple with the Meta field value
// and a boolean to check if the value has been set.
func (o *InlineResponse2002Systems) GetMetaOk() (*Meta, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Meta, true
}

// SetMeta sets field value
func (o *InlineResponse2002Systems) SetMeta(v Meta) {
	o.Meta = v
}

func (o InlineResponse2002Systems) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["system_id"] = o.SystemId
	}
	if true {
		toSerialize["system_name"] = o.SystemName
	}
	if true {
		toSerialize["system_public_name"] = o.SystemPublicName
	}
	if true {
		toSerialize["reference"] = o.Reference
	}
	if true {
		toSerialize["other_references"] = o.OtherReferences
	}
	if true {
		toSerialize["country"] = o.Country
	}
	if true {
		toSerialize["state"] = o.State
	}
	if true {
		toSerialize["city"] = o.City
	}
	if true {
		toSerialize["postal_code"] = o.PostalCode
	}
	if true {
		toSerialize["timezone"] = o.Timezone
	}
	if true {
		toSerialize["connection_type"] = o.ConnectionType
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["meta"] = o.Meta
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2002Systems struct {
	value *InlineResponse2002Systems
	isSet bool
}

func (v NullableInlineResponse2002Systems) Get() *InlineResponse2002Systems {
	return v.value
}

func (v *NullableInlineResponse2002Systems) Set(val *InlineResponse2002Systems) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2002Systems) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2002Systems) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2002Systems(val *InlineResponse2002Systems) *NullableInlineResponse2002Systems {
	return &NullableInlineResponse2002Systems{value: val, isSet: true}
}

func (v NullableInlineResponse2002Systems) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2002Systems) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


