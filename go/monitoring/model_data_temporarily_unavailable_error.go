/*
The Enphase Monitoring API

Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monitoring

import (
	"encoding/json"
)

// checks if the DataTemporarilyUnavailableError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataTemporarilyUnavailableError{}

// DataTemporarilyUnavailableError struct for DataTemporarilyUnavailableError
type DataTemporarilyUnavailableError struct {
	// Error code.
	ErrorCode *int32 `json:"errorCode,omitempty"`
	// Error messages.
	ErrorMessages []string `json:"errorMessages,omitempty"`
}

// NewDataTemporarilyUnavailableError instantiates a new DataTemporarilyUnavailableError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataTemporarilyUnavailableError() *DataTemporarilyUnavailableError {
	this := DataTemporarilyUnavailableError{}
	return &this
}

// NewDataTemporarilyUnavailableErrorWithDefaults instantiates a new DataTemporarilyUnavailableError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataTemporarilyUnavailableErrorWithDefaults() *DataTemporarilyUnavailableError {
	this := DataTemporarilyUnavailableError{}
	return &this
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *DataTemporarilyUnavailableError) GetErrorCode() int32 {
	if o == nil || IsNil(o.ErrorCode) {
		var ret int32
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataTemporarilyUnavailableError) GetErrorCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *DataTemporarilyUnavailableError) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given int32 and assigns it to the ErrorCode field.
func (o *DataTemporarilyUnavailableError) SetErrorCode(v int32) {
	o.ErrorCode = &v
}

// GetErrorMessages returns the ErrorMessages field value if set, zero value otherwise.
func (o *DataTemporarilyUnavailableError) GetErrorMessages() []string {
	if o == nil || IsNil(o.ErrorMessages) {
		var ret []string
		return ret
	}
	return o.ErrorMessages
}

// GetErrorMessagesOk returns a tuple with the ErrorMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataTemporarilyUnavailableError) GetErrorMessagesOk() ([]string, bool) {
	if o == nil || IsNil(o.ErrorMessages) {
		return nil, false
	}
	return o.ErrorMessages, true
}

// HasErrorMessages returns a boolean if a field has been set.
func (o *DataTemporarilyUnavailableError) HasErrorMessages() bool {
	if o != nil && !IsNil(o.ErrorMessages) {
		return true
	}

	return false
}

// SetErrorMessages gets a reference to the given []string and assigns it to the ErrorMessages field.
func (o *DataTemporarilyUnavailableError) SetErrorMessages(v []string) {
	o.ErrorMessages = v
}

func (o DataTemporarilyUnavailableError) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataTemporarilyUnavailableError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if !IsNil(o.ErrorMessages) {
		toSerialize["errorMessages"] = o.ErrorMessages
	}
	return toSerialize, nil
}

type NullableDataTemporarilyUnavailableError struct {
	value *DataTemporarilyUnavailableError
	isSet bool
}

func (v NullableDataTemporarilyUnavailableError) Get() *DataTemporarilyUnavailableError {
	return v.value
}

func (v *NullableDataTemporarilyUnavailableError) Set(val *DataTemporarilyUnavailableError) {
	v.value = val
	v.isSet = true
}

func (v NullableDataTemporarilyUnavailableError) IsSet() bool {
	return v.isSet
}

func (v *NullableDataTemporarilyUnavailableError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataTemporarilyUnavailableError(val *DataTemporarilyUnavailableError) *NullableDataTemporarilyUnavailableError {
	return &NullableDataTemporarilyUnavailableError{value: val, isSet: true}
}

func (v NullableDataTemporarilyUnavailableError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataTemporarilyUnavailableError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


