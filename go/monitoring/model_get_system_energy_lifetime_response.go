/*
The Enphase Monitoring API

Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monitoring

import (
	"encoding/json"
)

// checks if the GetSystemEnergyLifetimeResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSystemEnergyLifetimeResponse{}

// GetSystemEnergyLifetimeResponse struct for GetSystemEnergyLifetimeResponse
type GetSystemEnergyLifetimeResponse struct {
	// System ID.
	SystemId *int32 `json:"system_id,omitempty"`
	// When no start_date parameter is specified on the request, this is the operational_date of the system. May be null if system has never produced. When a start_date parameter is included in the request, it is included here in the response.
	StartDate *string `json:"start_date,omitempty"`
	// First day in the time series when measurements are taken from a meter instead of from microinverters. This field is not present unless the system has a meter.
	MeterStartDate *string `json:"meter_start_date,omitempty"`
	// An array of production measurements, one for each day since the system started producing, or one for each day of the requested period. If the system has never produced energy, the array may be empty.
	Production []int32 `json:"production,omitempty"`
	MicroProduction []int32 `json:"micro_production,omitempty"`
	MeterProduction []int32 `json:"meter_production,omitempty"`
	Meta *Meta `json:"meta,omitempty"`
}

// NewGetSystemEnergyLifetimeResponse instantiates a new GetSystemEnergyLifetimeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSystemEnergyLifetimeResponse() *GetSystemEnergyLifetimeResponse {
	this := GetSystemEnergyLifetimeResponse{}
	return &this
}

// NewGetSystemEnergyLifetimeResponseWithDefaults instantiates a new GetSystemEnergyLifetimeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSystemEnergyLifetimeResponseWithDefaults() *GetSystemEnergyLifetimeResponse {
	this := GetSystemEnergyLifetimeResponse{}
	return &this
}

// GetSystemId returns the SystemId field value if set, zero value otherwise.
func (o *GetSystemEnergyLifetimeResponse) GetSystemId() int32 {
	if o == nil || IsNil(o.SystemId) {
		var ret int32
		return ret
	}
	return *o.SystemId
}

// GetSystemIdOk returns a tuple with the SystemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemEnergyLifetimeResponse) GetSystemIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SystemId) {
		return nil, false
	}
	return o.SystemId, true
}

// HasSystemId returns a boolean if a field has been set.
func (o *GetSystemEnergyLifetimeResponse) HasSystemId() bool {
	if o != nil && !IsNil(o.SystemId) {
		return true
	}

	return false
}

// SetSystemId gets a reference to the given int32 and assigns it to the SystemId field.
func (o *GetSystemEnergyLifetimeResponse) SetSystemId(v int32) {
	o.SystemId = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *GetSystemEnergyLifetimeResponse) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemEnergyLifetimeResponse) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *GetSystemEnergyLifetimeResponse) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *GetSystemEnergyLifetimeResponse) SetStartDate(v string) {
	o.StartDate = &v
}

// GetMeterStartDate returns the MeterStartDate field value if set, zero value otherwise.
func (o *GetSystemEnergyLifetimeResponse) GetMeterStartDate() string {
	if o == nil || IsNil(o.MeterStartDate) {
		var ret string
		return ret
	}
	return *o.MeterStartDate
}

// GetMeterStartDateOk returns a tuple with the MeterStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemEnergyLifetimeResponse) GetMeterStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.MeterStartDate) {
		return nil, false
	}
	return o.MeterStartDate, true
}

// HasMeterStartDate returns a boolean if a field has been set.
func (o *GetSystemEnergyLifetimeResponse) HasMeterStartDate() bool {
	if o != nil && !IsNil(o.MeterStartDate) {
		return true
	}

	return false
}

// SetMeterStartDate gets a reference to the given string and assigns it to the MeterStartDate field.
func (o *GetSystemEnergyLifetimeResponse) SetMeterStartDate(v string) {
	o.MeterStartDate = &v
}

// GetProduction returns the Production field value if set, zero value otherwise.
func (o *GetSystemEnergyLifetimeResponse) GetProduction() []int32 {
	if o == nil || IsNil(o.Production) {
		var ret []int32
		return ret
	}
	return o.Production
}

// GetProductionOk returns a tuple with the Production field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemEnergyLifetimeResponse) GetProductionOk() ([]int32, bool) {
	if o == nil || IsNil(o.Production) {
		return nil, false
	}
	return o.Production, true
}

// HasProduction returns a boolean if a field has been set.
func (o *GetSystemEnergyLifetimeResponse) HasProduction() bool {
	if o != nil && !IsNil(o.Production) {
		return true
	}

	return false
}

// SetProduction gets a reference to the given []int32 and assigns it to the Production field.
func (o *GetSystemEnergyLifetimeResponse) SetProduction(v []int32) {
	o.Production = v
}

// GetMicroProduction returns the MicroProduction field value if set, zero value otherwise.
func (o *GetSystemEnergyLifetimeResponse) GetMicroProduction() []int32 {
	if o == nil || IsNil(o.MicroProduction) {
		var ret []int32
		return ret
	}
	return o.MicroProduction
}

// GetMicroProductionOk returns a tuple with the MicroProduction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemEnergyLifetimeResponse) GetMicroProductionOk() ([]int32, bool) {
	if o == nil || IsNil(o.MicroProduction) {
		return nil, false
	}
	return o.MicroProduction, true
}

// HasMicroProduction returns a boolean if a field has been set.
func (o *GetSystemEnergyLifetimeResponse) HasMicroProduction() bool {
	if o != nil && !IsNil(o.MicroProduction) {
		return true
	}

	return false
}

// SetMicroProduction gets a reference to the given []int32 and assigns it to the MicroProduction field.
func (o *GetSystemEnergyLifetimeResponse) SetMicroProduction(v []int32) {
	o.MicroProduction = v
}

// GetMeterProduction returns the MeterProduction field value if set, zero value otherwise.
func (o *GetSystemEnergyLifetimeResponse) GetMeterProduction() []int32 {
	if o == nil || IsNil(o.MeterProduction) {
		var ret []int32
		return ret
	}
	return o.MeterProduction
}

// GetMeterProductionOk returns a tuple with the MeterProduction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemEnergyLifetimeResponse) GetMeterProductionOk() ([]int32, bool) {
	if o == nil || IsNil(o.MeterProduction) {
		return nil, false
	}
	return o.MeterProduction, true
}

// HasMeterProduction returns a boolean if a field has been set.
func (o *GetSystemEnergyLifetimeResponse) HasMeterProduction() bool {
	if o != nil && !IsNil(o.MeterProduction) {
		return true
	}

	return false
}

// SetMeterProduction gets a reference to the given []int32 and assigns it to the MeterProduction field.
func (o *GetSystemEnergyLifetimeResponse) SetMeterProduction(v []int32) {
	o.MeterProduction = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *GetSystemEnergyLifetimeResponse) GetMeta() Meta {
	if o == nil || IsNil(o.Meta) {
		var ret Meta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemEnergyLifetimeResponse) GetMetaOk() (*Meta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *GetSystemEnergyLifetimeResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given Meta and assigns it to the Meta field.
func (o *GetSystemEnergyLifetimeResponse) SetMeta(v Meta) {
	o.Meta = &v
}

func (o GetSystemEnergyLifetimeResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSystemEnergyLifetimeResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SystemId) {
		toSerialize["system_id"] = o.SystemId
	}
	if !IsNil(o.StartDate) {
		toSerialize["start_date"] = o.StartDate
	}
	if !IsNil(o.MeterStartDate) {
		toSerialize["meter_start_date"] = o.MeterStartDate
	}
	if !IsNil(o.Production) {
		toSerialize["production"] = o.Production
	}
	if !IsNil(o.MicroProduction) {
		toSerialize["micro_production"] = o.MicroProduction
	}
	if !IsNil(o.MeterProduction) {
		toSerialize["meter_production"] = o.MeterProduction
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableGetSystemEnergyLifetimeResponse struct {
	value *GetSystemEnergyLifetimeResponse
	isSet bool
}

func (v NullableGetSystemEnergyLifetimeResponse) Get() *GetSystemEnergyLifetimeResponse {
	return v.value
}

func (v *NullableGetSystemEnergyLifetimeResponse) Set(val *GetSystemEnergyLifetimeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSystemEnergyLifetimeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSystemEnergyLifetimeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSystemEnergyLifetimeResponse(val *GetSystemEnergyLifetimeResponse) *NullableGetSystemEnergyLifetimeResponse {
	return &NullableGetSystemEnergyLifetimeResponse{value: val, isSet: true}
}

func (v NullableGetSystemEnergyLifetimeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSystemEnergyLifetimeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


