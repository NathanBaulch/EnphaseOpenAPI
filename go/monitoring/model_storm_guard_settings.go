/*
The Enphase Monitoring API

Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monitoring

import (
	"encoding/json"
)

// checks if the StormGuardSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StormGuardSettings{}

// StormGuardSettings struct for StormGuardSettings
type StormGuardSettings struct {
	SystemId *int32 `json:"system_id,omitempty"`
	// Overrides your battery profile to full backup mode when a severe weather condition alert is issued in the locality.
	StormGuardStatus *string `json:"storm_guard_status,omitempty"`
	// True if severe weather condition alert is issued in the locality.
	StormAlert *bool `json:"storm_alert,omitempty"`
}

// NewStormGuardSettings instantiates a new StormGuardSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStormGuardSettings() *StormGuardSettings {
	this := StormGuardSettings{}
	return &this
}

// NewStormGuardSettingsWithDefaults instantiates a new StormGuardSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStormGuardSettingsWithDefaults() *StormGuardSettings {
	this := StormGuardSettings{}
	return &this
}

// GetSystemId returns the SystemId field value if set, zero value otherwise.
func (o *StormGuardSettings) GetSystemId() int32 {
	if o == nil || IsNil(o.SystemId) {
		var ret int32
		return ret
	}
	return *o.SystemId
}

// GetSystemIdOk returns a tuple with the SystemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StormGuardSettings) GetSystemIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SystemId) {
		return nil, false
	}
	return o.SystemId, true
}

// HasSystemId returns a boolean if a field has been set.
func (o *StormGuardSettings) HasSystemId() bool {
	if o != nil && !IsNil(o.SystemId) {
		return true
	}

	return false
}

// SetSystemId gets a reference to the given int32 and assigns it to the SystemId field.
func (o *StormGuardSettings) SetSystemId(v int32) {
	o.SystemId = &v
}

// GetStormGuardStatus returns the StormGuardStatus field value if set, zero value otherwise.
func (o *StormGuardSettings) GetStormGuardStatus() string {
	if o == nil || IsNil(o.StormGuardStatus) {
		var ret string
		return ret
	}
	return *o.StormGuardStatus
}

// GetStormGuardStatusOk returns a tuple with the StormGuardStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StormGuardSettings) GetStormGuardStatusOk() (*string, bool) {
	if o == nil || IsNil(o.StormGuardStatus) {
		return nil, false
	}
	return o.StormGuardStatus, true
}

// HasStormGuardStatus returns a boolean if a field has been set.
func (o *StormGuardSettings) HasStormGuardStatus() bool {
	if o != nil && !IsNil(o.StormGuardStatus) {
		return true
	}

	return false
}

// SetStormGuardStatus gets a reference to the given string and assigns it to the StormGuardStatus field.
func (o *StormGuardSettings) SetStormGuardStatus(v string) {
	o.StormGuardStatus = &v
}

// GetStormAlert returns the StormAlert field value if set, zero value otherwise.
func (o *StormGuardSettings) GetStormAlert() bool {
	if o == nil || IsNil(o.StormAlert) {
		var ret bool
		return ret
	}
	return *o.StormAlert
}

// GetStormAlertOk returns a tuple with the StormAlert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StormGuardSettings) GetStormAlertOk() (*bool, bool) {
	if o == nil || IsNil(o.StormAlert) {
		return nil, false
	}
	return o.StormAlert, true
}

// HasStormAlert returns a boolean if a field has been set.
func (o *StormGuardSettings) HasStormAlert() bool {
	if o != nil && !IsNil(o.StormAlert) {
		return true
	}

	return false
}

// SetStormAlert gets a reference to the given bool and assigns it to the StormAlert field.
func (o *StormGuardSettings) SetStormAlert(v bool) {
	o.StormAlert = &v
}

func (o StormGuardSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StormGuardSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SystemId) {
		toSerialize["system_id"] = o.SystemId
	}
	if !IsNil(o.StormGuardStatus) {
		toSerialize["storm_guard_status"] = o.StormGuardStatus
	}
	if !IsNil(o.StormAlert) {
		toSerialize["storm_alert"] = o.StormAlert
	}
	return toSerialize, nil
}

type NullableStormGuardSettings struct {
	value *StormGuardSettings
	isSet bool
}

func (v NullableStormGuardSettings) Get() *StormGuardSettings {
	return v.value
}

func (v *NullableStormGuardSettings) Set(val *StormGuardSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableStormGuardSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableStormGuardSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStormGuardSettings(val *StormGuardSettings) *NullableStormGuardSettings {
	return &NullableStormGuardSettings{value: val, isSet: true}
}

func (v NullableStormGuardSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStormGuardSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


