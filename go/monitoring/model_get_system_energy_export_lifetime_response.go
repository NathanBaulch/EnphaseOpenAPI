/*
The Enphase Monitoring API

Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monitoring

import (
	"encoding/json"
)

// checks if the GetSystemEnergyExportLifetimeResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSystemEnergyExportLifetimeResponse{}

// GetSystemEnergyExportLifetimeResponse struct for GetSystemEnergyExportLifetimeResponse
type GetSystemEnergyExportLifetimeResponse struct {
	// Unique numeric ID of the system.
	SystemId *int32 `json:"system_id,omitempty"`
	// When no start_date parameter is specified on the request, defaults to the operational_date of the system. May be null if system has never produced. When a start_date parameter is included in the request, the same is included in the response.
	StartDate *string `json:"start_date,omitempty"`
	// An array of export measurements, one for each day since the system started producing, or one for each day of the requested period. If the system has never produced energy, the array may be empty.
	Export []int32 `json:"export,omitempty"`
	Meta *Meta `json:"meta,omitempty"`
}

// NewGetSystemEnergyExportLifetimeResponse instantiates a new GetSystemEnergyExportLifetimeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSystemEnergyExportLifetimeResponse() *GetSystemEnergyExportLifetimeResponse {
	this := GetSystemEnergyExportLifetimeResponse{}
	return &this
}

// NewGetSystemEnergyExportLifetimeResponseWithDefaults instantiates a new GetSystemEnergyExportLifetimeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSystemEnergyExportLifetimeResponseWithDefaults() *GetSystemEnergyExportLifetimeResponse {
	this := GetSystemEnergyExportLifetimeResponse{}
	return &this
}

// GetSystemId returns the SystemId field value if set, zero value otherwise.
func (o *GetSystemEnergyExportLifetimeResponse) GetSystemId() int32 {
	if o == nil || IsNil(o.SystemId) {
		var ret int32
		return ret
	}
	return *o.SystemId
}

// GetSystemIdOk returns a tuple with the SystemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemEnergyExportLifetimeResponse) GetSystemIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SystemId) {
		return nil, false
	}
	return o.SystemId, true
}

// HasSystemId returns a boolean if a field has been set.
func (o *GetSystemEnergyExportLifetimeResponse) HasSystemId() bool {
	if o != nil && !IsNil(o.SystemId) {
		return true
	}

	return false
}

// SetSystemId gets a reference to the given int32 and assigns it to the SystemId field.
func (o *GetSystemEnergyExportLifetimeResponse) SetSystemId(v int32) {
	o.SystemId = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *GetSystemEnergyExportLifetimeResponse) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemEnergyExportLifetimeResponse) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *GetSystemEnergyExportLifetimeResponse) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *GetSystemEnergyExportLifetimeResponse) SetStartDate(v string) {
	o.StartDate = &v
}

// GetExport returns the Export field value if set, zero value otherwise.
func (o *GetSystemEnergyExportLifetimeResponse) GetExport() []int32 {
	if o == nil || IsNil(o.Export) {
		var ret []int32
		return ret
	}
	return o.Export
}

// GetExportOk returns a tuple with the Export field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemEnergyExportLifetimeResponse) GetExportOk() ([]int32, bool) {
	if o == nil || IsNil(o.Export) {
		return nil, false
	}
	return o.Export, true
}

// HasExport returns a boolean if a field has been set.
func (o *GetSystemEnergyExportLifetimeResponse) HasExport() bool {
	if o != nil && !IsNil(o.Export) {
		return true
	}

	return false
}

// SetExport gets a reference to the given []int32 and assigns it to the Export field.
func (o *GetSystemEnergyExportLifetimeResponse) SetExport(v []int32) {
	o.Export = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *GetSystemEnergyExportLifetimeResponse) GetMeta() Meta {
	if o == nil || IsNil(o.Meta) {
		var ret Meta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemEnergyExportLifetimeResponse) GetMetaOk() (*Meta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *GetSystemEnergyExportLifetimeResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given Meta and assigns it to the Meta field.
func (o *GetSystemEnergyExportLifetimeResponse) SetMeta(v Meta) {
	o.Meta = &v
}

func (o GetSystemEnergyExportLifetimeResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSystemEnergyExportLifetimeResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SystemId) {
		toSerialize["system_id"] = o.SystemId
	}
	if !IsNil(o.StartDate) {
		toSerialize["start_date"] = o.StartDate
	}
	if !IsNil(o.Export) {
		toSerialize["export"] = o.Export
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableGetSystemEnergyExportLifetimeResponse struct {
	value *GetSystemEnergyExportLifetimeResponse
	isSet bool
}

func (v NullableGetSystemEnergyExportLifetimeResponse) Get() *GetSystemEnergyExportLifetimeResponse {
	return v.value
}

func (v *NullableGetSystemEnergyExportLifetimeResponse) Set(val *GetSystemEnergyExportLifetimeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSystemEnergyExportLifetimeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSystemEnergyExportLifetimeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSystemEnergyExportLifetimeResponse(val *GetSystemEnergyExportLifetimeResponse) *NullableGetSystemEnergyExportLifetimeResponse {
	return &NullableGetSystemEnergyExportLifetimeResponse{value: val, isSet: true}
}

func (v NullableGetSystemEnergyExportLifetimeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSystemEnergyExportLifetimeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


