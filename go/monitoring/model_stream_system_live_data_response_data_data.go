/*
The Enphase Monitoring API

Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monitoring

import (
	"encoding/json"
)

// checks if the StreamSystemLiveDataResponseDataData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StreamSystemLiveDataResponseDataData{}

// StreamSystemLiveDataResponseDataData struct for StreamSystemLiveDataResponseDataData
type StreamSystemLiveDataResponseDataData struct {
	// Battery mode of the site. Available values are Savings Mode, Full Backup, and Self-consumption.
	BatteryMode *string `json:"battery_mode,omitempty"`
	// Battery power in watts; Power will be positive in case of discharge and negative in case of charge.
	BatteryPower *int32 `json:"battery_power,omitempty"`
	// Battery soc in percentage.
	BatterySoc *int32 `json:"battery_soc,omitempty"`
	// Consumption power in watts.
	ConsumptionPower *int32 `json:"consumption_power,omitempty"`
	EnvoySerialNumber []string `json:"envoy_serial_number,omitempty"`
	// Generator power in watts.
	GeneratorPower *int32 `json:"generator_power,omitempty"`
	// Grid power in watts; Power will be negative in case of export and positive in case of import.
	GridPower *int32 `json:"grid_power,omitempty"`
	// Grid state of the site. Available values are On Grid, Off Grid, Unknown.
	GridStatus *string `json:"grid_status,omitempty"`
	// PV power in watts.
	PvPower *int32 `json:"pv_power,omitempty"`
	// The unique numeric ID of the system.
	SystemId *int32 `json:"system_id,omitempty"`
}

// NewStreamSystemLiveDataResponseDataData instantiates a new StreamSystemLiveDataResponseDataData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStreamSystemLiveDataResponseDataData() *StreamSystemLiveDataResponseDataData {
	this := StreamSystemLiveDataResponseDataData{}
	return &this
}

// NewStreamSystemLiveDataResponseDataDataWithDefaults instantiates a new StreamSystemLiveDataResponseDataData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStreamSystemLiveDataResponseDataDataWithDefaults() *StreamSystemLiveDataResponseDataData {
	this := StreamSystemLiveDataResponseDataData{}
	return &this
}

// GetBatteryMode returns the BatteryMode field value if set, zero value otherwise.
func (o *StreamSystemLiveDataResponseDataData) GetBatteryMode() string {
	if o == nil || IsNil(o.BatteryMode) {
		var ret string
		return ret
	}
	return *o.BatteryMode
}

// GetBatteryModeOk returns a tuple with the BatteryMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamSystemLiveDataResponseDataData) GetBatteryModeOk() (*string, bool) {
	if o == nil || IsNil(o.BatteryMode) {
		return nil, false
	}
	return o.BatteryMode, true
}

// HasBatteryMode returns a boolean if a field has been set.
func (o *StreamSystemLiveDataResponseDataData) HasBatteryMode() bool {
	if o != nil && !IsNil(o.BatteryMode) {
		return true
	}

	return false
}

// SetBatteryMode gets a reference to the given string and assigns it to the BatteryMode field.
func (o *StreamSystemLiveDataResponseDataData) SetBatteryMode(v string) {
	o.BatteryMode = &v
}

// GetBatteryPower returns the BatteryPower field value if set, zero value otherwise.
func (o *StreamSystemLiveDataResponseDataData) GetBatteryPower() int32 {
	if o == nil || IsNil(o.BatteryPower) {
		var ret int32
		return ret
	}
	return *o.BatteryPower
}

// GetBatteryPowerOk returns a tuple with the BatteryPower field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamSystemLiveDataResponseDataData) GetBatteryPowerOk() (*int32, bool) {
	if o == nil || IsNil(o.BatteryPower) {
		return nil, false
	}
	return o.BatteryPower, true
}

// HasBatteryPower returns a boolean if a field has been set.
func (o *StreamSystemLiveDataResponseDataData) HasBatteryPower() bool {
	if o != nil && !IsNil(o.BatteryPower) {
		return true
	}

	return false
}

// SetBatteryPower gets a reference to the given int32 and assigns it to the BatteryPower field.
func (o *StreamSystemLiveDataResponseDataData) SetBatteryPower(v int32) {
	o.BatteryPower = &v
}

// GetBatterySoc returns the BatterySoc field value if set, zero value otherwise.
func (o *StreamSystemLiveDataResponseDataData) GetBatterySoc() int32 {
	if o == nil || IsNil(o.BatterySoc) {
		var ret int32
		return ret
	}
	return *o.BatterySoc
}

// GetBatterySocOk returns a tuple with the BatterySoc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamSystemLiveDataResponseDataData) GetBatterySocOk() (*int32, bool) {
	if o == nil || IsNil(o.BatterySoc) {
		return nil, false
	}
	return o.BatterySoc, true
}

// HasBatterySoc returns a boolean if a field has been set.
func (o *StreamSystemLiveDataResponseDataData) HasBatterySoc() bool {
	if o != nil && !IsNil(o.BatterySoc) {
		return true
	}

	return false
}

// SetBatterySoc gets a reference to the given int32 and assigns it to the BatterySoc field.
func (o *StreamSystemLiveDataResponseDataData) SetBatterySoc(v int32) {
	o.BatterySoc = &v
}

// GetConsumptionPower returns the ConsumptionPower field value if set, zero value otherwise.
func (o *StreamSystemLiveDataResponseDataData) GetConsumptionPower() int32 {
	if o == nil || IsNil(o.ConsumptionPower) {
		var ret int32
		return ret
	}
	return *o.ConsumptionPower
}

// GetConsumptionPowerOk returns a tuple with the ConsumptionPower field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamSystemLiveDataResponseDataData) GetConsumptionPowerOk() (*int32, bool) {
	if o == nil || IsNil(o.ConsumptionPower) {
		return nil, false
	}
	return o.ConsumptionPower, true
}

// HasConsumptionPower returns a boolean if a field has been set.
func (o *StreamSystemLiveDataResponseDataData) HasConsumptionPower() bool {
	if o != nil && !IsNil(o.ConsumptionPower) {
		return true
	}

	return false
}

// SetConsumptionPower gets a reference to the given int32 and assigns it to the ConsumptionPower field.
func (o *StreamSystemLiveDataResponseDataData) SetConsumptionPower(v int32) {
	o.ConsumptionPower = &v
}

// GetEnvoySerialNumber returns the EnvoySerialNumber field value if set, zero value otherwise.
func (o *StreamSystemLiveDataResponseDataData) GetEnvoySerialNumber() []string {
	if o == nil || IsNil(o.EnvoySerialNumber) {
		var ret []string
		return ret
	}
	return o.EnvoySerialNumber
}

// GetEnvoySerialNumberOk returns a tuple with the EnvoySerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamSystemLiveDataResponseDataData) GetEnvoySerialNumberOk() ([]string, bool) {
	if o == nil || IsNil(o.EnvoySerialNumber) {
		return nil, false
	}
	return o.EnvoySerialNumber, true
}

// HasEnvoySerialNumber returns a boolean if a field has been set.
func (o *StreamSystemLiveDataResponseDataData) HasEnvoySerialNumber() bool {
	if o != nil && !IsNil(o.EnvoySerialNumber) {
		return true
	}

	return false
}

// SetEnvoySerialNumber gets a reference to the given []string and assigns it to the EnvoySerialNumber field.
func (o *StreamSystemLiveDataResponseDataData) SetEnvoySerialNumber(v []string) {
	o.EnvoySerialNumber = v
}

// GetGeneratorPower returns the GeneratorPower field value if set, zero value otherwise.
func (o *StreamSystemLiveDataResponseDataData) GetGeneratorPower() int32 {
	if o == nil || IsNil(o.GeneratorPower) {
		var ret int32
		return ret
	}
	return *o.GeneratorPower
}

// GetGeneratorPowerOk returns a tuple with the GeneratorPower field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamSystemLiveDataResponseDataData) GetGeneratorPowerOk() (*int32, bool) {
	if o == nil || IsNil(o.GeneratorPower) {
		return nil, false
	}
	return o.GeneratorPower, true
}

// HasGeneratorPower returns a boolean if a field has been set.
func (o *StreamSystemLiveDataResponseDataData) HasGeneratorPower() bool {
	if o != nil && !IsNil(o.GeneratorPower) {
		return true
	}

	return false
}

// SetGeneratorPower gets a reference to the given int32 and assigns it to the GeneratorPower field.
func (o *StreamSystemLiveDataResponseDataData) SetGeneratorPower(v int32) {
	o.GeneratorPower = &v
}

// GetGridPower returns the GridPower field value if set, zero value otherwise.
func (o *StreamSystemLiveDataResponseDataData) GetGridPower() int32 {
	if o == nil || IsNil(o.GridPower) {
		var ret int32
		return ret
	}
	return *o.GridPower
}

// GetGridPowerOk returns a tuple with the GridPower field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamSystemLiveDataResponseDataData) GetGridPowerOk() (*int32, bool) {
	if o == nil || IsNil(o.GridPower) {
		return nil, false
	}
	return o.GridPower, true
}

// HasGridPower returns a boolean if a field has been set.
func (o *StreamSystemLiveDataResponseDataData) HasGridPower() bool {
	if o != nil && !IsNil(o.GridPower) {
		return true
	}

	return false
}

// SetGridPower gets a reference to the given int32 and assigns it to the GridPower field.
func (o *StreamSystemLiveDataResponseDataData) SetGridPower(v int32) {
	o.GridPower = &v
}

// GetGridStatus returns the GridStatus field value if set, zero value otherwise.
func (o *StreamSystemLiveDataResponseDataData) GetGridStatus() string {
	if o == nil || IsNil(o.GridStatus) {
		var ret string
		return ret
	}
	return *o.GridStatus
}

// GetGridStatusOk returns a tuple with the GridStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamSystemLiveDataResponseDataData) GetGridStatusOk() (*string, bool) {
	if o == nil || IsNil(o.GridStatus) {
		return nil, false
	}
	return o.GridStatus, true
}

// HasGridStatus returns a boolean if a field has been set.
func (o *StreamSystemLiveDataResponseDataData) HasGridStatus() bool {
	if o != nil && !IsNil(o.GridStatus) {
		return true
	}

	return false
}

// SetGridStatus gets a reference to the given string and assigns it to the GridStatus field.
func (o *StreamSystemLiveDataResponseDataData) SetGridStatus(v string) {
	o.GridStatus = &v
}

// GetPvPower returns the PvPower field value if set, zero value otherwise.
func (o *StreamSystemLiveDataResponseDataData) GetPvPower() int32 {
	if o == nil || IsNil(o.PvPower) {
		var ret int32
		return ret
	}
	return *o.PvPower
}

// GetPvPowerOk returns a tuple with the PvPower field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamSystemLiveDataResponseDataData) GetPvPowerOk() (*int32, bool) {
	if o == nil || IsNil(o.PvPower) {
		return nil, false
	}
	return o.PvPower, true
}

// HasPvPower returns a boolean if a field has been set.
func (o *StreamSystemLiveDataResponseDataData) HasPvPower() bool {
	if o != nil && !IsNil(o.PvPower) {
		return true
	}

	return false
}

// SetPvPower gets a reference to the given int32 and assigns it to the PvPower field.
func (o *StreamSystemLiveDataResponseDataData) SetPvPower(v int32) {
	o.PvPower = &v
}

// GetSystemId returns the SystemId field value if set, zero value otherwise.
func (o *StreamSystemLiveDataResponseDataData) GetSystemId() int32 {
	if o == nil || IsNil(o.SystemId) {
		var ret int32
		return ret
	}
	return *o.SystemId
}

// GetSystemIdOk returns a tuple with the SystemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamSystemLiveDataResponseDataData) GetSystemIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SystemId) {
		return nil, false
	}
	return o.SystemId, true
}

// HasSystemId returns a boolean if a field has been set.
func (o *StreamSystemLiveDataResponseDataData) HasSystemId() bool {
	if o != nil && !IsNil(o.SystemId) {
		return true
	}

	return false
}

// SetSystemId gets a reference to the given int32 and assigns it to the SystemId field.
func (o *StreamSystemLiveDataResponseDataData) SetSystemId(v int32) {
	o.SystemId = &v
}

func (o StreamSystemLiveDataResponseDataData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StreamSystemLiveDataResponseDataData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BatteryMode) {
		toSerialize["battery_mode"] = o.BatteryMode
	}
	if !IsNil(o.BatteryPower) {
		toSerialize["battery_power"] = o.BatteryPower
	}
	if !IsNil(o.BatterySoc) {
		toSerialize["battery_soc"] = o.BatterySoc
	}
	if !IsNil(o.ConsumptionPower) {
		toSerialize["consumption_power"] = o.ConsumptionPower
	}
	if !IsNil(o.EnvoySerialNumber) {
		toSerialize["envoy_serial_number"] = o.EnvoySerialNumber
	}
	if !IsNil(o.GeneratorPower) {
		toSerialize["generator_power"] = o.GeneratorPower
	}
	if !IsNil(o.GridPower) {
		toSerialize["grid_power"] = o.GridPower
	}
	if !IsNil(o.GridStatus) {
		toSerialize["grid_status"] = o.GridStatus
	}
	if !IsNil(o.PvPower) {
		toSerialize["pv_power"] = o.PvPower
	}
	if !IsNil(o.SystemId) {
		toSerialize["system_id"] = o.SystemId
	}
	return toSerialize, nil
}

type NullableStreamSystemLiveDataResponseDataData struct {
	value *StreamSystemLiveDataResponseDataData
	isSet bool
}

func (v NullableStreamSystemLiveDataResponseDataData) Get() *StreamSystemLiveDataResponseDataData {
	return v.value
}

func (v *NullableStreamSystemLiveDataResponseDataData) Set(val *StreamSystemLiveDataResponseDataData) {
	v.value = val
	v.isSet = true
}

func (v NullableStreamSystemLiveDataResponseDataData) IsSet() bool {
	return v.isSet
}

func (v *NullableStreamSystemLiveDataResponseDataData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStreamSystemLiveDataResponseDataData(val *StreamSystemLiveDataResponseDataData) *NullableStreamSystemLiveDataResponseDataData {
	return &NullableStreamSystemLiveDataResponseDataData{value: val, isSet: true}
}

func (v NullableStreamSystemLiveDataResponseDataData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStreamSystemLiveDataResponseDataData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


