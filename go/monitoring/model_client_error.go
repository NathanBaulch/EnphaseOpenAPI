/*
The Enphase Monitoring API

Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monitoring

import (
	"encoding/json"
)

// checks if the ClientError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientError{}

// ClientError struct for ClientError
type ClientError struct {
	// Error type.
	Message *string `json:"message,omitempty"`
	// Error details.
	Details *string `json:"details,omitempty"`
	// Error code.
	Code *int32 `json:"code,omitempty"`
}

// NewClientError instantiates a new ClientError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientError() *ClientError {
	this := ClientError{}
	return &this
}

// NewClientErrorWithDefaults instantiates a new ClientError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientErrorWithDefaults() *ClientError {
	this := ClientError{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ClientError) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientError) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ClientError) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ClientError) SetMessage(v string) {
	o.Message = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *ClientError) GetDetails() string {
	if o == nil || IsNil(o.Details) {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientError) GetDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *ClientError) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *ClientError) SetDetails(v string) {
	o.Details = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ClientError) GetCode() int32 {
	if o == nil || IsNil(o.Code) {
		var ret int32
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientError) GetCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ClientError) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given int32 and assigns it to the Code field.
func (o *ClientError) SetCode(v int32) {
	o.Code = &v
}

func (o ClientError) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	return toSerialize, nil
}

type NullableClientError struct {
	value *ClientError
	isSet bool
}

func (v NullableClientError) Get() *ClientError {
	return v.value
}

func (v *NullableClientError) Set(val *ClientError) {
	v.value = val
	v.isSet = true
}

func (v NullableClientError) IsSet() bool {
	return v.isSet
}

func (v *NullableClientError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientError(val *ClientError) *NullableClientError {
	return &NullableClientError{value: val, isSet: true}
}

func (v NullableClientError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


