/*
The Enphase Monitoring API

Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monitoring

import (
	"encoding/json"
)

// checks if the UpdateSystemLoadControlSettingsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateSystemLoadControlSettingsRequest{}

// UpdateSystemLoadControlSettingsRequest struct for UpdateSystemLoadControlSettingsRequest
type UpdateSystemLoadControlSettingsRequest struct {
	// Name of the dry contact. Name cannot be changed. It is only used to identify the dry contact that needs to be updated.
	Name string `json:"name"`
	// Load Name of the load. Load Name cannot be changed. It is only used to identify the dry contact that needs to be updated.
	LoadName *string `json:"load_name,omitempty"`
	// Mode. Available values are \"Scheduled\", \"Basic\", \"Advanced_BatteryPowered\", \"Manual_always_not_powered\", \"Manual_always_powered\", \"Advanced_GeneratorPowered\".
	Mode *string `json:"mode,omitempty"`
	// Applicable for advanced mode. Load will be powered off when the battery soc reaches this level. It can be between 10 to 90.
	SocLow *int32 `json:"soc_low,omitempty"`
	// Applicable for scheduled mode. Time in seconds. Load will powered on between essential_start_time and essential_end_time.
	EssentialStartTime *int32 `json:"essential_start_time,omitempty"`
	// Applicable for scheduled mode. Time in seconds. Load will powered on between essential_start_time and essential_end_time.
	EssentialEndTime *int32 `json:"essential_end_time,omitempty"`
}

// NewUpdateSystemLoadControlSettingsRequest instantiates a new UpdateSystemLoadControlSettingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSystemLoadControlSettingsRequest(name string) *UpdateSystemLoadControlSettingsRequest {
	this := UpdateSystemLoadControlSettingsRequest{}
	this.Name = name
	return &this
}

// NewUpdateSystemLoadControlSettingsRequestWithDefaults instantiates a new UpdateSystemLoadControlSettingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSystemLoadControlSettingsRequestWithDefaults() *UpdateSystemLoadControlSettingsRequest {
	this := UpdateSystemLoadControlSettingsRequest{}
	return &this
}

// GetName returns the Name field value
func (o *UpdateSystemLoadControlSettingsRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UpdateSystemLoadControlSettingsRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UpdateSystemLoadControlSettingsRequest) SetName(v string) {
	o.Name = v
}

// GetLoadName returns the LoadName field value if set, zero value otherwise.
func (o *UpdateSystemLoadControlSettingsRequest) GetLoadName() string {
	if o == nil || IsNil(o.LoadName) {
		var ret string
		return ret
	}
	return *o.LoadName
}

// GetLoadNameOk returns a tuple with the LoadName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSystemLoadControlSettingsRequest) GetLoadNameOk() (*string, bool) {
	if o == nil || IsNil(o.LoadName) {
		return nil, false
	}
	return o.LoadName, true
}

// HasLoadName returns a boolean if a field has been set.
func (o *UpdateSystemLoadControlSettingsRequest) HasLoadName() bool {
	if o != nil && !IsNil(o.LoadName) {
		return true
	}

	return false
}

// SetLoadName gets a reference to the given string and assigns it to the LoadName field.
func (o *UpdateSystemLoadControlSettingsRequest) SetLoadName(v string) {
	o.LoadName = &v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *UpdateSystemLoadControlSettingsRequest) GetMode() string {
	if o == nil || IsNil(o.Mode) {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSystemLoadControlSettingsRequest) GetModeOk() (*string, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *UpdateSystemLoadControlSettingsRequest) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *UpdateSystemLoadControlSettingsRequest) SetMode(v string) {
	o.Mode = &v
}

// GetSocLow returns the SocLow field value if set, zero value otherwise.
func (o *UpdateSystemLoadControlSettingsRequest) GetSocLow() int32 {
	if o == nil || IsNil(o.SocLow) {
		var ret int32
		return ret
	}
	return *o.SocLow
}

// GetSocLowOk returns a tuple with the SocLow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSystemLoadControlSettingsRequest) GetSocLowOk() (*int32, bool) {
	if o == nil || IsNil(o.SocLow) {
		return nil, false
	}
	return o.SocLow, true
}

// HasSocLow returns a boolean if a field has been set.
func (o *UpdateSystemLoadControlSettingsRequest) HasSocLow() bool {
	if o != nil && !IsNil(o.SocLow) {
		return true
	}

	return false
}

// SetSocLow gets a reference to the given int32 and assigns it to the SocLow field.
func (o *UpdateSystemLoadControlSettingsRequest) SetSocLow(v int32) {
	o.SocLow = &v
}

// GetEssentialStartTime returns the EssentialStartTime field value if set, zero value otherwise.
func (o *UpdateSystemLoadControlSettingsRequest) GetEssentialStartTime() int32 {
	if o == nil || IsNil(o.EssentialStartTime) {
		var ret int32
		return ret
	}
	return *o.EssentialStartTime
}

// GetEssentialStartTimeOk returns a tuple with the EssentialStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSystemLoadControlSettingsRequest) GetEssentialStartTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.EssentialStartTime) {
		return nil, false
	}
	return o.EssentialStartTime, true
}

// HasEssentialStartTime returns a boolean if a field has been set.
func (o *UpdateSystemLoadControlSettingsRequest) HasEssentialStartTime() bool {
	if o != nil && !IsNil(o.EssentialStartTime) {
		return true
	}

	return false
}

// SetEssentialStartTime gets a reference to the given int32 and assigns it to the EssentialStartTime field.
func (o *UpdateSystemLoadControlSettingsRequest) SetEssentialStartTime(v int32) {
	o.EssentialStartTime = &v
}

// GetEssentialEndTime returns the EssentialEndTime field value if set, zero value otherwise.
func (o *UpdateSystemLoadControlSettingsRequest) GetEssentialEndTime() int32 {
	if o == nil || IsNil(o.EssentialEndTime) {
		var ret int32
		return ret
	}
	return *o.EssentialEndTime
}

// GetEssentialEndTimeOk returns a tuple with the EssentialEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSystemLoadControlSettingsRequest) GetEssentialEndTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.EssentialEndTime) {
		return nil, false
	}
	return o.EssentialEndTime, true
}

// HasEssentialEndTime returns a boolean if a field has been set.
func (o *UpdateSystemLoadControlSettingsRequest) HasEssentialEndTime() bool {
	if o != nil && !IsNil(o.EssentialEndTime) {
		return true
	}

	return false
}

// SetEssentialEndTime gets a reference to the given int32 and assigns it to the EssentialEndTime field.
func (o *UpdateSystemLoadControlSettingsRequest) SetEssentialEndTime(v int32) {
	o.EssentialEndTime = &v
}

func (o UpdateSystemLoadControlSettingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateSystemLoadControlSettingsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.LoadName) {
		toSerialize["load_name"] = o.LoadName
	}
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	if !IsNil(o.SocLow) {
		toSerialize["soc_low"] = o.SocLow
	}
	if !IsNil(o.EssentialStartTime) {
		toSerialize["essential_start_time"] = o.EssentialStartTime
	}
	if !IsNil(o.EssentialEndTime) {
		toSerialize["essential_end_time"] = o.EssentialEndTime
	}
	return toSerialize, nil
}

type NullableUpdateSystemLoadControlSettingsRequest struct {
	value *UpdateSystemLoadControlSettingsRequest
	isSet bool
}

func (v NullableUpdateSystemLoadControlSettingsRequest) Get() *UpdateSystemLoadControlSettingsRequest {
	return v.value
}

func (v *NullableUpdateSystemLoadControlSettingsRequest) Set(val *UpdateSystemLoadControlSettingsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSystemLoadControlSettingsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSystemLoadControlSettingsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSystemLoadControlSettingsRequest(val *UpdateSystemLoadControlSettingsRequest) *NullableUpdateSystemLoadControlSettingsRequest {
	return &NullableUpdateSystemLoadControlSettingsRequest{value: val, isSet: true}
}

func (v NullableUpdateSystemLoadControlSettingsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSystemLoadControlSettingsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


