/*
The Enphase Monitoring API

Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monitoring

import (
	"encoding/json"
)

// checks if the SystemDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SystemDetails{}

// SystemDetails struct for SystemDetails
type SystemDetails struct {
	// Unique numeric ID of the system.
	SystemId *int32 `json:"system_id,omitempty"`
	// Name of the system.
	Name *string `json:"name,omitempty"`
	// Name displayed on the public system page. Available values are All, Residential System, Commercial etc. Default='Residential System'. Only for systems that allow public access.
	PublicName *string `json:"public_name,omitempty"`
	// Timezone to which the system belongs.
	Timezone *string `json:"timezone,omitempty"`
	Address *SystemDetailsAddress `json:"address,omitempty"`
	ConnectionType *SystemConnectionTypeEnum `json:"connection_type,omitempty"`
	// Energy generated by the system during its lifetime in Wh. It is returned only if the count is less than or equal to 100.
	EnergyLifetime *int32 `json:"energy_lifetime,omitempty"`
	// Energy generated by the system today in Wh. It is returned only if the count is less than or equal to 100.
	EnergyToday *int32 `json:"energy_today,omitempty"`
	// Size of the system. It is returned only if the count is less than or equal to 100.
	SystemSize *int32 `json:"system_size,omitempty"`
	Status *SystemStatusEnum `json:"status,omitempty"`
	// Timestamp (in epoch format) at which the system's Envoy last submitted a report.
	LastReportAt *int64 `json:"last_report_at,omitempty"`
	// Timestamp (in epoch format) at which the system's produced energy was last reported. Even if the last produced energy is 0, its timestamp will be returned.
	LastEnergyAt *int64 `json:"last_energy_at,omitempty"`
	// Timestamp (in epoch format) at which this system became operational. Corresponds to the system's interconnect time, if one is specified. Otherwise, it is the system's first reported interval end time.
	OperationalAt *int64 `json:"operational_at,omitempty"`
	AttachmentType *SystemAttachmentTypeEnum `json:"attachment_type,omitempty"`
	// Date on which the system was approved to connect to the grid.
	InterconnectDate *string `json:"interconnect_date,omitempty"`
	// If the calling user belongs to a company and that company has provided its own identifier for a system, that ID is included here. Otherwise, this attribute is not returned.
	Reference *string `json:"reference,omitempty"`
	// If any other companies have provided their own identifiers for a system, those identifiers are included here. Otherwise, this attribute is not returned.
	OtherReferences []string `json:"other_references,omitempty"`
}

// NewSystemDetails instantiates a new SystemDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemDetails() *SystemDetails {
	this := SystemDetails{}
	return &this
}

// NewSystemDetailsWithDefaults instantiates a new SystemDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemDetailsWithDefaults() *SystemDetails {
	this := SystemDetails{}
	return &this
}

// GetSystemId returns the SystemId field value if set, zero value otherwise.
func (o *SystemDetails) GetSystemId() int32 {
	if o == nil || IsNil(o.SystemId) {
		var ret int32
		return ret
	}
	return *o.SystemId
}

// GetSystemIdOk returns a tuple with the SystemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemDetails) GetSystemIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SystemId) {
		return nil, false
	}
	return o.SystemId, true
}

// HasSystemId returns a boolean if a field has been set.
func (o *SystemDetails) HasSystemId() bool {
	if o != nil && !IsNil(o.SystemId) {
		return true
	}

	return false
}

// SetSystemId gets a reference to the given int32 and assigns it to the SystemId field.
func (o *SystemDetails) SetSystemId(v int32) {
	o.SystemId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SystemDetails) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemDetails) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SystemDetails) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SystemDetails) SetName(v string) {
	o.Name = &v
}

// GetPublicName returns the PublicName field value if set, zero value otherwise.
func (o *SystemDetails) GetPublicName() string {
	if o == nil || IsNil(o.PublicName) {
		var ret string
		return ret
	}
	return *o.PublicName
}

// GetPublicNameOk returns a tuple with the PublicName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemDetails) GetPublicNameOk() (*string, bool) {
	if o == nil || IsNil(o.PublicName) {
		return nil, false
	}
	return o.PublicName, true
}

// HasPublicName returns a boolean if a field has been set.
func (o *SystemDetails) HasPublicName() bool {
	if o != nil && !IsNil(o.PublicName) {
		return true
	}

	return false
}

// SetPublicName gets a reference to the given string and assigns it to the PublicName field.
func (o *SystemDetails) SetPublicName(v string) {
	o.PublicName = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *SystemDetails) GetTimezone() string {
	if o == nil || IsNil(o.Timezone) {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemDetails) GetTimezoneOk() (*string, bool) {
	if o == nil || IsNil(o.Timezone) {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *SystemDetails) HasTimezone() bool {
	if o != nil && !IsNil(o.Timezone) {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *SystemDetails) SetTimezone(v string) {
	o.Timezone = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *SystemDetails) GetAddress() SystemDetailsAddress {
	if o == nil || IsNil(o.Address) {
		var ret SystemDetailsAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemDetails) GetAddressOk() (*SystemDetailsAddress, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *SystemDetails) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given SystemDetailsAddress and assigns it to the Address field.
func (o *SystemDetails) SetAddress(v SystemDetailsAddress) {
	o.Address = &v
}

// GetConnectionType returns the ConnectionType field value if set, zero value otherwise.
func (o *SystemDetails) GetConnectionType() SystemConnectionTypeEnum {
	if o == nil || IsNil(o.ConnectionType) {
		var ret SystemConnectionTypeEnum
		return ret
	}
	return *o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemDetails) GetConnectionTypeOk() (*SystemConnectionTypeEnum, bool) {
	if o == nil || IsNil(o.ConnectionType) {
		return nil, false
	}
	return o.ConnectionType, true
}

// HasConnectionType returns a boolean if a field has been set.
func (o *SystemDetails) HasConnectionType() bool {
	if o != nil && !IsNil(o.ConnectionType) {
		return true
	}

	return false
}

// SetConnectionType gets a reference to the given SystemConnectionTypeEnum and assigns it to the ConnectionType field.
func (o *SystemDetails) SetConnectionType(v SystemConnectionTypeEnum) {
	o.ConnectionType = &v
}

// GetEnergyLifetime returns the EnergyLifetime field value if set, zero value otherwise.
func (o *SystemDetails) GetEnergyLifetime() int32 {
	if o == nil || IsNil(o.EnergyLifetime) {
		var ret int32
		return ret
	}
	return *o.EnergyLifetime
}

// GetEnergyLifetimeOk returns a tuple with the EnergyLifetime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemDetails) GetEnergyLifetimeOk() (*int32, bool) {
	if o == nil || IsNil(o.EnergyLifetime) {
		return nil, false
	}
	return o.EnergyLifetime, true
}

// HasEnergyLifetime returns a boolean if a field has been set.
func (o *SystemDetails) HasEnergyLifetime() bool {
	if o != nil && !IsNil(o.EnergyLifetime) {
		return true
	}

	return false
}

// SetEnergyLifetime gets a reference to the given int32 and assigns it to the EnergyLifetime field.
func (o *SystemDetails) SetEnergyLifetime(v int32) {
	o.EnergyLifetime = &v
}

// GetEnergyToday returns the EnergyToday field value if set, zero value otherwise.
func (o *SystemDetails) GetEnergyToday() int32 {
	if o == nil || IsNil(o.EnergyToday) {
		var ret int32
		return ret
	}
	return *o.EnergyToday
}

// GetEnergyTodayOk returns a tuple with the EnergyToday field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemDetails) GetEnergyTodayOk() (*int32, bool) {
	if o == nil || IsNil(o.EnergyToday) {
		return nil, false
	}
	return o.EnergyToday, true
}

// HasEnergyToday returns a boolean if a field has been set.
func (o *SystemDetails) HasEnergyToday() bool {
	if o != nil && !IsNil(o.EnergyToday) {
		return true
	}

	return false
}

// SetEnergyToday gets a reference to the given int32 and assigns it to the EnergyToday field.
func (o *SystemDetails) SetEnergyToday(v int32) {
	o.EnergyToday = &v
}

// GetSystemSize returns the SystemSize field value if set, zero value otherwise.
func (o *SystemDetails) GetSystemSize() int32 {
	if o == nil || IsNil(o.SystemSize) {
		var ret int32
		return ret
	}
	return *o.SystemSize
}

// GetSystemSizeOk returns a tuple with the SystemSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemDetails) GetSystemSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.SystemSize) {
		return nil, false
	}
	return o.SystemSize, true
}

// HasSystemSize returns a boolean if a field has been set.
func (o *SystemDetails) HasSystemSize() bool {
	if o != nil && !IsNil(o.SystemSize) {
		return true
	}

	return false
}

// SetSystemSize gets a reference to the given int32 and assigns it to the SystemSize field.
func (o *SystemDetails) SetSystemSize(v int32) {
	o.SystemSize = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SystemDetails) GetStatus() SystemStatusEnum {
	if o == nil || IsNil(o.Status) {
		var ret SystemStatusEnum
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemDetails) GetStatusOk() (*SystemStatusEnum, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SystemDetails) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given SystemStatusEnum and assigns it to the Status field.
func (o *SystemDetails) SetStatus(v SystemStatusEnum) {
	o.Status = &v
}

// GetLastReportAt returns the LastReportAt field value if set, zero value otherwise.
func (o *SystemDetails) GetLastReportAt() int64 {
	if o == nil || IsNil(o.LastReportAt) {
		var ret int64
		return ret
	}
	return *o.LastReportAt
}

// GetLastReportAtOk returns a tuple with the LastReportAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemDetails) GetLastReportAtOk() (*int64, bool) {
	if o == nil || IsNil(o.LastReportAt) {
		return nil, false
	}
	return o.LastReportAt, true
}

// HasLastReportAt returns a boolean if a field has been set.
func (o *SystemDetails) HasLastReportAt() bool {
	if o != nil && !IsNil(o.LastReportAt) {
		return true
	}

	return false
}

// SetLastReportAt gets a reference to the given int64 and assigns it to the LastReportAt field.
func (o *SystemDetails) SetLastReportAt(v int64) {
	o.LastReportAt = &v
}

// GetLastEnergyAt returns the LastEnergyAt field value if set, zero value otherwise.
func (o *SystemDetails) GetLastEnergyAt() int64 {
	if o == nil || IsNil(o.LastEnergyAt) {
		var ret int64
		return ret
	}
	return *o.LastEnergyAt
}

// GetLastEnergyAtOk returns a tuple with the LastEnergyAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemDetails) GetLastEnergyAtOk() (*int64, bool) {
	if o == nil || IsNil(o.LastEnergyAt) {
		return nil, false
	}
	return o.LastEnergyAt, true
}

// HasLastEnergyAt returns a boolean if a field has been set.
func (o *SystemDetails) HasLastEnergyAt() bool {
	if o != nil && !IsNil(o.LastEnergyAt) {
		return true
	}

	return false
}

// SetLastEnergyAt gets a reference to the given int64 and assigns it to the LastEnergyAt field.
func (o *SystemDetails) SetLastEnergyAt(v int64) {
	o.LastEnergyAt = &v
}

// GetOperationalAt returns the OperationalAt field value if set, zero value otherwise.
func (o *SystemDetails) GetOperationalAt() int64 {
	if o == nil || IsNil(o.OperationalAt) {
		var ret int64
		return ret
	}
	return *o.OperationalAt
}

// GetOperationalAtOk returns a tuple with the OperationalAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemDetails) GetOperationalAtOk() (*int64, bool) {
	if o == nil || IsNil(o.OperationalAt) {
		return nil, false
	}
	return o.OperationalAt, true
}

// HasOperationalAt returns a boolean if a field has been set.
func (o *SystemDetails) HasOperationalAt() bool {
	if o != nil && !IsNil(o.OperationalAt) {
		return true
	}

	return false
}

// SetOperationalAt gets a reference to the given int64 and assigns it to the OperationalAt field.
func (o *SystemDetails) SetOperationalAt(v int64) {
	o.OperationalAt = &v
}

// GetAttachmentType returns the AttachmentType field value if set, zero value otherwise.
func (o *SystemDetails) GetAttachmentType() SystemAttachmentTypeEnum {
	if o == nil || IsNil(o.AttachmentType) {
		var ret SystemAttachmentTypeEnum
		return ret
	}
	return *o.AttachmentType
}

// GetAttachmentTypeOk returns a tuple with the AttachmentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemDetails) GetAttachmentTypeOk() (*SystemAttachmentTypeEnum, bool) {
	if o == nil || IsNil(o.AttachmentType) {
		return nil, false
	}
	return o.AttachmentType, true
}

// HasAttachmentType returns a boolean if a field has been set.
func (o *SystemDetails) HasAttachmentType() bool {
	if o != nil && !IsNil(o.AttachmentType) {
		return true
	}

	return false
}

// SetAttachmentType gets a reference to the given SystemAttachmentTypeEnum and assigns it to the AttachmentType field.
func (o *SystemDetails) SetAttachmentType(v SystemAttachmentTypeEnum) {
	o.AttachmentType = &v
}

// GetInterconnectDate returns the InterconnectDate field value if set, zero value otherwise.
func (o *SystemDetails) GetInterconnectDate() string {
	if o == nil || IsNil(o.InterconnectDate) {
		var ret string
		return ret
	}
	return *o.InterconnectDate
}

// GetInterconnectDateOk returns a tuple with the InterconnectDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemDetails) GetInterconnectDateOk() (*string, bool) {
	if o == nil || IsNil(o.InterconnectDate) {
		return nil, false
	}
	return o.InterconnectDate, true
}

// HasInterconnectDate returns a boolean if a field has been set.
func (o *SystemDetails) HasInterconnectDate() bool {
	if o != nil && !IsNil(o.InterconnectDate) {
		return true
	}

	return false
}

// SetInterconnectDate gets a reference to the given string and assigns it to the InterconnectDate field.
func (o *SystemDetails) SetInterconnectDate(v string) {
	o.InterconnectDate = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *SystemDetails) GetReference() string {
	if o == nil || IsNil(o.Reference) {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemDetails) GetReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *SystemDetails) HasReference() bool {
	if o != nil && !IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *SystemDetails) SetReference(v string) {
	o.Reference = &v
}

// GetOtherReferences returns the OtherReferences field value if set, zero value otherwise.
func (o *SystemDetails) GetOtherReferences() []string {
	if o == nil || IsNil(o.OtherReferences) {
		var ret []string
		return ret
	}
	return o.OtherReferences
}

// GetOtherReferencesOk returns a tuple with the OtherReferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemDetails) GetOtherReferencesOk() ([]string, bool) {
	if o == nil || IsNil(o.OtherReferences) {
		return nil, false
	}
	return o.OtherReferences, true
}

// HasOtherReferences returns a boolean if a field has been set.
func (o *SystemDetails) HasOtherReferences() bool {
	if o != nil && !IsNil(o.OtherReferences) {
		return true
	}

	return false
}

// SetOtherReferences gets a reference to the given []string and assigns it to the OtherReferences field.
func (o *SystemDetails) SetOtherReferences(v []string) {
	o.OtherReferences = v
}

func (o SystemDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SystemDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SystemId) {
		toSerialize["system_id"] = o.SystemId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PublicName) {
		toSerialize["public_name"] = o.PublicName
	}
	if !IsNil(o.Timezone) {
		toSerialize["timezone"] = o.Timezone
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.ConnectionType) {
		toSerialize["connection_type"] = o.ConnectionType
	}
	if !IsNil(o.EnergyLifetime) {
		toSerialize["energy_lifetime"] = o.EnergyLifetime
	}
	if !IsNil(o.EnergyToday) {
		toSerialize["energy_today"] = o.EnergyToday
	}
	if !IsNil(o.SystemSize) {
		toSerialize["system_size"] = o.SystemSize
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.LastReportAt) {
		toSerialize["last_report_at"] = o.LastReportAt
	}
	if !IsNil(o.LastEnergyAt) {
		toSerialize["last_energy_at"] = o.LastEnergyAt
	}
	if !IsNil(o.OperationalAt) {
		toSerialize["operational_at"] = o.OperationalAt
	}
	if !IsNil(o.AttachmentType) {
		toSerialize["attachment_type"] = o.AttachmentType
	}
	if !IsNil(o.InterconnectDate) {
		toSerialize["interconnect_date"] = o.InterconnectDate
	}
	if !IsNil(o.Reference) {
		toSerialize["reference"] = o.Reference
	}
	if !IsNil(o.OtherReferences) {
		toSerialize["other_references"] = o.OtherReferences
	}
	return toSerialize, nil
}

type NullableSystemDetails struct {
	value *SystemDetails
	isSet bool
}

func (v NullableSystemDetails) Get() *SystemDetails {
	return v.value
}

func (v *NullableSystemDetails) Set(val *SystemDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemDetails(val *SystemDetails) *NullableSystemDetails {
	return &NullableSystemDetails{value: val, isSet: true}
}

func (v NullableSystemDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


