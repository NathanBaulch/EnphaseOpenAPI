/*
The Enphase Monitoring API

Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monitoring

import (
	"encoding/json"
)

// checks if the SearchSystemsRequestSystem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchSystemsRequestSystem{}

// SearchSystemsRequestSystem struct for SearchSystemsRequestSystem
type SearchSystemsRequestSystem struct {
	// Filter system by particular Ids.
	Ids []int32 `json:"ids,omitempty"`
	// Search by name of the system.
	Name *string `json:"name,omitempty"`
	PublicName *SystemPublicNameEnum `json:"public_name,omitempty"`
	// Search by System status.
	Statuses []SystemStatusEnum `json:"statuses,omitempty"`
	ConnectionType *SystemConnectionTypeEnum `json:"connection_type,omitempty"`
}

// NewSearchSystemsRequestSystem instantiates a new SearchSystemsRequestSystem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchSystemsRequestSystem() *SearchSystemsRequestSystem {
	this := SearchSystemsRequestSystem{}
	return &this
}

// NewSearchSystemsRequestSystemWithDefaults instantiates a new SearchSystemsRequestSystem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchSystemsRequestSystemWithDefaults() *SearchSystemsRequestSystem {
	this := SearchSystemsRequestSystem{}
	return &this
}

// GetIds returns the Ids field value if set, zero value otherwise.
func (o *SearchSystemsRequestSystem) GetIds() []int32 {
	if o == nil || IsNil(o.Ids) {
		var ret []int32
		return ret
	}
	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchSystemsRequestSystem) GetIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Ids) {
		return nil, false
	}
	return o.Ids, true
}

// HasIds returns a boolean if a field has been set.
func (o *SearchSystemsRequestSystem) HasIds() bool {
	if o != nil && !IsNil(o.Ids) {
		return true
	}

	return false
}

// SetIds gets a reference to the given []int32 and assigns it to the Ids field.
func (o *SearchSystemsRequestSystem) SetIds(v []int32) {
	o.Ids = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SearchSystemsRequestSystem) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchSystemsRequestSystem) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SearchSystemsRequestSystem) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SearchSystemsRequestSystem) SetName(v string) {
	o.Name = &v
}

// GetPublicName returns the PublicName field value if set, zero value otherwise.
func (o *SearchSystemsRequestSystem) GetPublicName() SystemPublicNameEnum {
	if o == nil || IsNil(o.PublicName) {
		var ret SystemPublicNameEnum
		return ret
	}
	return *o.PublicName
}

// GetPublicNameOk returns a tuple with the PublicName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchSystemsRequestSystem) GetPublicNameOk() (*SystemPublicNameEnum, bool) {
	if o == nil || IsNil(o.PublicName) {
		return nil, false
	}
	return o.PublicName, true
}

// HasPublicName returns a boolean if a field has been set.
func (o *SearchSystemsRequestSystem) HasPublicName() bool {
	if o != nil && !IsNil(o.PublicName) {
		return true
	}

	return false
}

// SetPublicName gets a reference to the given SystemPublicNameEnum and assigns it to the PublicName field.
func (o *SearchSystemsRequestSystem) SetPublicName(v SystemPublicNameEnum) {
	o.PublicName = &v
}

// GetStatuses returns the Statuses field value if set, zero value otherwise.
func (o *SearchSystemsRequestSystem) GetStatuses() []SystemStatusEnum {
	if o == nil || IsNil(o.Statuses) {
		var ret []SystemStatusEnum
		return ret
	}
	return o.Statuses
}

// GetStatusesOk returns a tuple with the Statuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchSystemsRequestSystem) GetStatusesOk() ([]SystemStatusEnum, bool) {
	if o == nil || IsNil(o.Statuses) {
		return nil, false
	}
	return o.Statuses, true
}

// HasStatuses returns a boolean if a field has been set.
func (o *SearchSystemsRequestSystem) HasStatuses() bool {
	if o != nil && !IsNil(o.Statuses) {
		return true
	}

	return false
}

// SetStatuses gets a reference to the given []SystemStatusEnum and assigns it to the Statuses field.
func (o *SearchSystemsRequestSystem) SetStatuses(v []SystemStatusEnum) {
	o.Statuses = v
}

// GetConnectionType returns the ConnectionType field value if set, zero value otherwise.
func (o *SearchSystemsRequestSystem) GetConnectionType() SystemConnectionTypeEnum {
	if o == nil || IsNil(o.ConnectionType) {
		var ret SystemConnectionTypeEnum
		return ret
	}
	return *o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchSystemsRequestSystem) GetConnectionTypeOk() (*SystemConnectionTypeEnum, bool) {
	if o == nil || IsNil(o.ConnectionType) {
		return nil, false
	}
	return o.ConnectionType, true
}

// HasConnectionType returns a boolean if a field has been set.
func (o *SearchSystemsRequestSystem) HasConnectionType() bool {
	if o != nil && !IsNil(o.ConnectionType) {
		return true
	}

	return false
}

// SetConnectionType gets a reference to the given SystemConnectionTypeEnum and assigns it to the ConnectionType field.
func (o *SearchSystemsRequestSystem) SetConnectionType(v SystemConnectionTypeEnum) {
	o.ConnectionType = &v
}

func (o SearchSystemsRequestSystem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchSystemsRequestSystem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ids) {
		toSerialize["ids"] = o.Ids
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PublicName) {
		toSerialize["public_name"] = o.PublicName
	}
	if !IsNil(o.Statuses) {
		toSerialize["statuses"] = o.Statuses
	}
	if !IsNil(o.ConnectionType) {
		toSerialize["connection_type"] = o.ConnectionType
	}
	return toSerialize, nil
}

type NullableSearchSystemsRequestSystem struct {
	value *SearchSystemsRequestSystem
	isSet bool
}

func (v NullableSearchSystemsRequestSystem) Get() *SearchSystemsRequestSystem {
	return v.value
}

func (v *NullableSearchSystemsRequestSystem) Set(val *SearchSystemsRequestSystem) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchSystemsRequestSystem) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchSystemsRequestSystem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchSystemsRequestSystem(val *SearchSystemsRequestSystem) *NullableSearchSystemsRequestSystem {
	return &NullableSearchSystemsRequestSystem{value: val, isSet: true}
}

func (v NullableSearchSystemsRequestSystem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchSystemsRequestSystem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


