/*
The Enphase Monitoring API

Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monitoring

import (
	"encoding/json"
)

// checks if the GetSystemDevicesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSystemDevicesResponse{}

// GetSystemDevicesResponse struct for GetSystemDevicesResponse
type GetSystemDevicesResponse struct {
	// System ID.
	SystemId *int32 `json:"system_id,omitempty"`
	// Total active devices associated with the system.
	TotalDevices *int32 `json:"total_devices,omitempty"`
	// List key.
	Items *string `json:"items,omitempty"`
	// Hash keys include all the possible device types micros, meters, gateways, mids, q_relays, ACBs, Encharges, Enpowers (if the devices of this type are present). For all the device types, the object will contain the serial_number and model with some additional information pertaining to the device type.
	Devices *map[string][]GetSystemDevicesResponseDevicesValueInner `json:"devices,omitempty"`
}

// NewGetSystemDevicesResponse instantiates a new GetSystemDevicesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSystemDevicesResponse() *GetSystemDevicesResponse {
	this := GetSystemDevicesResponse{}
	return &this
}

// NewGetSystemDevicesResponseWithDefaults instantiates a new GetSystemDevicesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSystemDevicesResponseWithDefaults() *GetSystemDevicesResponse {
	this := GetSystemDevicesResponse{}
	return &this
}

// GetSystemId returns the SystemId field value if set, zero value otherwise.
func (o *GetSystemDevicesResponse) GetSystemId() int32 {
	if o == nil || IsNil(o.SystemId) {
		var ret int32
		return ret
	}
	return *o.SystemId
}

// GetSystemIdOk returns a tuple with the SystemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemDevicesResponse) GetSystemIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SystemId) {
		return nil, false
	}
	return o.SystemId, true
}

// HasSystemId returns a boolean if a field has been set.
func (o *GetSystemDevicesResponse) HasSystemId() bool {
	if o != nil && !IsNil(o.SystemId) {
		return true
	}

	return false
}

// SetSystemId gets a reference to the given int32 and assigns it to the SystemId field.
func (o *GetSystemDevicesResponse) SetSystemId(v int32) {
	o.SystemId = &v
}

// GetTotalDevices returns the TotalDevices field value if set, zero value otherwise.
func (o *GetSystemDevicesResponse) GetTotalDevices() int32 {
	if o == nil || IsNil(o.TotalDevices) {
		var ret int32
		return ret
	}
	return *o.TotalDevices
}

// GetTotalDevicesOk returns a tuple with the TotalDevices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemDevicesResponse) GetTotalDevicesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalDevices) {
		return nil, false
	}
	return o.TotalDevices, true
}

// HasTotalDevices returns a boolean if a field has been set.
func (o *GetSystemDevicesResponse) HasTotalDevices() bool {
	if o != nil && !IsNil(o.TotalDevices) {
		return true
	}

	return false
}

// SetTotalDevices gets a reference to the given int32 and assigns it to the TotalDevices field.
func (o *GetSystemDevicesResponse) SetTotalDevices(v int32) {
	o.TotalDevices = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *GetSystemDevicesResponse) GetItems() string {
	if o == nil || IsNil(o.Items) {
		var ret string
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemDevicesResponse) GetItemsOk() (*string, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *GetSystemDevicesResponse) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given string and assigns it to the Items field.
func (o *GetSystemDevicesResponse) SetItems(v string) {
	o.Items = &v
}

// GetDevices returns the Devices field value if set, zero value otherwise.
func (o *GetSystemDevicesResponse) GetDevices() map[string][]GetSystemDevicesResponseDevicesValueInner {
	if o == nil || IsNil(o.Devices) {
		var ret map[string][]GetSystemDevicesResponseDevicesValueInner
		return ret
	}
	return *o.Devices
}

// GetDevicesOk returns a tuple with the Devices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemDevicesResponse) GetDevicesOk() (*map[string][]GetSystemDevicesResponseDevicesValueInner, bool) {
	if o == nil || IsNil(o.Devices) {
		return nil, false
	}
	return o.Devices, true
}

// HasDevices returns a boolean if a field has been set.
func (o *GetSystemDevicesResponse) HasDevices() bool {
	if o != nil && !IsNil(o.Devices) {
		return true
	}

	return false
}

// SetDevices gets a reference to the given map[string][]GetSystemDevicesResponseDevicesValueInner and assigns it to the Devices field.
func (o *GetSystemDevicesResponse) SetDevices(v map[string][]GetSystemDevicesResponseDevicesValueInner) {
	o.Devices = &v
}

func (o GetSystemDevicesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSystemDevicesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SystemId) {
		toSerialize["system_id"] = o.SystemId
	}
	if !IsNil(o.TotalDevices) {
		toSerialize["total_devices"] = o.TotalDevices
	}
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.Devices) {
		toSerialize["devices"] = o.Devices
	}
	return toSerialize, nil
}

type NullableGetSystemDevicesResponse struct {
	value *GetSystemDevicesResponse
	isSet bool
}

func (v NullableGetSystemDevicesResponse) Get() *GetSystemDevicesResponse {
	return v.value
}

func (v *NullableGetSystemDevicesResponse) Set(val *GetSystemDevicesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSystemDevicesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSystemDevicesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSystemDevicesResponse(val *GetSystemDevicesResponse) *NullableGetSystemDevicesResponse {
	return &NullableGetSystemDevicesResponse{value: val, isSet: true}
}

func (v NullableGetSystemDevicesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSystemDevicesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


