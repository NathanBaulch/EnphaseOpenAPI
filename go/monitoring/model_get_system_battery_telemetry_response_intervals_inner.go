/*
The Enphase Monitoring API

Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monitoring

import (
	"encoding/json"
)

// checks if the GetSystemBatteryTelemetryResponseIntervalsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSystemBatteryTelemetryResponseIntervalsInner{}

// GetSystemBatteryTelemetryResponseIntervalsInner struct for GetSystemBatteryTelemetryResponseIntervalsInner
type GetSystemBatteryTelemetryResponseIntervalsInner struct {
	// End time of the telemetry interval.
	EndAt *int64 `json:"end_at,omitempty"`
	Charge *GetSystemBatteryTelemetryResponseIntervalsInnerCharge `json:"charge,omitempty"`
	Discharge *GetSystemBatteryTelemetryResponseIntervalsInnerDischarge `json:"discharge,omitempty"`
	Soc *GetSystemBatteryTelemetryResponseIntervalsInnerSoc `json:"soc,omitempty"`
}

// NewGetSystemBatteryTelemetryResponseIntervalsInner instantiates a new GetSystemBatteryTelemetryResponseIntervalsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSystemBatteryTelemetryResponseIntervalsInner() *GetSystemBatteryTelemetryResponseIntervalsInner {
	this := GetSystemBatteryTelemetryResponseIntervalsInner{}
	return &this
}

// NewGetSystemBatteryTelemetryResponseIntervalsInnerWithDefaults instantiates a new GetSystemBatteryTelemetryResponseIntervalsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSystemBatteryTelemetryResponseIntervalsInnerWithDefaults() *GetSystemBatteryTelemetryResponseIntervalsInner {
	this := GetSystemBatteryTelemetryResponseIntervalsInner{}
	return &this
}

// GetEndAt returns the EndAt field value if set, zero value otherwise.
func (o *GetSystemBatteryTelemetryResponseIntervalsInner) GetEndAt() int64 {
	if o == nil || IsNil(o.EndAt) {
		var ret int64
		return ret
	}
	return *o.EndAt
}

// GetEndAtOk returns a tuple with the EndAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemBatteryTelemetryResponseIntervalsInner) GetEndAtOk() (*int64, bool) {
	if o == nil || IsNil(o.EndAt) {
		return nil, false
	}
	return o.EndAt, true
}

// HasEndAt returns a boolean if a field has been set.
func (o *GetSystemBatteryTelemetryResponseIntervalsInner) HasEndAt() bool {
	if o != nil && !IsNil(o.EndAt) {
		return true
	}

	return false
}

// SetEndAt gets a reference to the given int64 and assigns it to the EndAt field.
func (o *GetSystemBatteryTelemetryResponseIntervalsInner) SetEndAt(v int64) {
	o.EndAt = &v
}

// GetCharge returns the Charge field value if set, zero value otherwise.
func (o *GetSystemBatteryTelemetryResponseIntervalsInner) GetCharge() GetSystemBatteryTelemetryResponseIntervalsInnerCharge {
	if o == nil || IsNil(o.Charge) {
		var ret GetSystemBatteryTelemetryResponseIntervalsInnerCharge
		return ret
	}
	return *o.Charge
}

// GetChargeOk returns a tuple with the Charge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemBatteryTelemetryResponseIntervalsInner) GetChargeOk() (*GetSystemBatteryTelemetryResponseIntervalsInnerCharge, bool) {
	if o == nil || IsNil(o.Charge) {
		return nil, false
	}
	return o.Charge, true
}

// HasCharge returns a boolean if a field has been set.
func (o *GetSystemBatteryTelemetryResponseIntervalsInner) HasCharge() bool {
	if o != nil && !IsNil(o.Charge) {
		return true
	}

	return false
}

// SetCharge gets a reference to the given GetSystemBatteryTelemetryResponseIntervalsInnerCharge and assigns it to the Charge field.
func (o *GetSystemBatteryTelemetryResponseIntervalsInner) SetCharge(v GetSystemBatteryTelemetryResponseIntervalsInnerCharge) {
	o.Charge = &v
}

// GetDischarge returns the Discharge field value if set, zero value otherwise.
func (o *GetSystemBatteryTelemetryResponseIntervalsInner) GetDischarge() GetSystemBatteryTelemetryResponseIntervalsInnerDischarge {
	if o == nil || IsNil(o.Discharge) {
		var ret GetSystemBatteryTelemetryResponseIntervalsInnerDischarge
		return ret
	}
	return *o.Discharge
}

// GetDischargeOk returns a tuple with the Discharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemBatteryTelemetryResponseIntervalsInner) GetDischargeOk() (*GetSystemBatteryTelemetryResponseIntervalsInnerDischarge, bool) {
	if o == nil || IsNil(o.Discharge) {
		return nil, false
	}
	return o.Discharge, true
}

// HasDischarge returns a boolean if a field has been set.
func (o *GetSystemBatteryTelemetryResponseIntervalsInner) HasDischarge() bool {
	if o != nil && !IsNil(o.Discharge) {
		return true
	}

	return false
}

// SetDischarge gets a reference to the given GetSystemBatteryTelemetryResponseIntervalsInnerDischarge and assigns it to the Discharge field.
func (o *GetSystemBatteryTelemetryResponseIntervalsInner) SetDischarge(v GetSystemBatteryTelemetryResponseIntervalsInnerDischarge) {
	o.Discharge = &v
}

// GetSoc returns the Soc field value if set, zero value otherwise.
func (o *GetSystemBatteryTelemetryResponseIntervalsInner) GetSoc() GetSystemBatteryTelemetryResponseIntervalsInnerSoc {
	if o == nil || IsNil(o.Soc) {
		var ret GetSystemBatteryTelemetryResponseIntervalsInnerSoc
		return ret
	}
	return *o.Soc
}

// GetSocOk returns a tuple with the Soc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemBatteryTelemetryResponseIntervalsInner) GetSocOk() (*GetSystemBatteryTelemetryResponseIntervalsInnerSoc, bool) {
	if o == nil || IsNil(o.Soc) {
		return nil, false
	}
	return o.Soc, true
}

// HasSoc returns a boolean if a field has been set.
func (o *GetSystemBatteryTelemetryResponseIntervalsInner) HasSoc() bool {
	if o != nil && !IsNil(o.Soc) {
		return true
	}

	return false
}

// SetSoc gets a reference to the given GetSystemBatteryTelemetryResponseIntervalsInnerSoc and assigns it to the Soc field.
func (o *GetSystemBatteryTelemetryResponseIntervalsInner) SetSoc(v GetSystemBatteryTelemetryResponseIntervalsInnerSoc) {
	o.Soc = &v
}

func (o GetSystemBatteryTelemetryResponseIntervalsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSystemBatteryTelemetryResponseIntervalsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EndAt) {
		toSerialize["end_at"] = o.EndAt
	}
	if !IsNil(o.Charge) {
		toSerialize["charge"] = o.Charge
	}
	if !IsNil(o.Discharge) {
		toSerialize["discharge"] = o.Discharge
	}
	if !IsNil(o.Soc) {
		toSerialize["soc"] = o.Soc
	}
	return toSerialize, nil
}

type NullableGetSystemBatteryTelemetryResponseIntervalsInner struct {
	value *GetSystemBatteryTelemetryResponseIntervalsInner
	isSet bool
}

func (v NullableGetSystemBatteryTelemetryResponseIntervalsInner) Get() *GetSystemBatteryTelemetryResponseIntervalsInner {
	return v.value
}

func (v *NullableGetSystemBatteryTelemetryResponseIntervalsInner) Set(val *GetSystemBatteryTelemetryResponseIntervalsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSystemBatteryTelemetryResponseIntervalsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSystemBatteryTelemetryResponseIntervalsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSystemBatteryTelemetryResponseIntervalsInner(val *GetSystemBatteryTelemetryResponseIntervalsInner) *NullableGetSystemBatteryTelemetryResponseIntervalsInner {
	return &NullableGetSystemBatteryTelemetryResponseIntervalsInner{value: val, isSet: true}
}

func (v NullableGetSystemBatteryTelemetryResponseIntervalsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSystemBatteryTelemetryResponseIntervalsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


