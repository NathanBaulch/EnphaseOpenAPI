/*
The Enphase Monitoring API

Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monitoring

import (
	"encoding/json"
)

// checks if the GetSystemRgmStatsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSystemRgmStatsResponse{}

// GetSystemRgmStatsResponse struct for GetSystemRgmStatsResponse
type GetSystemRgmStatsResponse struct {
	// System ID.
	SystemId *int32 `json:"system_id,omitempty"`
	// Number of active revenue-grade meters for this system.
	TotalDevices *int32 `json:"total_devices,omitempty"`
	Meta *Meta `json:"meta,omitempty"`
	// A list of intervals between the requested start and end times.
	Intervals []GetSystemRgmStatsResponseIntervalsInner `json:"intervals,omitempty"`
	// A list of intervals of a meter between the requested start and end times.
	MeterIntervals []GetSystemRgmStatsResponseMeterIntervalsInner `json:"meter_intervals,omitempty"`
}

// NewGetSystemRgmStatsResponse instantiates a new GetSystemRgmStatsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSystemRgmStatsResponse() *GetSystemRgmStatsResponse {
	this := GetSystemRgmStatsResponse{}
	return &this
}

// NewGetSystemRgmStatsResponseWithDefaults instantiates a new GetSystemRgmStatsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSystemRgmStatsResponseWithDefaults() *GetSystemRgmStatsResponse {
	this := GetSystemRgmStatsResponse{}
	return &this
}

// GetSystemId returns the SystemId field value if set, zero value otherwise.
func (o *GetSystemRgmStatsResponse) GetSystemId() int32 {
	if o == nil || IsNil(o.SystemId) {
		var ret int32
		return ret
	}
	return *o.SystemId
}

// GetSystemIdOk returns a tuple with the SystemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemRgmStatsResponse) GetSystemIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SystemId) {
		return nil, false
	}
	return o.SystemId, true
}

// HasSystemId returns a boolean if a field has been set.
func (o *GetSystemRgmStatsResponse) HasSystemId() bool {
	if o != nil && !IsNil(o.SystemId) {
		return true
	}

	return false
}

// SetSystemId gets a reference to the given int32 and assigns it to the SystemId field.
func (o *GetSystemRgmStatsResponse) SetSystemId(v int32) {
	o.SystemId = &v
}

// GetTotalDevices returns the TotalDevices field value if set, zero value otherwise.
func (o *GetSystemRgmStatsResponse) GetTotalDevices() int32 {
	if o == nil || IsNil(o.TotalDevices) {
		var ret int32
		return ret
	}
	return *o.TotalDevices
}

// GetTotalDevicesOk returns a tuple with the TotalDevices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemRgmStatsResponse) GetTotalDevicesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalDevices) {
		return nil, false
	}
	return o.TotalDevices, true
}

// HasTotalDevices returns a boolean if a field has been set.
func (o *GetSystemRgmStatsResponse) HasTotalDevices() bool {
	if o != nil && !IsNil(o.TotalDevices) {
		return true
	}

	return false
}

// SetTotalDevices gets a reference to the given int32 and assigns it to the TotalDevices field.
func (o *GetSystemRgmStatsResponse) SetTotalDevices(v int32) {
	o.TotalDevices = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *GetSystemRgmStatsResponse) GetMeta() Meta {
	if o == nil || IsNil(o.Meta) {
		var ret Meta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemRgmStatsResponse) GetMetaOk() (*Meta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *GetSystemRgmStatsResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given Meta and assigns it to the Meta field.
func (o *GetSystemRgmStatsResponse) SetMeta(v Meta) {
	o.Meta = &v
}

// GetIntervals returns the Intervals field value if set, zero value otherwise.
func (o *GetSystemRgmStatsResponse) GetIntervals() []GetSystemRgmStatsResponseIntervalsInner {
	if o == nil || IsNil(o.Intervals) {
		var ret []GetSystemRgmStatsResponseIntervalsInner
		return ret
	}
	return o.Intervals
}

// GetIntervalsOk returns a tuple with the Intervals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemRgmStatsResponse) GetIntervalsOk() ([]GetSystemRgmStatsResponseIntervalsInner, bool) {
	if o == nil || IsNil(o.Intervals) {
		return nil, false
	}
	return o.Intervals, true
}

// HasIntervals returns a boolean if a field has been set.
func (o *GetSystemRgmStatsResponse) HasIntervals() bool {
	if o != nil && !IsNil(o.Intervals) {
		return true
	}

	return false
}

// SetIntervals gets a reference to the given []GetSystemRgmStatsResponseIntervalsInner and assigns it to the Intervals field.
func (o *GetSystemRgmStatsResponse) SetIntervals(v []GetSystemRgmStatsResponseIntervalsInner) {
	o.Intervals = v
}

// GetMeterIntervals returns the MeterIntervals field value if set, zero value otherwise.
func (o *GetSystemRgmStatsResponse) GetMeterIntervals() []GetSystemRgmStatsResponseMeterIntervalsInner {
	if o == nil || IsNil(o.MeterIntervals) {
		var ret []GetSystemRgmStatsResponseMeterIntervalsInner
		return ret
	}
	return o.MeterIntervals
}

// GetMeterIntervalsOk returns a tuple with the MeterIntervals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemRgmStatsResponse) GetMeterIntervalsOk() ([]GetSystemRgmStatsResponseMeterIntervalsInner, bool) {
	if o == nil || IsNil(o.MeterIntervals) {
		return nil, false
	}
	return o.MeterIntervals, true
}

// HasMeterIntervals returns a boolean if a field has been set.
func (o *GetSystemRgmStatsResponse) HasMeterIntervals() bool {
	if o != nil && !IsNil(o.MeterIntervals) {
		return true
	}

	return false
}

// SetMeterIntervals gets a reference to the given []GetSystemRgmStatsResponseMeterIntervalsInner and assigns it to the MeterIntervals field.
func (o *GetSystemRgmStatsResponse) SetMeterIntervals(v []GetSystemRgmStatsResponseMeterIntervalsInner) {
	o.MeterIntervals = v
}

func (o GetSystemRgmStatsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSystemRgmStatsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SystemId) {
		toSerialize["system_id"] = o.SystemId
	}
	if !IsNil(o.TotalDevices) {
		toSerialize["total_devices"] = o.TotalDevices
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Intervals) {
		toSerialize["intervals"] = o.Intervals
	}
	if !IsNil(o.MeterIntervals) {
		toSerialize["meter_intervals"] = o.MeterIntervals
	}
	return toSerialize, nil
}

type NullableGetSystemRgmStatsResponse struct {
	value *GetSystemRgmStatsResponse
	isSet bool
}

func (v NullableGetSystemRgmStatsResponse) Get() *GetSystemRgmStatsResponse {
	return v.value
}

func (v *NullableGetSystemRgmStatsResponse) Set(val *GetSystemRgmStatsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSystemRgmStatsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSystemRgmStatsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSystemRgmStatsResponse(val *GetSystemRgmStatsResponse) *NullableGetSystemRgmStatsResponse {
	return &NullableGetSystemRgmStatsResponse{value: val, isSet: true}
}

func (v NullableGetSystemRgmStatsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSystemRgmStatsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


