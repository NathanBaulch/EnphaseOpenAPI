/*
The Enphase Monitoring API

Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monitoring

import (
	"encoding/json"
)

// checks if the RetrieveSystemIdResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RetrieveSystemIdResponse{}

// RetrieveSystemIdResponse struct for RetrieveSystemIdResponse
type RetrieveSystemIdResponse struct {
	// Unique numeric ID of the system.
	SystemId *int32 `json:"system_id,omitempty"`
}

// NewRetrieveSystemIdResponse instantiates a new RetrieveSystemIdResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRetrieveSystemIdResponse() *RetrieveSystemIdResponse {
	this := RetrieveSystemIdResponse{}
	return &this
}

// NewRetrieveSystemIdResponseWithDefaults instantiates a new RetrieveSystemIdResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRetrieveSystemIdResponseWithDefaults() *RetrieveSystemIdResponse {
	this := RetrieveSystemIdResponse{}
	return &this
}

// GetSystemId returns the SystemId field value if set, zero value otherwise.
func (o *RetrieveSystemIdResponse) GetSystemId() int32 {
	if o == nil || IsNil(o.SystemId) {
		var ret int32
		return ret
	}
	return *o.SystemId
}

// GetSystemIdOk returns a tuple with the SystemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrieveSystemIdResponse) GetSystemIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SystemId) {
		return nil, false
	}
	return o.SystemId, true
}

// HasSystemId returns a boolean if a field has been set.
func (o *RetrieveSystemIdResponse) HasSystemId() bool {
	if o != nil && !IsNil(o.SystemId) {
		return true
	}

	return false
}

// SetSystemId gets a reference to the given int32 and assigns it to the SystemId field.
func (o *RetrieveSystemIdResponse) SetSystemId(v int32) {
	o.SystemId = &v
}

func (o RetrieveSystemIdResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RetrieveSystemIdResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SystemId) {
		toSerialize["system_id"] = o.SystemId
	}
	return toSerialize, nil
}

type NullableRetrieveSystemIdResponse struct {
	value *RetrieveSystemIdResponse
	isSet bool
}

func (v NullableRetrieveSystemIdResponse) Get() *RetrieveSystemIdResponse {
	return v.value
}

func (v *NullableRetrieveSystemIdResponse) Set(val *RetrieveSystemIdResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRetrieveSystemIdResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRetrieveSystemIdResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRetrieveSystemIdResponse(val *RetrieveSystemIdResponse) *NullableRetrieveSystemIdResponse {
	return &NullableRetrieveSystemIdResponse{value: val, isSet: true}
}

func (v NullableRetrieveSystemIdResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRetrieveSystemIdResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


