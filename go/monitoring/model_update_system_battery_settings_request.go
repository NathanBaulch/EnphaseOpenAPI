/*
The Enphase Monitoring API

Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monitoring

import (
	"encoding/json"
)

// checks if the UpdateSystemBatterySettingsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateSystemBatterySettingsRequest{}

// UpdateSystemBatterySettingsRequest struct for UpdateSystemBatterySettingsRequest
type UpdateSystemBatterySettingsRequest struct {
	// To update battery mode of the system (case sensitive). Available values are Savings Mode, Self-consumption, Full Backup.
	BatteryMode *string `json:"battery_mode,omitempty"`
	// Reserve soc for the current mode. Cannot be less than vls.
	ReserveSoc *int32 `json:"reserve_soc,omitempty"`
	// Energy independence after peak hours \"enabled\"/\"disabled\". Enabled: Battery will discharge to save money during peak hours when electricity rates are high. Once that is done, energy independence is prioritized. This will increase the energy self-sufficiency until the reserve soc is hit. Battery will charge from solar in the morning to get ready for the next period. Disabled: Battery will discharge only during peak hours when electricity rates are high. During other times, battery will be idle or will charge from solar in the morning to get ready for the next period.
	EnergyIndependence *string `json:"energy_independence,omitempty"`
}

// NewUpdateSystemBatterySettingsRequest instantiates a new UpdateSystemBatterySettingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSystemBatterySettingsRequest() *UpdateSystemBatterySettingsRequest {
	this := UpdateSystemBatterySettingsRequest{}
	return &this
}

// NewUpdateSystemBatterySettingsRequestWithDefaults instantiates a new UpdateSystemBatterySettingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSystemBatterySettingsRequestWithDefaults() *UpdateSystemBatterySettingsRequest {
	this := UpdateSystemBatterySettingsRequest{}
	return &this
}

// GetBatteryMode returns the BatteryMode field value if set, zero value otherwise.
func (o *UpdateSystemBatterySettingsRequest) GetBatteryMode() string {
	if o == nil || IsNil(o.BatteryMode) {
		var ret string
		return ret
	}
	return *o.BatteryMode
}

// GetBatteryModeOk returns a tuple with the BatteryMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSystemBatterySettingsRequest) GetBatteryModeOk() (*string, bool) {
	if o == nil || IsNil(o.BatteryMode) {
		return nil, false
	}
	return o.BatteryMode, true
}

// HasBatteryMode returns a boolean if a field has been set.
func (o *UpdateSystemBatterySettingsRequest) HasBatteryMode() bool {
	if o != nil && !IsNil(o.BatteryMode) {
		return true
	}

	return false
}

// SetBatteryMode gets a reference to the given string and assigns it to the BatteryMode field.
func (o *UpdateSystemBatterySettingsRequest) SetBatteryMode(v string) {
	o.BatteryMode = &v
}

// GetReserveSoc returns the ReserveSoc field value if set, zero value otherwise.
func (o *UpdateSystemBatterySettingsRequest) GetReserveSoc() int32 {
	if o == nil || IsNil(o.ReserveSoc) {
		var ret int32
		return ret
	}
	return *o.ReserveSoc
}

// GetReserveSocOk returns a tuple with the ReserveSoc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSystemBatterySettingsRequest) GetReserveSocOk() (*int32, bool) {
	if o == nil || IsNil(o.ReserveSoc) {
		return nil, false
	}
	return o.ReserveSoc, true
}

// HasReserveSoc returns a boolean if a field has been set.
func (o *UpdateSystemBatterySettingsRequest) HasReserveSoc() bool {
	if o != nil && !IsNil(o.ReserveSoc) {
		return true
	}

	return false
}

// SetReserveSoc gets a reference to the given int32 and assigns it to the ReserveSoc field.
func (o *UpdateSystemBatterySettingsRequest) SetReserveSoc(v int32) {
	o.ReserveSoc = &v
}

// GetEnergyIndependence returns the EnergyIndependence field value if set, zero value otherwise.
func (o *UpdateSystemBatterySettingsRequest) GetEnergyIndependence() string {
	if o == nil || IsNil(o.EnergyIndependence) {
		var ret string
		return ret
	}
	return *o.EnergyIndependence
}

// GetEnergyIndependenceOk returns a tuple with the EnergyIndependence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSystemBatterySettingsRequest) GetEnergyIndependenceOk() (*string, bool) {
	if o == nil || IsNil(o.EnergyIndependence) {
		return nil, false
	}
	return o.EnergyIndependence, true
}

// HasEnergyIndependence returns a boolean if a field has been set.
func (o *UpdateSystemBatterySettingsRequest) HasEnergyIndependence() bool {
	if o != nil && !IsNil(o.EnergyIndependence) {
		return true
	}

	return false
}

// SetEnergyIndependence gets a reference to the given string and assigns it to the EnergyIndependence field.
func (o *UpdateSystemBatterySettingsRequest) SetEnergyIndependence(v string) {
	o.EnergyIndependence = &v
}

func (o UpdateSystemBatterySettingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateSystemBatterySettingsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BatteryMode) {
		toSerialize["battery_mode"] = o.BatteryMode
	}
	if !IsNil(o.ReserveSoc) {
		toSerialize["reserve_soc"] = o.ReserveSoc
	}
	if !IsNil(o.EnergyIndependence) {
		toSerialize["energy_independence"] = o.EnergyIndependence
	}
	return toSerialize, nil
}

type NullableUpdateSystemBatterySettingsRequest struct {
	value *UpdateSystemBatterySettingsRequest
	isSet bool
}

func (v NullableUpdateSystemBatterySettingsRequest) Get() *UpdateSystemBatterySettingsRequest {
	return v.value
}

func (v *NullableUpdateSystemBatterySettingsRequest) Set(val *UpdateSystemBatterySettingsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSystemBatterySettingsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSystemBatterySettingsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSystemBatterySettingsRequest(val *UpdateSystemBatterySettingsRequest) *NullableUpdateSystemBatterySettingsRequest {
	return &NullableUpdateSystemBatterySettingsRequest{value: val, isSet: true}
}

func (v NullableUpdateSystemBatterySettingsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSystemBatterySettingsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


