/*
The Enphase Monitoring API

Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monitoring

import (
	"encoding/json"
)

// checks if the GetSystemsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSystemsResponse{}

// GetSystemsResponse struct for GetSystemsResponse
type GetSystemsResponse struct {
	// Total number of systems.
	Total *int32 `json:"total,omitempty"`
	// Number of the current page fetched.
	CurrentPage *int32 `json:"current_page,omitempty"`
	// Maximum number of records shown per page. Default=10, Min=1, Max=100.
	Size int32 `json:"size"`
	// Total number of systems actually returned for the current page.
	Count int32 `json:"count"`
	// Named key of the list data. In this endpoint, it is systems.
	Items *string `json:"items,omitempty"`
	// List of systems.
	Systems []SystemDetails `json:"systems,omitempty"`
}

// NewGetSystemsResponse instantiates a new GetSystemsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSystemsResponse(size int32, count int32) *GetSystemsResponse {
	this := GetSystemsResponse{}
	this.Size = size
	this.Count = count
	return &this
}

// NewGetSystemsResponseWithDefaults instantiates a new GetSystemsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSystemsResponseWithDefaults() *GetSystemsResponse {
	this := GetSystemsResponse{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *GetSystemsResponse) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemsResponse) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *GetSystemsResponse) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *GetSystemsResponse) SetTotal(v int32) {
	o.Total = &v
}

// GetCurrentPage returns the CurrentPage field value if set, zero value otherwise.
func (o *GetSystemsResponse) GetCurrentPage() int32 {
	if o == nil || IsNil(o.CurrentPage) {
		var ret int32
		return ret
	}
	return *o.CurrentPage
}

// GetCurrentPageOk returns a tuple with the CurrentPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemsResponse) GetCurrentPageOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrentPage) {
		return nil, false
	}
	return o.CurrentPage, true
}

// HasCurrentPage returns a boolean if a field has been set.
func (o *GetSystemsResponse) HasCurrentPage() bool {
	if o != nil && !IsNil(o.CurrentPage) {
		return true
	}

	return false
}

// SetCurrentPage gets a reference to the given int32 and assigns it to the CurrentPage field.
func (o *GetSystemsResponse) SetCurrentPage(v int32) {
	o.CurrentPage = &v
}

// GetSize returns the Size field value
func (o *GetSystemsResponse) GetSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *GetSystemsResponse) GetSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *GetSystemsResponse) SetSize(v int32) {
	o.Size = v
}

// GetCount returns the Count field value
func (o *GetSystemsResponse) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *GetSystemsResponse) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *GetSystemsResponse) SetCount(v int32) {
	o.Count = v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *GetSystemsResponse) GetItems() string {
	if o == nil || IsNil(o.Items) {
		var ret string
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemsResponse) GetItemsOk() (*string, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *GetSystemsResponse) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given string and assigns it to the Items field.
func (o *GetSystemsResponse) SetItems(v string) {
	o.Items = &v
}

// GetSystems returns the Systems field value if set, zero value otherwise.
func (o *GetSystemsResponse) GetSystems() []SystemDetails {
	if o == nil || IsNil(o.Systems) {
		var ret []SystemDetails
		return ret
	}
	return o.Systems
}

// GetSystemsOk returns a tuple with the Systems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemsResponse) GetSystemsOk() ([]SystemDetails, bool) {
	if o == nil || IsNil(o.Systems) {
		return nil, false
	}
	return o.Systems, true
}

// HasSystems returns a boolean if a field has been set.
func (o *GetSystemsResponse) HasSystems() bool {
	if o != nil && !IsNil(o.Systems) {
		return true
	}

	return false
}

// SetSystems gets a reference to the given []SystemDetails and assigns it to the Systems field.
func (o *GetSystemsResponse) SetSystems(v []SystemDetails) {
	o.Systems = v
}

func (o GetSystemsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSystemsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.CurrentPage) {
		toSerialize["current_page"] = o.CurrentPage
	}
	toSerialize["size"] = o.Size
	toSerialize["count"] = o.Count
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !IsNil(o.Systems) {
		toSerialize["systems"] = o.Systems
	}
	return toSerialize, nil
}

type NullableGetSystemsResponse struct {
	value *GetSystemsResponse
	isSet bool
}

func (v NullableGetSystemsResponse) Get() *GetSystemsResponse {
	return v.value
}

func (v *NullableGetSystemsResponse) Set(val *GetSystemsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSystemsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSystemsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSystemsResponse(val *GetSystemsResponse) *NullableGetSystemsResponse {
	return &NullableGetSystemsResponse{value: val, isSet: true}
}

func (v NullableGetSystemsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSystemsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


