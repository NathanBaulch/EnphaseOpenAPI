/*
The Enphase Monitoring API

Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monitoring

import (
	"encoding/json"
)

// checks if the GetInvertersSummaryByEnvoyOrSiteResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetInvertersSummaryByEnvoyOrSiteResponseInner{}

// GetInvertersSummaryByEnvoyOrSiteResponseInner struct for GetInvertersSummaryByEnvoyOrSiteResponseInner
type GetInvertersSummaryByEnvoyOrSiteResponseInner struct {
	// Signal strength.
	SignalStrength *int32 `json:"signal_strength,omitempty"`
	// Microinverters.
	MicroInverters []GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner `json:"micro_inverters,omitempty"`
}

// NewGetInvertersSummaryByEnvoyOrSiteResponseInner instantiates a new GetInvertersSummaryByEnvoyOrSiteResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetInvertersSummaryByEnvoyOrSiteResponseInner() *GetInvertersSummaryByEnvoyOrSiteResponseInner {
	this := GetInvertersSummaryByEnvoyOrSiteResponseInner{}
	return &this
}

// NewGetInvertersSummaryByEnvoyOrSiteResponseInnerWithDefaults instantiates a new GetInvertersSummaryByEnvoyOrSiteResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetInvertersSummaryByEnvoyOrSiteResponseInnerWithDefaults() *GetInvertersSummaryByEnvoyOrSiteResponseInner {
	this := GetInvertersSummaryByEnvoyOrSiteResponseInner{}
	return &this
}

// GetSignalStrength returns the SignalStrength field value if set, zero value otherwise.
func (o *GetInvertersSummaryByEnvoyOrSiteResponseInner) GetSignalStrength() int32 {
	if o == nil || IsNil(o.SignalStrength) {
		var ret int32
		return ret
	}
	return *o.SignalStrength
}

// GetSignalStrengthOk returns a tuple with the SignalStrength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInvertersSummaryByEnvoyOrSiteResponseInner) GetSignalStrengthOk() (*int32, bool) {
	if o == nil || IsNil(o.SignalStrength) {
		return nil, false
	}
	return o.SignalStrength, true
}

// HasSignalStrength returns a boolean if a field has been set.
func (o *GetInvertersSummaryByEnvoyOrSiteResponseInner) HasSignalStrength() bool {
	if o != nil && !IsNil(o.SignalStrength) {
		return true
	}

	return false
}

// SetSignalStrength gets a reference to the given int32 and assigns it to the SignalStrength field.
func (o *GetInvertersSummaryByEnvoyOrSiteResponseInner) SetSignalStrength(v int32) {
	o.SignalStrength = &v
}

// GetMicroInverters returns the MicroInverters field value if set, zero value otherwise.
func (o *GetInvertersSummaryByEnvoyOrSiteResponseInner) GetMicroInverters() []GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner {
	if o == nil || IsNil(o.MicroInverters) {
		var ret []GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner
		return ret
	}
	return o.MicroInverters
}

// GetMicroInvertersOk returns a tuple with the MicroInverters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInvertersSummaryByEnvoyOrSiteResponseInner) GetMicroInvertersOk() ([]GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner, bool) {
	if o == nil || IsNil(o.MicroInverters) {
		return nil, false
	}
	return o.MicroInverters, true
}

// HasMicroInverters returns a boolean if a field has been set.
func (o *GetInvertersSummaryByEnvoyOrSiteResponseInner) HasMicroInverters() bool {
	if o != nil && !IsNil(o.MicroInverters) {
		return true
	}

	return false
}

// SetMicroInverters gets a reference to the given []GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner and assigns it to the MicroInverters field.
func (o *GetInvertersSummaryByEnvoyOrSiteResponseInner) SetMicroInverters(v []GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner) {
	o.MicroInverters = v
}

func (o GetInvertersSummaryByEnvoyOrSiteResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetInvertersSummaryByEnvoyOrSiteResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SignalStrength) {
		toSerialize["signal_strength"] = o.SignalStrength
	}
	if !IsNil(o.MicroInverters) {
		toSerialize["micro_inverters"] = o.MicroInverters
	}
	return toSerialize, nil
}

type NullableGetInvertersSummaryByEnvoyOrSiteResponseInner struct {
	value *GetInvertersSummaryByEnvoyOrSiteResponseInner
	isSet bool
}

func (v NullableGetInvertersSummaryByEnvoyOrSiteResponseInner) Get() *GetInvertersSummaryByEnvoyOrSiteResponseInner {
	return v.value
}

func (v *NullableGetInvertersSummaryByEnvoyOrSiteResponseInner) Set(val *GetInvertersSummaryByEnvoyOrSiteResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetInvertersSummaryByEnvoyOrSiteResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetInvertersSummaryByEnvoyOrSiteResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetInvertersSummaryByEnvoyOrSiteResponseInner(val *GetInvertersSummaryByEnvoyOrSiteResponseInner) *NullableGetInvertersSummaryByEnvoyOrSiteResponseInner {
	return &NullableGetInvertersSummaryByEnvoyOrSiteResponseInner{value: val, isSet: true}
}

func (v NullableGetInvertersSummaryByEnvoyOrSiteResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetInvertersSummaryByEnvoyOrSiteResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


