/*
The Enphase Commissioning API

Commissioning API can be used to create and update activations on a site, manage companies and users, update Tariff, etc.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package commissioning

import (
	"encoding/json"
)

// checks if the SetActivationMeterStatusResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetActivationMeterStatusResponse{}

// SetActivationMeterStatusResponse struct for SetActivationMeterStatusResponse
type SetActivationMeterStatusResponse struct {
	Reason *string `json:"reason,omitempty"`
	Message []string `json:"message,omitempty"`
}

// NewSetActivationMeterStatusResponse instantiates a new SetActivationMeterStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetActivationMeterStatusResponse() *SetActivationMeterStatusResponse {
	this := SetActivationMeterStatusResponse{}
	return &this
}

// NewSetActivationMeterStatusResponseWithDefaults instantiates a new SetActivationMeterStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetActivationMeterStatusResponseWithDefaults() *SetActivationMeterStatusResponse {
	this := SetActivationMeterStatusResponse{}
	return &this
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *SetActivationMeterStatusResponse) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetActivationMeterStatusResponse) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *SetActivationMeterStatusResponse) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *SetActivationMeterStatusResponse) SetReason(v string) {
	o.Reason = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *SetActivationMeterStatusResponse) GetMessage() []string {
	if o == nil || IsNil(o.Message) {
		var ret []string
		return ret
	}
	return o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetActivationMeterStatusResponse) GetMessageOk() ([]string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *SetActivationMeterStatusResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given []string and assigns it to the Message field.
func (o *SetActivationMeterStatusResponse) SetMessage(v []string) {
	o.Message = v
}

func (o SetActivationMeterStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetActivationMeterStatusResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableSetActivationMeterStatusResponse struct {
	value *SetActivationMeterStatusResponse
	isSet bool
}

func (v NullableSetActivationMeterStatusResponse) Get() *SetActivationMeterStatusResponse {
	return v.value
}

func (v *NullableSetActivationMeterStatusResponse) Set(val *SetActivationMeterStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSetActivationMeterStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSetActivationMeterStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetActivationMeterStatusResponse(val *SetActivationMeterStatusResponse) *NullableSetActivationMeterStatusResponse {
	return &NullableSetActivationMeterStatusResponse{value: val, isSet: true}
}

func (v NullableSetActivationMeterStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetActivationMeterStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


