/*
The Enphase Commissioning API

Commissioning API can be used to create and update activations on a site, manage companies and users, update Tariff, etc.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package commissioning

import (
	"encoding/json"
)

// checks if the SystemEnchargeInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SystemEnchargeInner{}

// SystemEnchargeInner struct for SystemEnchargeInner
type SystemEnchargeInner struct {
	// Envoy serial number.
	EnvoySerialNumber *string `json:"envoy_serial_number,omitempty"`
	// Encharge serial numbers.
	EnchargeSerialNumbers []string `json:"encharge_serial_numbers,omitempty"`
}

// NewSystemEnchargeInner instantiates a new SystemEnchargeInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemEnchargeInner() *SystemEnchargeInner {
	this := SystemEnchargeInner{}
	return &this
}

// NewSystemEnchargeInnerWithDefaults instantiates a new SystemEnchargeInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemEnchargeInnerWithDefaults() *SystemEnchargeInner {
	this := SystemEnchargeInner{}
	return &this
}

// GetEnvoySerialNumber returns the EnvoySerialNumber field value if set, zero value otherwise.
func (o *SystemEnchargeInner) GetEnvoySerialNumber() string {
	if o == nil || IsNil(o.EnvoySerialNumber) {
		var ret string
		return ret
	}
	return *o.EnvoySerialNumber
}

// GetEnvoySerialNumberOk returns a tuple with the EnvoySerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemEnchargeInner) GetEnvoySerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.EnvoySerialNumber) {
		return nil, false
	}
	return o.EnvoySerialNumber, true
}

// HasEnvoySerialNumber returns a boolean if a field has been set.
func (o *SystemEnchargeInner) HasEnvoySerialNumber() bool {
	if o != nil && !IsNil(o.EnvoySerialNumber) {
		return true
	}

	return false
}

// SetEnvoySerialNumber gets a reference to the given string and assigns it to the EnvoySerialNumber field.
func (o *SystemEnchargeInner) SetEnvoySerialNumber(v string) {
	o.EnvoySerialNumber = &v
}

// GetEnchargeSerialNumbers returns the EnchargeSerialNumbers field value if set, zero value otherwise.
func (o *SystemEnchargeInner) GetEnchargeSerialNumbers() []string {
	if o == nil || IsNil(o.EnchargeSerialNumbers) {
		var ret []string
		return ret
	}
	return o.EnchargeSerialNumbers
}

// GetEnchargeSerialNumbersOk returns a tuple with the EnchargeSerialNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemEnchargeInner) GetEnchargeSerialNumbersOk() ([]string, bool) {
	if o == nil || IsNil(o.EnchargeSerialNumbers) {
		return nil, false
	}
	return o.EnchargeSerialNumbers, true
}

// HasEnchargeSerialNumbers returns a boolean if a field has been set.
func (o *SystemEnchargeInner) HasEnchargeSerialNumbers() bool {
	if o != nil && !IsNil(o.EnchargeSerialNumbers) {
		return true
	}

	return false
}

// SetEnchargeSerialNumbers gets a reference to the given []string and assigns it to the EnchargeSerialNumbers field.
func (o *SystemEnchargeInner) SetEnchargeSerialNumbers(v []string) {
	o.EnchargeSerialNumbers = v
}

func (o SystemEnchargeInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SystemEnchargeInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnvoySerialNumber) {
		toSerialize["envoy_serial_number"] = o.EnvoySerialNumber
	}
	if !IsNil(o.EnchargeSerialNumbers) {
		toSerialize["encharge_serial_numbers"] = o.EnchargeSerialNumbers
	}
	return toSerialize, nil
}

type NullableSystemEnchargeInner struct {
	value *SystemEnchargeInner
	isSet bool
}

func (v NullableSystemEnchargeInner) Get() *SystemEnchargeInner {
	return v.value
}

func (v *NullableSystemEnchargeInner) Set(val *SystemEnchargeInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemEnchargeInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemEnchargeInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemEnchargeInner(val *SystemEnchargeInner) *NullableSystemEnchargeInner {
	return &NullableSystemEnchargeInner{value: val, isSet: true}
}

func (v NullableSystemEnchargeInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemEnchargeInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


