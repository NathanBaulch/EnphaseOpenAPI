/*
The Enphase Commissioning API

Commissioning API can be used to create and update activations on a site, manage companies and users, update Tariff, etc.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package commissioning

import (
	"encoding/json"
)

// checks if the SystemEnpowerInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SystemEnpowerInner{}

// SystemEnpowerInner struct for SystemEnpowerInner
type SystemEnpowerInner struct {
	// Envoy serial number.
	EnvoySerialNumber *string `json:"envoy_serial_number,omitempty"`
	// Enpower serial numbers.
	EnpowerSerialNumbers []string `json:"enpower_serial_numbers,omitempty"`
}

// NewSystemEnpowerInner instantiates a new SystemEnpowerInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemEnpowerInner() *SystemEnpowerInner {
	this := SystemEnpowerInner{}
	return &this
}

// NewSystemEnpowerInnerWithDefaults instantiates a new SystemEnpowerInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemEnpowerInnerWithDefaults() *SystemEnpowerInner {
	this := SystemEnpowerInner{}
	return &this
}

// GetEnvoySerialNumber returns the EnvoySerialNumber field value if set, zero value otherwise.
func (o *SystemEnpowerInner) GetEnvoySerialNumber() string {
	if o == nil || IsNil(o.EnvoySerialNumber) {
		var ret string
		return ret
	}
	return *o.EnvoySerialNumber
}

// GetEnvoySerialNumberOk returns a tuple with the EnvoySerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemEnpowerInner) GetEnvoySerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.EnvoySerialNumber) {
		return nil, false
	}
	return o.EnvoySerialNumber, true
}

// HasEnvoySerialNumber returns a boolean if a field has been set.
func (o *SystemEnpowerInner) HasEnvoySerialNumber() bool {
	if o != nil && !IsNil(o.EnvoySerialNumber) {
		return true
	}

	return false
}

// SetEnvoySerialNumber gets a reference to the given string and assigns it to the EnvoySerialNumber field.
func (o *SystemEnpowerInner) SetEnvoySerialNumber(v string) {
	o.EnvoySerialNumber = &v
}

// GetEnpowerSerialNumbers returns the EnpowerSerialNumbers field value if set, zero value otherwise.
func (o *SystemEnpowerInner) GetEnpowerSerialNumbers() []string {
	if o == nil || IsNil(o.EnpowerSerialNumbers) {
		var ret []string
		return ret
	}
	return o.EnpowerSerialNumbers
}

// GetEnpowerSerialNumbersOk returns a tuple with the EnpowerSerialNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemEnpowerInner) GetEnpowerSerialNumbersOk() ([]string, bool) {
	if o == nil || IsNil(o.EnpowerSerialNumbers) {
		return nil, false
	}
	return o.EnpowerSerialNumbers, true
}

// HasEnpowerSerialNumbers returns a boolean if a field has been set.
func (o *SystemEnpowerInner) HasEnpowerSerialNumbers() bool {
	if o != nil && !IsNil(o.EnpowerSerialNumbers) {
		return true
	}

	return false
}

// SetEnpowerSerialNumbers gets a reference to the given []string and assigns it to the EnpowerSerialNumbers field.
func (o *SystemEnpowerInner) SetEnpowerSerialNumbers(v []string) {
	o.EnpowerSerialNumbers = v
}

func (o SystemEnpowerInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SystemEnpowerInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnvoySerialNumber) {
		toSerialize["envoy_serial_number"] = o.EnvoySerialNumber
	}
	if !IsNil(o.EnpowerSerialNumbers) {
		toSerialize["enpower_serial_numbers"] = o.EnpowerSerialNumbers
	}
	return toSerialize, nil
}

type NullableSystemEnpowerInner struct {
	value *SystemEnpowerInner
	isSet bool
}

func (v NullableSystemEnpowerInner) Get() *SystemEnpowerInner {
	return v.value
}

func (v *NullableSystemEnpowerInner) Set(val *SystemEnpowerInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemEnpowerInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemEnpowerInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemEnpowerInner(val *SystemEnpowerInner) *NullableSystemEnpowerInner {
	return &NullableSystemEnpowerInner{value: val, isSet: true}
}

func (v NullableSystemEnpowerInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemEnpowerInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


