/*
The Enphase Commissioning API

Commissioning API can be used to create and update activations on a site, manage companies and users, update Tariff, etc.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package commissioning

import (
	"encoding/json"
)

// checks if the ArrayParamsModulesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArrayParamsModulesInner{}

// ArrayParamsModulesInner struct for ArrayParamsModulesInner
type ArrayParamsModulesInner struct {
	// ID of the module. ID cannot be changed. It is only used to identify the array that needs to be updated.
	Id *int32 `json:"id,omitempty"`
	// Left axis position of module w.r.t Array. Increase the value to move the module to the right, and decrease to move it to the left.
	Left int32 `json:"left"`
	// Top axis position of module w.r.t Array. Increase the value to move the module up, and decrease to move it down.
	Top int32 `json:"top"`
	// Angle of the module. Rotate the module clockwise by the given value w.r.t array angle. For example to rotate the array clockwise by 90 degrees pass 90.
	Angle int32 `json:"angle"`
	// Inverter serial number mapped with this module.
	SerialNum string `json:"serial_num"`
}

// NewArrayParamsModulesInner instantiates a new ArrayParamsModulesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArrayParamsModulesInner(left int32, top int32, angle int32, serialNum string) *ArrayParamsModulesInner {
	this := ArrayParamsModulesInner{}
	this.Left = left
	this.Top = top
	this.Angle = angle
	this.SerialNum = serialNum
	return &this
}

// NewArrayParamsModulesInnerWithDefaults instantiates a new ArrayParamsModulesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArrayParamsModulesInnerWithDefaults() *ArrayParamsModulesInner {
	this := ArrayParamsModulesInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ArrayParamsModulesInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArrayParamsModulesInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ArrayParamsModulesInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ArrayParamsModulesInner) SetId(v int32) {
	o.Id = &v
}

// GetLeft returns the Left field value
func (o *ArrayParamsModulesInner) GetLeft() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Left
}

// GetLeftOk returns a tuple with the Left field value
// and a boolean to check if the value has been set.
func (o *ArrayParamsModulesInner) GetLeftOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Left, true
}

// SetLeft sets field value
func (o *ArrayParamsModulesInner) SetLeft(v int32) {
	o.Left = v
}

// GetTop returns the Top field value
func (o *ArrayParamsModulesInner) GetTop() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Top
}

// GetTopOk returns a tuple with the Top field value
// and a boolean to check if the value has been set.
func (o *ArrayParamsModulesInner) GetTopOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Top, true
}

// SetTop sets field value
func (o *ArrayParamsModulesInner) SetTop(v int32) {
	o.Top = v
}

// GetAngle returns the Angle field value
func (o *ArrayParamsModulesInner) GetAngle() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Angle
}

// GetAngleOk returns a tuple with the Angle field value
// and a boolean to check if the value has been set.
func (o *ArrayParamsModulesInner) GetAngleOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Angle, true
}

// SetAngle sets field value
func (o *ArrayParamsModulesInner) SetAngle(v int32) {
	o.Angle = v
}

// GetSerialNum returns the SerialNum field value
func (o *ArrayParamsModulesInner) GetSerialNum() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SerialNum
}

// GetSerialNumOk returns a tuple with the SerialNum field value
// and a boolean to check if the value has been set.
func (o *ArrayParamsModulesInner) GetSerialNumOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SerialNum, true
}

// SetSerialNum sets field value
func (o *ArrayParamsModulesInner) SetSerialNum(v string) {
	o.SerialNum = v
}

func (o ArrayParamsModulesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArrayParamsModulesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["left"] = o.Left
	toSerialize["top"] = o.Top
	toSerialize["angle"] = o.Angle
	toSerialize["serial_num"] = o.SerialNum
	return toSerialize, nil
}

type NullableArrayParamsModulesInner struct {
	value *ArrayParamsModulesInner
	isSet bool
}

func (v NullableArrayParamsModulesInner) Get() *ArrayParamsModulesInner {
	return v.value
}

func (v *NullableArrayParamsModulesInner) Set(val *ArrayParamsModulesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableArrayParamsModulesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableArrayParamsModulesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArrayParamsModulesInner(val *ArrayParamsModulesInner) *NullableArrayParamsModulesInner {
	return &NullableArrayParamsModulesInner{value: val, isSet: true}
}

func (v NullableArrayParamsModulesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArrayParamsModulesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


