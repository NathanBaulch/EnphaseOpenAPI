/*
The Enphase Commissioning API

Commissioning API can be used to create and update activations on a site, manage companies and users, update Tariff, etc.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package commissioning

import (
	"encoding/json"
)

// checks if the SetActivationMeterStatusRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetActivationMeterStatusRequest{}

// SetActivationMeterStatusRequest struct for SetActivationMeterStatusRequest
type SetActivationMeterStatusRequest struct {
	Status *SystemMeterStatusEnum `json:"status,omitempty"`
}

// NewSetActivationMeterStatusRequest instantiates a new SetActivationMeterStatusRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetActivationMeterStatusRequest() *SetActivationMeterStatusRequest {
	this := SetActivationMeterStatusRequest{}
	return &this
}

// NewSetActivationMeterStatusRequestWithDefaults instantiates a new SetActivationMeterStatusRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetActivationMeterStatusRequestWithDefaults() *SetActivationMeterStatusRequest {
	this := SetActivationMeterStatusRequest{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SetActivationMeterStatusRequest) GetStatus() SystemMeterStatusEnum {
	if o == nil || IsNil(o.Status) {
		var ret SystemMeterStatusEnum
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetActivationMeterStatusRequest) GetStatusOk() (*SystemMeterStatusEnum, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SetActivationMeterStatusRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given SystemMeterStatusEnum and assigns it to the Status field.
func (o *SetActivationMeterStatusRequest) SetStatus(v SystemMeterStatusEnum) {
	o.Status = &v
}

func (o SetActivationMeterStatusRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetActivationMeterStatusRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableSetActivationMeterStatusRequest struct {
	value *SetActivationMeterStatusRequest
	isSet bool
}

func (v NullableSetActivationMeterStatusRequest) Get() *SetActivationMeterStatusRequest {
	return v.value
}

func (v *NullableSetActivationMeterStatusRequest) Set(val *SetActivationMeterStatusRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetActivationMeterStatusRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetActivationMeterStatusRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetActivationMeterStatusRequest(val *SetActivationMeterStatusRequest) *NullableSetActivationMeterStatusRequest {
	return &NullableSetActivationMeterStatusRequest{value: val, isSet: true}
}

func (v NullableSetActivationMeterStatusRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetActivationMeterStatusRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


