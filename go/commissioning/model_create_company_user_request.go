/*
The Enphase Commissioning API

Commissioning API can be used to create and update activations on a site, manage companies and users, update Tariff, etc.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package commissioning

import (
	"encoding/json"
)

// checks if the CreateCompanyUserRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateCompanyUserRequest{}

// CreateCompanyUserRequest struct for CreateCompanyUserRequest
type CreateCompanyUserRequest struct {
	// Email address of the user. Must be unique within Enlighten. Required.
	Email string `json:"email"`
	// Whether the user receives automated emails from Enlighten. Default false.
	EnlightenEmails *bool `json:"enlighten_emails,omitempty"`
	// User's first name. Required.
	FirstName string `json:"first_name"`
	// User's last name. Required.
	LastName string `json:"last_name"`
	// Telephone number of the user. Optional.
	Phone *string `json:"phone,omitempty"`
}

// NewCreateCompanyUserRequest instantiates a new CreateCompanyUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCompanyUserRequest(email string, firstName string, lastName string) *CreateCompanyUserRequest {
	this := CreateCompanyUserRequest{}
	this.Email = email
	this.FirstName = firstName
	this.LastName = lastName
	return &this
}

// NewCreateCompanyUserRequestWithDefaults instantiates a new CreateCompanyUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCompanyUserRequestWithDefaults() *CreateCompanyUserRequest {
	this := CreateCompanyUserRequest{}
	return &this
}

// GetEmail returns the Email field value
func (o *CreateCompanyUserRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *CreateCompanyUserRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *CreateCompanyUserRequest) SetEmail(v string) {
	o.Email = v
}

// GetEnlightenEmails returns the EnlightenEmails field value if set, zero value otherwise.
func (o *CreateCompanyUserRequest) GetEnlightenEmails() bool {
	if o == nil || IsNil(o.EnlightenEmails) {
		var ret bool
		return ret
	}
	return *o.EnlightenEmails
}

// GetEnlightenEmailsOk returns a tuple with the EnlightenEmails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCompanyUserRequest) GetEnlightenEmailsOk() (*bool, bool) {
	if o == nil || IsNil(o.EnlightenEmails) {
		return nil, false
	}
	return o.EnlightenEmails, true
}

// HasEnlightenEmails returns a boolean if a field has been set.
func (o *CreateCompanyUserRequest) HasEnlightenEmails() bool {
	if o != nil && !IsNil(o.EnlightenEmails) {
		return true
	}

	return false
}

// SetEnlightenEmails gets a reference to the given bool and assigns it to the EnlightenEmails field.
func (o *CreateCompanyUserRequest) SetEnlightenEmails(v bool) {
	o.EnlightenEmails = &v
}

// GetFirstName returns the FirstName field value
func (o *CreateCompanyUserRequest) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *CreateCompanyUserRequest) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *CreateCompanyUserRequest) SetFirstName(v string) {
	o.FirstName = v
}

// GetLastName returns the LastName field value
func (o *CreateCompanyUserRequest) GetLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *CreateCompanyUserRequest) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *CreateCompanyUserRequest) SetLastName(v string) {
	o.LastName = v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *CreateCompanyUserRequest) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCompanyUserRequest) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *CreateCompanyUserRequest) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *CreateCompanyUserRequest) SetPhone(v string) {
	o.Phone = &v
}

func (o CreateCompanyUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCompanyUserRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	if !IsNil(o.EnlightenEmails) {
		toSerialize["enlighten_emails"] = o.EnlightenEmails
	}
	toSerialize["first_name"] = o.FirstName
	toSerialize["last_name"] = o.LastName
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	return toSerialize, nil
}

type NullableCreateCompanyUserRequest struct {
	value *CreateCompanyUserRequest
	isSet bool
}

func (v NullableCreateCompanyUserRequest) Get() *CreateCompanyUserRequest {
	return v.value
}

func (v *NullableCreateCompanyUserRequest) Set(val *CreateCompanyUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCompanyUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCompanyUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCompanyUserRequest(val *CreateCompanyUserRequest) *NullableCreateCompanyUserRequest {
	return &NullableCreateCompanyUserRequest{value: val, isSet: true}
}

func (v NullableCreateCompanyUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCompanyUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


