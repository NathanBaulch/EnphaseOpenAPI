/*
The Enphase Commissioning API

Commissioning API can be used to create and update activations on a site, manage companies and users, update Tariff, etc.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package commissioning

import (
	"encoding/json"
)

// checks if the UpdateActivationEstimateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateActivationEstimateRequest{}

// UpdateActivationEstimateRequest struct for UpdateActivationEstimateRequest
type UpdateActivationEstimateRequest struct {
	// Annual production degradation factor for the system, from year 0 of the system's life. Must be 0.0% or higher.
	DegradeFactor string `json:"degrade_factor"`
	// Estimated monthly production of the system, in kWh. A value for each month must be provided, and must be greater than 0. Send an empty array if you need to remove monthly estimates.
	MonthEstimates []string `json:"month_estimates"`
}

// NewUpdateActivationEstimateRequest instantiates a new UpdateActivationEstimateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateActivationEstimateRequest(degradeFactor string, monthEstimates []string) *UpdateActivationEstimateRequest {
	this := UpdateActivationEstimateRequest{}
	this.DegradeFactor = degradeFactor
	this.MonthEstimates = monthEstimates
	return &this
}

// NewUpdateActivationEstimateRequestWithDefaults instantiates a new UpdateActivationEstimateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateActivationEstimateRequestWithDefaults() *UpdateActivationEstimateRequest {
	this := UpdateActivationEstimateRequest{}
	return &this
}

// GetDegradeFactor returns the DegradeFactor field value
func (o *UpdateActivationEstimateRequest) GetDegradeFactor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DegradeFactor
}

// GetDegradeFactorOk returns a tuple with the DegradeFactor field value
// and a boolean to check if the value has been set.
func (o *UpdateActivationEstimateRequest) GetDegradeFactorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DegradeFactor, true
}

// SetDegradeFactor sets field value
func (o *UpdateActivationEstimateRequest) SetDegradeFactor(v string) {
	o.DegradeFactor = v
}

// GetMonthEstimates returns the MonthEstimates field value
func (o *UpdateActivationEstimateRequest) GetMonthEstimates() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.MonthEstimates
}

// GetMonthEstimatesOk returns a tuple with the MonthEstimates field value
// and a boolean to check if the value has been set.
func (o *UpdateActivationEstimateRequest) GetMonthEstimatesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MonthEstimates, true
}

// SetMonthEstimates sets field value
func (o *UpdateActivationEstimateRequest) SetMonthEstimates(v []string) {
	o.MonthEstimates = v
}

func (o UpdateActivationEstimateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateActivationEstimateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["degrade_factor"] = o.DegradeFactor
	toSerialize["month_estimates"] = o.MonthEstimates
	return toSerialize, nil
}

type NullableUpdateActivationEstimateRequest struct {
	value *UpdateActivationEstimateRequest
	isSet bool
}

func (v NullableUpdateActivationEstimateRequest) Get() *UpdateActivationEstimateRequest {
	return v.value
}

func (v *NullableUpdateActivationEstimateRequest) Set(val *UpdateActivationEstimateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateActivationEstimateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateActivationEstimateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateActivationEstimateRequest(val *UpdateActivationEstimateRequest) *NullableUpdateActivationEstimateRequest {
	return &NullableUpdateActivationEstimateRequest{value: val, isSet: true}
}

func (v NullableUpdateActivationEstimateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateActivationEstimateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


