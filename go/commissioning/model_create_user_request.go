/*
The Enphase Commissioning API

Commissioning API can be used to create and update activations on a site, manage companies and users, update Tariff, etc.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package commissioning

import (
	"encoding/json"
)

// checks if the CreateUserRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUserRequest{}

// CreateUserRequest struct for CreateUserRequest
type CreateUserRequest struct {
	// Email address of the user. Must be unique within Enlighten. Required.
	Email string `json:"email"`
	// Whether the user receives automated emails from Enlighten. Default false.
	EnlightenEmails *bool `json:"enlighten_emails,omitempty"`
	// Which view of Enlighten the user has. Options 'my' for MyEnlighten, 'manager' for Enlighten Manager. Default 'my'. Users who do not belong to companies should be set to 'my'. You must have an agreement with Enphase Energy to set a user to 'manager'. Company ID is required when enlighten_view is 'manager'.
	EnlightenView *string `json:"enlighten_view,omitempty"`
	// User's first name. Required.
	FirstName string `json:"first_name"`
	// User's last name. Required.
	LastName string `json:"last_name"`
	// Telephone number of the user. Optional.
	Phone *string `json:"phone,omitempty"`
	// Enlighten-generated ID of the company to which the user belongs, if any.
	CompanyId *int32 `json:"company_id,omitempty"`
}

// NewCreateUserRequest instantiates a new CreateUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUserRequest(email string, firstName string, lastName string) *CreateUserRequest {
	this := CreateUserRequest{}
	this.Email = email
	this.FirstName = firstName
	this.LastName = lastName
	return &this
}

// NewCreateUserRequestWithDefaults instantiates a new CreateUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUserRequestWithDefaults() *CreateUserRequest {
	this := CreateUserRequest{}
	return &this
}

// GetEmail returns the Email field value
func (o *CreateUserRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *CreateUserRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *CreateUserRequest) SetEmail(v string) {
	o.Email = v
}

// GetEnlightenEmails returns the EnlightenEmails field value if set, zero value otherwise.
func (o *CreateUserRequest) GetEnlightenEmails() bool {
	if o == nil || IsNil(o.EnlightenEmails) {
		var ret bool
		return ret
	}
	return *o.EnlightenEmails
}

// GetEnlightenEmailsOk returns a tuple with the EnlightenEmails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRequest) GetEnlightenEmailsOk() (*bool, bool) {
	if o == nil || IsNil(o.EnlightenEmails) {
		return nil, false
	}
	return o.EnlightenEmails, true
}

// HasEnlightenEmails returns a boolean if a field has been set.
func (o *CreateUserRequest) HasEnlightenEmails() bool {
	if o != nil && !IsNil(o.EnlightenEmails) {
		return true
	}

	return false
}

// SetEnlightenEmails gets a reference to the given bool and assigns it to the EnlightenEmails field.
func (o *CreateUserRequest) SetEnlightenEmails(v bool) {
	o.EnlightenEmails = &v
}

// GetEnlightenView returns the EnlightenView field value if set, zero value otherwise.
func (o *CreateUserRequest) GetEnlightenView() string {
	if o == nil || IsNil(o.EnlightenView) {
		var ret string
		return ret
	}
	return *o.EnlightenView
}

// GetEnlightenViewOk returns a tuple with the EnlightenView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRequest) GetEnlightenViewOk() (*string, bool) {
	if o == nil || IsNil(o.EnlightenView) {
		return nil, false
	}
	return o.EnlightenView, true
}

// HasEnlightenView returns a boolean if a field has been set.
func (o *CreateUserRequest) HasEnlightenView() bool {
	if o != nil && !IsNil(o.EnlightenView) {
		return true
	}

	return false
}

// SetEnlightenView gets a reference to the given string and assigns it to the EnlightenView field.
func (o *CreateUserRequest) SetEnlightenView(v string) {
	o.EnlightenView = &v
}

// GetFirstName returns the FirstName field value
func (o *CreateUserRequest) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *CreateUserRequest) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *CreateUserRequest) SetFirstName(v string) {
	o.FirstName = v
}

// GetLastName returns the LastName field value
func (o *CreateUserRequest) GetLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *CreateUserRequest) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *CreateUserRequest) SetLastName(v string) {
	o.LastName = v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *CreateUserRequest) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRequest) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *CreateUserRequest) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *CreateUserRequest) SetPhone(v string) {
	o.Phone = &v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *CreateUserRequest) GetCompanyId() int32 {
	if o == nil || IsNil(o.CompanyId) {
		var ret int32
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRequest) GetCompanyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *CreateUserRequest) HasCompanyId() bool {
	if o != nil && !IsNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given int32 and assigns it to the CompanyId field.
func (o *CreateUserRequest) SetCompanyId(v int32) {
	o.CompanyId = &v
}

func (o CreateUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUserRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["email"] = o.Email
	if !IsNil(o.EnlightenEmails) {
		toSerialize["enlighten_emails"] = o.EnlightenEmails
	}
	if !IsNil(o.EnlightenView) {
		toSerialize["enlighten_view"] = o.EnlightenView
	}
	toSerialize["first_name"] = o.FirstName
	toSerialize["last_name"] = o.LastName
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.CompanyId) {
		toSerialize["company_id"] = o.CompanyId
	}
	return toSerialize, nil
}

type NullableCreateUserRequest struct {
	value *CreateUserRequest
	isSet bool
}

func (v NullableCreateUserRequest) Get() *CreateUserRequest {
	return v.value
}

func (v *NullableCreateUserRequest) Set(val *CreateUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUserRequest(val *CreateUserRequest) *NullableCreateUserRequest {
	return &NullableCreateUserRequest{value: val, isSet: true}
}

func (v NullableCreateUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


