/*
The Enphase Commissioning API

Commissioning API can be used to create and update activations on a site, manage companies and users, update Tariff, etc.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package commissioning

import (
	"encoding/json"
	"time"
)

// checks if the GetSystemMeterResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSystemMeterResponse{}

// GetSystemMeterResponse struct for GetSystemMeterResponse
type GetSystemMeterResponse struct {
	// Meter serial number.
	SerialNumber *string `json:"serial_number,omitempty"`
	// Name of the manufacturer.
	Manufacturer *string `json:"manufacturer,omitempty"`
	// Model.
	Model *string `json:"model,omitempty"`
	// Meter type.
	Type *string `json:"type,omitempty"`
	// Operational date.
	OperationalDate *string `json:"operational_date,omitempty"`
	// First report date.
	FirstReportDate *time.Time `json:"first_report_date,omitempty"`
	// Last report date.
	LastReportDate *time.Time `json:"last_report_date,omitempty"`
	// Phase.
	Phase *string `json:"phase,omitempty"`
	// Envoy serial number.
	EnvoySerialNumber *string `json:"envoy_serial_number,omitempty"`
	// Meter status.
	Status *string `json:"status,omitempty"`
	// Meter state.
	State *string `json:"state,omitempty"`
}

// NewGetSystemMeterResponse instantiates a new GetSystemMeterResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSystemMeterResponse() *GetSystemMeterResponse {
	this := GetSystemMeterResponse{}
	return &this
}

// NewGetSystemMeterResponseWithDefaults instantiates a new GetSystemMeterResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSystemMeterResponseWithDefaults() *GetSystemMeterResponse {
	this := GetSystemMeterResponse{}
	return &this
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *GetSystemMeterResponse) GetSerialNumber() string {
	if o == nil || IsNil(o.SerialNumber) {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemMeterResponse) GetSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SerialNumber) {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *GetSystemMeterResponse) HasSerialNumber() bool {
	if o != nil && !IsNil(o.SerialNumber) {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *GetSystemMeterResponse) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetManufacturer returns the Manufacturer field value if set, zero value otherwise.
func (o *GetSystemMeterResponse) GetManufacturer() string {
	if o == nil || IsNil(o.Manufacturer) {
		var ret string
		return ret
	}
	return *o.Manufacturer
}

// GetManufacturerOk returns a tuple with the Manufacturer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemMeterResponse) GetManufacturerOk() (*string, bool) {
	if o == nil || IsNil(o.Manufacturer) {
		return nil, false
	}
	return o.Manufacturer, true
}

// HasManufacturer returns a boolean if a field has been set.
func (o *GetSystemMeterResponse) HasManufacturer() bool {
	if o != nil && !IsNil(o.Manufacturer) {
		return true
	}

	return false
}

// SetManufacturer gets a reference to the given string and assigns it to the Manufacturer field.
func (o *GetSystemMeterResponse) SetManufacturer(v string) {
	o.Manufacturer = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *GetSystemMeterResponse) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemMeterResponse) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *GetSystemMeterResponse) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *GetSystemMeterResponse) SetModel(v string) {
	o.Model = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetSystemMeterResponse) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemMeterResponse) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetSystemMeterResponse) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetSystemMeterResponse) SetType(v string) {
	o.Type = &v
}

// GetOperationalDate returns the OperationalDate field value if set, zero value otherwise.
func (o *GetSystemMeterResponse) GetOperationalDate() string {
	if o == nil || IsNil(o.OperationalDate) {
		var ret string
		return ret
	}
	return *o.OperationalDate
}

// GetOperationalDateOk returns a tuple with the OperationalDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemMeterResponse) GetOperationalDateOk() (*string, bool) {
	if o == nil || IsNil(o.OperationalDate) {
		return nil, false
	}
	return o.OperationalDate, true
}

// HasOperationalDate returns a boolean if a field has been set.
func (o *GetSystemMeterResponse) HasOperationalDate() bool {
	if o != nil && !IsNil(o.OperationalDate) {
		return true
	}

	return false
}

// SetOperationalDate gets a reference to the given string and assigns it to the OperationalDate field.
func (o *GetSystemMeterResponse) SetOperationalDate(v string) {
	o.OperationalDate = &v
}

// GetFirstReportDate returns the FirstReportDate field value if set, zero value otherwise.
func (o *GetSystemMeterResponse) GetFirstReportDate() time.Time {
	if o == nil || IsNil(o.FirstReportDate) {
		var ret time.Time
		return ret
	}
	return *o.FirstReportDate
}

// GetFirstReportDateOk returns a tuple with the FirstReportDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemMeterResponse) GetFirstReportDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.FirstReportDate) {
		return nil, false
	}
	return o.FirstReportDate, true
}

// HasFirstReportDate returns a boolean if a field has been set.
func (o *GetSystemMeterResponse) HasFirstReportDate() bool {
	if o != nil && !IsNil(o.FirstReportDate) {
		return true
	}

	return false
}

// SetFirstReportDate gets a reference to the given time.Time and assigns it to the FirstReportDate field.
func (o *GetSystemMeterResponse) SetFirstReportDate(v time.Time) {
	o.FirstReportDate = &v
}

// GetLastReportDate returns the LastReportDate field value if set, zero value otherwise.
func (o *GetSystemMeterResponse) GetLastReportDate() time.Time {
	if o == nil || IsNil(o.LastReportDate) {
		var ret time.Time
		return ret
	}
	return *o.LastReportDate
}

// GetLastReportDateOk returns a tuple with the LastReportDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemMeterResponse) GetLastReportDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastReportDate) {
		return nil, false
	}
	return o.LastReportDate, true
}

// HasLastReportDate returns a boolean if a field has been set.
func (o *GetSystemMeterResponse) HasLastReportDate() bool {
	if o != nil && !IsNil(o.LastReportDate) {
		return true
	}

	return false
}

// SetLastReportDate gets a reference to the given time.Time and assigns it to the LastReportDate field.
func (o *GetSystemMeterResponse) SetLastReportDate(v time.Time) {
	o.LastReportDate = &v
}

// GetPhase returns the Phase field value if set, zero value otherwise.
func (o *GetSystemMeterResponse) GetPhase() string {
	if o == nil || IsNil(o.Phase) {
		var ret string
		return ret
	}
	return *o.Phase
}

// GetPhaseOk returns a tuple with the Phase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemMeterResponse) GetPhaseOk() (*string, bool) {
	if o == nil || IsNil(o.Phase) {
		return nil, false
	}
	return o.Phase, true
}

// HasPhase returns a boolean if a field has been set.
func (o *GetSystemMeterResponse) HasPhase() bool {
	if o != nil && !IsNil(o.Phase) {
		return true
	}

	return false
}

// SetPhase gets a reference to the given string and assigns it to the Phase field.
func (o *GetSystemMeterResponse) SetPhase(v string) {
	o.Phase = &v
}

// GetEnvoySerialNumber returns the EnvoySerialNumber field value if set, zero value otherwise.
func (o *GetSystemMeterResponse) GetEnvoySerialNumber() string {
	if o == nil || IsNil(o.EnvoySerialNumber) {
		var ret string
		return ret
	}
	return *o.EnvoySerialNumber
}

// GetEnvoySerialNumberOk returns a tuple with the EnvoySerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemMeterResponse) GetEnvoySerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.EnvoySerialNumber) {
		return nil, false
	}
	return o.EnvoySerialNumber, true
}

// HasEnvoySerialNumber returns a boolean if a field has been set.
func (o *GetSystemMeterResponse) HasEnvoySerialNumber() bool {
	if o != nil && !IsNil(o.EnvoySerialNumber) {
		return true
	}

	return false
}

// SetEnvoySerialNumber gets a reference to the given string and assigns it to the EnvoySerialNumber field.
func (o *GetSystemMeterResponse) SetEnvoySerialNumber(v string) {
	o.EnvoySerialNumber = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetSystemMeterResponse) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemMeterResponse) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetSystemMeterResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetSystemMeterResponse) SetStatus(v string) {
	o.Status = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *GetSystemMeterResponse) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSystemMeterResponse) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *GetSystemMeterResponse) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *GetSystemMeterResponse) SetState(v string) {
	o.State = &v
}

func (o GetSystemMeterResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSystemMeterResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SerialNumber) {
		toSerialize["serial_number"] = o.SerialNumber
	}
	if !IsNil(o.Manufacturer) {
		toSerialize["manufacturer"] = o.Manufacturer
	}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.OperationalDate) {
		toSerialize["operational_date"] = o.OperationalDate
	}
	if !IsNil(o.FirstReportDate) {
		toSerialize["first_report_date"] = o.FirstReportDate
	}
	if !IsNil(o.LastReportDate) {
		toSerialize["last_report_date"] = o.LastReportDate
	}
	if !IsNil(o.Phase) {
		toSerialize["phase"] = o.Phase
	}
	if !IsNil(o.EnvoySerialNumber) {
		toSerialize["envoy_serial_number"] = o.EnvoySerialNumber
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	return toSerialize, nil
}

type NullableGetSystemMeterResponse struct {
	value *GetSystemMeterResponse
	isSet bool
}

func (v NullableGetSystemMeterResponse) Get() *GetSystemMeterResponse {
	return v.value
}

func (v *NullableGetSystemMeterResponse) Set(val *GetSystemMeterResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSystemMeterResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSystemMeterResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSystemMeterResponse(val *GetSystemMeterResponse) *NullableGetSystemMeterResponse {
	return &NullableGetSystemMeterResponse{value: val, isSet: true}
}

func (v NullableGetSystemMeterResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSystemMeterResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


