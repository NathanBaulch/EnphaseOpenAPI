/*
The Enphase Commissioning API

Commissioning API can be used to create and update activations on a site, manage companies and users, update Tariff, etc.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package commissioning

import (
	"encoding/json"
)

// checks if the SystemParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SystemParams{}

// SystemParams struct for SystemParams
type SystemParams struct {
	// Name of the system. Limit 255 characters.
	SystemName string `json:"system_name"`
	SystemType *SystemTypeEnum `json:"system_type,omitempty"`
	InternetConnection *SystemInternetConnectionEnum `json:"internet_connection,omitempty"`
	// Whether the system is leased. Default false.
	Lease *bool `json:"lease,omitempty"`
	// Whether this system is permitted to operate. Default true.
	Operational *bool `json:"operational,omitempty"`
	// Enlighten ID of the system owner. Owner must be an Enlighten user. Optional. If the user of the API is a self-installer, the owner must be himself. If the user of the API is an installer then use the Search user API to get the owner user ID. If the owner not exist in the enlighten then use Create home owner API to create it newly.
	OwnerId *int32 `json:"owner_id,omitempty"`
	// Enlighten ID of the system host. System host must be an Enlighten user. Optional. If the user of the API is an installer then use the Search user API to get the host user ID. If the host not exist in the enlighten then use Create home owner API to create it newly.
	HostId *int32 `json:"host_id,omitempty"`
	// Enlighten ID of the sub-contractor you want to add to the system. Optional. If you are the home owner, you cannot add subcontractors for the site.
	AuthorizedSubcontractorId *int32 `json:"authorized_subcontractor_id,omitempty"`
	// Enlighten ID of the installer of this system. Defaults to current user's company ID.
	InstallerId *int32 `json:"installer_id,omitempty"`
	// Name of the maintainer.
	MaintainerName *string `json:"maintainer_name,omitempty"`
	// The Enlighten ID of the maintainer of this system. Defaults to current user's company ID.
	MaintainerId *int32 `json:"maintainer_id,omitempty"`
	// List of sub-contractors of this system.
	AuthorizedSubcontractors []GetPartnerActivationsResponseSystemsInnerAuthorizedSubcontractorsInner `json:"authorized_subcontractors,omitempty"`
	// When true, the system will be eligible to appear in the public systems lists of Enphase and the system's installer. Default true.
	AllowPublicAccess *bool `json:"allow_public_access,omitempty"`
	// When the system was approved to connect to the grid.
	InterconnectDate *string `json:"interconnect_date,omitempty"`
	Source *SystemSourceEnum `json:"source,omitempty"`
	ArrayType *SystemArrayTypeEnum `json:"array_type,omitempty"`
	AttachmentType *SystemAttachmentTypeEnum `json:"attachment_type,omitempty"`
	// Specifies serial number of ensemble envoy in multi envoy system.
	EnsembleEnvoy *string `json:"ensemble_envoy,omitempty"`
	// Grid profile to set on this system's microinverters. See GridProfiles API for how to retrieve a list of known profiles.
	GridProfile *string `json:"grid_profile,omitempty"`
	RequestedProfile *string `json:"requested_profile,omitempty"`
	RequestedReportFreq *string `json:"requested_report_freq,omitempty"`
	// Supported voltage/phase associated with a commercial system inside North America. If system type is not commercial, or if the installer exists & installer's country is not inside North America, or if the system's country is not inside North America, then the voltage value would be null.
	Voltage *string `json:"voltage,omitempty"`
	// A list of Envoys installed on this system.
	EnvoySerialNumbers []string `json:"envoy_serial_numbers,omitempty"`
	// Enlighten ID of the PV manufacturer associated with the PV model installed on the system. See PvManufacturers for how to retrieve PV manufacturer IDs.
	PvManufacturer *int32 `json:"pv_manufacturer,omitempty"`
	// Name of the Custom PV module manufacturer associated with the system.
	PvManufacturerName *string `json:"pv_manufacturer_name,omitempty"`
	// Enlighten ID of the PV model installed on the system. See PvManufacturers and PvModels for how to retrieve PV model IDs.
	PvModel *int32 `json:"pv_model,omitempty"`
	// Name of the Custom PV module model associated with the system.
	PvModelName *string `json:"pv_model_name,omitempty"`
	// Power rating (in W) of the PV module installed on the system.
	PvModulePowerRating *float32 `json:"pv_module_power_rating,omitempty"`
	// Type ID of the PV module installed on the system. 1 -> 'Mono-facial', 2 -> 'Bi-facial', 3 -> 'Split cell', 4 -> 'Other'.
	PvModuleType *int32 `json:"pv_module_type,omitempty"`
	// Total envoys the system is supposed to have.
	ExpectedEnvoyCount *int32 `json:"expected_envoy_count,omitempty"`
	// Total PCUs the system is supposed to have.
	ExpectedPcuCount *int32 `json:"expected_pcu_count,omitempty"`
	// Total acbs the system is supposed to have.
	ExpectedAcbCount *int32 `json:"expected_acb_count,omitempty"`
	// Total nsrs the system is supposed to have.
	ExpectedNsrCount *int32 `json:"expected_nsr_count,omitempty"`
	// Total meters the system is supposed to have.
	ExpectedMeterCount *int32 `json:"expected_meter_count,omitempty"`
	// Total encharges the system is supposed to have.
	ExpectedEnchargeCount *int32 `json:"expected_encharge_count,omitempty"`
	// Total enpowers the system is supposed to have.
	ExpectedEnpowerCount *int32 `json:"expected_enpower_count,omitempty"`
	// Identifier of this system as provided by the calling user's company. This attribute is not present if the calling user's company does not have a reference for this system. This value should be alphanumeric.
	Reference *string `json:"reference,omitempty"`
	// Encharge detail.
	Encharge []SystemParamsEnchargeInner `json:"encharge,omitempty"`
	// Enpower detail.
	Enpower []SystemParamsEnpowerInner `json:"enpower,omitempty"`
	Address *SystemParamsAddress `json:"address,omitempty"`
}

// NewSystemParams instantiates a new SystemParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemParams(systemName string) *SystemParams {
	this := SystemParams{}
	this.SystemName = systemName
	return &this
}

// NewSystemParamsWithDefaults instantiates a new SystemParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemParamsWithDefaults() *SystemParams {
	this := SystemParams{}
	return &this
}

// GetSystemName returns the SystemName field value
func (o *SystemParams) GetSystemName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SystemName
}

// GetSystemNameOk returns a tuple with the SystemName field value
// and a boolean to check if the value has been set.
func (o *SystemParams) GetSystemNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SystemName, true
}

// SetSystemName sets field value
func (o *SystemParams) SetSystemName(v string) {
	o.SystemName = v
}

// GetSystemType returns the SystemType field value if set, zero value otherwise.
func (o *SystemParams) GetSystemType() SystemTypeEnum {
	if o == nil || IsNil(o.SystemType) {
		var ret SystemTypeEnum
		return ret
	}
	return *o.SystemType
}

// GetSystemTypeOk returns a tuple with the SystemType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetSystemTypeOk() (*SystemTypeEnum, bool) {
	if o == nil || IsNil(o.SystemType) {
		return nil, false
	}
	return o.SystemType, true
}

// HasSystemType returns a boolean if a field has been set.
func (o *SystemParams) HasSystemType() bool {
	if o != nil && !IsNil(o.SystemType) {
		return true
	}

	return false
}

// SetSystemType gets a reference to the given SystemTypeEnum and assigns it to the SystemType field.
func (o *SystemParams) SetSystemType(v SystemTypeEnum) {
	o.SystemType = &v
}

// GetInternetConnection returns the InternetConnection field value if set, zero value otherwise.
func (o *SystemParams) GetInternetConnection() SystemInternetConnectionEnum {
	if o == nil || IsNil(o.InternetConnection) {
		var ret SystemInternetConnectionEnum
		return ret
	}
	return *o.InternetConnection
}

// GetInternetConnectionOk returns a tuple with the InternetConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetInternetConnectionOk() (*SystemInternetConnectionEnum, bool) {
	if o == nil || IsNil(o.InternetConnection) {
		return nil, false
	}
	return o.InternetConnection, true
}

// HasInternetConnection returns a boolean if a field has been set.
func (o *SystemParams) HasInternetConnection() bool {
	if o != nil && !IsNil(o.InternetConnection) {
		return true
	}

	return false
}

// SetInternetConnection gets a reference to the given SystemInternetConnectionEnum and assigns it to the InternetConnection field.
func (o *SystemParams) SetInternetConnection(v SystemInternetConnectionEnum) {
	o.InternetConnection = &v
}

// GetLease returns the Lease field value if set, zero value otherwise.
func (o *SystemParams) GetLease() bool {
	if o == nil || IsNil(o.Lease) {
		var ret bool
		return ret
	}
	return *o.Lease
}

// GetLeaseOk returns a tuple with the Lease field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetLeaseOk() (*bool, bool) {
	if o == nil || IsNil(o.Lease) {
		return nil, false
	}
	return o.Lease, true
}

// HasLease returns a boolean if a field has been set.
func (o *SystemParams) HasLease() bool {
	if o != nil && !IsNil(o.Lease) {
		return true
	}

	return false
}

// SetLease gets a reference to the given bool and assigns it to the Lease field.
func (o *SystemParams) SetLease(v bool) {
	o.Lease = &v
}

// GetOperational returns the Operational field value if set, zero value otherwise.
func (o *SystemParams) GetOperational() bool {
	if o == nil || IsNil(o.Operational) {
		var ret bool
		return ret
	}
	return *o.Operational
}

// GetOperationalOk returns a tuple with the Operational field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetOperationalOk() (*bool, bool) {
	if o == nil || IsNil(o.Operational) {
		return nil, false
	}
	return o.Operational, true
}

// HasOperational returns a boolean if a field has been set.
func (o *SystemParams) HasOperational() bool {
	if o != nil && !IsNil(o.Operational) {
		return true
	}

	return false
}

// SetOperational gets a reference to the given bool and assigns it to the Operational field.
func (o *SystemParams) SetOperational(v bool) {
	o.Operational = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *SystemParams) GetOwnerId() int32 {
	if o == nil || IsNil(o.OwnerId) {
		var ret int32
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetOwnerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *SystemParams) HasOwnerId() bool {
	if o != nil && !IsNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given int32 and assigns it to the OwnerId field.
func (o *SystemParams) SetOwnerId(v int32) {
	o.OwnerId = &v
}

// GetHostId returns the HostId field value if set, zero value otherwise.
func (o *SystemParams) GetHostId() int32 {
	if o == nil || IsNil(o.HostId) {
		var ret int32
		return ret
	}
	return *o.HostId
}

// GetHostIdOk returns a tuple with the HostId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetHostIdOk() (*int32, bool) {
	if o == nil || IsNil(o.HostId) {
		return nil, false
	}
	return o.HostId, true
}

// HasHostId returns a boolean if a field has been set.
func (o *SystemParams) HasHostId() bool {
	if o != nil && !IsNil(o.HostId) {
		return true
	}

	return false
}

// SetHostId gets a reference to the given int32 and assigns it to the HostId field.
func (o *SystemParams) SetHostId(v int32) {
	o.HostId = &v
}

// GetAuthorizedSubcontractorId returns the AuthorizedSubcontractorId field value if set, zero value otherwise.
func (o *SystemParams) GetAuthorizedSubcontractorId() int32 {
	if o == nil || IsNil(o.AuthorizedSubcontractorId) {
		var ret int32
		return ret
	}
	return *o.AuthorizedSubcontractorId
}

// GetAuthorizedSubcontractorIdOk returns a tuple with the AuthorizedSubcontractorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetAuthorizedSubcontractorIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AuthorizedSubcontractorId) {
		return nil, false
	}
	return o.AuthorizedSubcontractorId, true
}

// HasAuthorizedSubcontractorId returns a boolean if a field has been set.
func (o *SystemParams) HasAuthorizedSubcontractorId() bool {
	if o != nil && !IsNil(o.AuthorizedSubcontractorId) {
		return true
	}

	return false
}

// SetAuthorizedSubcontractorId gets a reference to the given int32 and assigns it to the AuthorizedSubcontractorId field.
func (o *SystemParams) SetAuthorizedSubcontractorId(v int32) {
	o.AuthorizedSubcontractorId = &v
}

// GetInstallerId returns the InstallerId field value if set, zero value otherwise.
func (o *SystemParams) GetInstallerId() int32 {
	if o == nil || IsNil(o.InstallerId) {
		var ret int32
		return ret
	}
	return *o.InstallerId
}

// GetInstallerIdOk returns a tuple with the InstallerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetInstallerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.InstallerId) {
		return nil, false
	}
	return o.InstallerId, true
}

// HasInstallerId returns a boolean if a field has been set.
func (o *SystemParams) HasInstallerId() bool {
	if o != nil && !IsNil(o.InstallerId) {
		return true
	}

	return false
}

// SetInstallerId gets a reference to the given int32 and assigns it to the InstallerId field.
func (o *SystemParams) SetInstallerId(v int32) {
	o.InstallerId = &v
}

// GetMaintainerName returns the MaintainerName field value if set, zero value otherwise.
func (o *SystemParams) GetMaintainerName() string {
	if o == nil || IsNil(o.MaintainerName) {
		var ret string
		return ret
	}
	return *o.MaintainerName
}

// GetMaintainerNameOk returns a tuple with the MaintainerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetMaintainerNameOk() (*string, bool) {
	if o == nil || IsNil(o.MaintainerName) {
		return nil, false
	}
	return o.MaintainerName, true
}

// HasMaintainerName returns a boolean if a field has been set.
func (o *SystemParams) HasMaintainerName() bool {
	if o != nil && !IsNil(o.MaintainerName) {
		return true
	}

	return false
}

// SetMaintainerName gets a reference to the given string and assigns it to the MaintainerName field.
func (o *SystemParams) SetMaintainerName(v string) {
	o.MaintainerName = &v
}

// GetMaintainerId returns the MaintainerId field value if set, zero value otherwise.
func (o *SystemParams) GetMaintainerId() int32 {
	if o == nil || IsNil(o.MaintainerId) {
		var ret int32
		return ret
	}
	return *o.MaintainerId
}

// GetMaintainerIdOk returns a tuple with the MaintainerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetMaintainerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.MaintainerId) {
		return nil, false
	}
	return o.MaintainerId, true
}

// HasMaintainerId returns a boolean if a field has been set.
func (o *SystemParams) HasMaintainerId() bool {
	if o != nil && !IsNil(o.MaintainerId) {
		return true
	}

	return false
}

// SetMaintainerId gets a reference to the given int32 and assigns it to the MaintainerId field.
func (o *SystemParams) SetMaintainerId(v int32) {
	o.MaintainerId = &v
}

// GetAuthorizedSubcontractors returns the AuthorizedSubcontractors field value if set, zero value otherwise.
func (o *SystemParams) GetAuthorizedSubcontractors() []GetPartnerActivationsResponseSystemsInnerAuthorizedSubcontractorsInner {
	if o == nil || IsNil(o.AuthorizedSubcontractors) {
		var ret []GetPartnerActivationsResponseSystemsInnerAuthorizedSubcontractorsInner
		return ret
	}
	return o.AuthorizedSubcontractors
}

// GetAuthorizedSubcontractorsOk returns a tuple with the AuthorizedSubcontractors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetAuthorizedSubcontractorsOk() ([]GetPartnerActivationsResponseSystemsInnerAuthorizedSubcontractorsInner, bool) {
	if o == nil || IsNil(o.AuthorizedSubcontractors) {
		return nil, false
	}
	return o.AuthorizedSubcontractors, true
}

// HasAuthorizedSubcontractors returns a boolean if a field has been set.
func (o *SystemParams) HasAuthorizedSubcontractors() bool {
	if o != nil && !IsNil(o.AuthorizedSubcontractors) {
		return true
	}

	return false
}

// SetAuthorizedSubcontractors gets a reference to the given []GetPartnerActivationsResponseSystemsInnerAuthorizedSubcontractorsInner and assigns it to the AuthorizedSubcontractors field.
func (o *SystemParams) SetAuthorizedSubcontractors(v []GetPartnerActivationsResponseSystemsInnerAuthorizedSubcontractorsInner) {
	o.AuthorizedSubcontractors = v
}

// GetAllowPublicAccess returns the AllowPublicAccess field value if set, zero value otherwise.
func (o *SystemParams) GetAllowPublicAccess() bool {
	if o == nil || IsNil(o.AllowPublicAccess) {
		var ret bool
		return ret
	}
	return *o.AllowPublicAccess
}

// GetAllowPublicAccessOk returns a tuple with the AllowPublicAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetAllowPublicAccessOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowPublicAccess) {
		return nil, false
	}
	return o.AllowPublicAccess, true
}

// HasAllowPublicAccess returns a boolean if a field has been set.
func (o *SystemParams) HasAllowPublicAccess() bool {
	if o != nil && !IsNil(o.AllowPublicAccess) {
		return true
	}

	return false
}

// SetAllowPublicAccess gets a reference to the given bool and assigns it to the AllowPublicAccess field.
func (o *SystemParams) SetAllowPublicAccess(v bool) {
	o.AllowPublicAccess = &v
}

// GetInterconnectDate returns the InterconnectDate field value if set, zero value otherwise.
func (o *SystemParams) GetInterconnectDate() string {
	if o == nil || IsNil(o.InterconnectDate) {
		var ret string
		return ret
	}
	return *o.InterconnectDate
}

// GetInterconnectDateOk returns a tuple with the InterconnectDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetInterconnectDateOk() (*string, bool) {
	if o == nil || IsNil(o.InterconnectDate) {
		return nil, false
	}
	return o.InterconnectDate, true
}

// HasInterconnectDate returns a boolean if a field has been set.
func (o *SystemParams) HasInterconnectDate() bool {
	if o != nil && !IsNil(o.InterconnectDate) {
		return true
	}

	return false
}

// SetInterconnectDate gets a reference to the given string and assigns it to the InterconnectDate field.
func (o *SystemParams) SetInterconnectDate(v string) {
	o.InterconnectDate = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *SystemParams) GetSource() SystemSourceEnum {
	if o == nil || IsNil(o.Source) {
		var ret SystemSourceEnum
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetSourceOk() (*SystemSourceEnum, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *SystemParams) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given SystemSourceEnum and assigns it to the Source field.
func (o *SystemParams) SetSource(v SystemSourceEnum) {
	o.Source = &v
}

// GetArrayType returns the ArrayType field value if set, zero value otherwise.
func (o *SystemParams) GetArrayType() SystemArrayTypeEnum {
	if o == nil || IsNil(o.ArrayType) {
		var ret SystemArrayTypeEnum
		return ret
	}
	return *o.ArrayType
}

// GetArrayTypeOk returns a tuple with the ArrayType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetArrayTypeOk() (*SystemArrayTypeEnum, bool) {
	if o == nil || IsNil(o.ArrayType) {
		return nil, false
	}
	return o.ArrayType, true
}

// HasArrayType returns a boolean if a field has been set.
func (o *SystemParams) HasArrayType() bool {
	if o != nil && !IsNil(o.ArrayType) {
		return true
	}

	return false
}

// SetArrayType gets a reference to the given SystemArrayTypeEnum and assigns it to the ArrayType field.
func (o *SystemParams) SetArrayType(v SystemArrayTypeEnum) {
	o.ArrayType = &v
}

// GetAttachmentType returns the AttachmentType field value if set, zero value otherwise.
func (o *SystemParams) GetAttachmentType() SystemAttachmentTypeEnum {
	if o == nil || IsNil(o.AttachmentType) {
		var ret SystemAttachmentTypeEnum
		return ret
	}
	return *o.AttachmentType
}

// GetAttachmentTypeOk returns a tuple with the AttachmentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetAttachmentTypeOk() (*SystemAttachmentTypeEnum, bool) {
	if o == nil || IsNil(o.AttachmentType) {
		return nil, false
	}
	return o.AttachmentType, true
}

// HasAttachmentType returns a boolean if a field has been set.
func (o *SystemParams) HasAttachmentType() bool {
	if o != nil && !IsNil(o.AttachmentType) {
		return true
	}

	return false
}

// SetAttachmentType gets a reference to the given SystemAttachmentTypeEnum and assigns it to the AttachmentType field.
func (o *SystemParams) SetAttachmentType(v SystemAttachmentTypeEnum) {
	o.AttachmentType = &v
}

// GetEnsembleEnvoy returns the EnsembleEnvoy field value if set, zero value otherwise.
func (o *SystemParams) GetEnsembleEnvoy() string {
	if o == nil || IsNil(o.EnsembleEnvoy) {
		var ret string
		return ret
	}
	return *o.EnsembleEnvoy
}

// GetEnsembleEnvoyOk returns a tuple with the EnsembleEnvoy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetEnsembleEnvoyOk() (*string, bool) {
	if o == nil || IsNil(o.EnsembleEnvoy) {
		return nil, false
	}
	return o.EnsembleEnvoy, true
}

// HasEnsembleEnvoy returns a boolean if a field has been set.
func (o *SystemParams) HasEnsembleEnvoy() bool {
	if o != nil && !IsNil(o.EnsembleEnvoy) {
		return true
	}

	return false
}

// SetEnsembleEnvoy gets a reference to the given string and assigns it to the EnsembleEnvoy field.
func (o *SystemParams) SetEnsembleEnvoy(v string) {
	o.EnsembleEnvoy = &v
}

// GetGridProfile returns the GridProfile field value if set, zero value otherwise.
func (o *SystemParams) GetGridProfile() string {
	if o == nil || IsNil(o.GridProfile) {
		var ret string
		return ret
	}
	return *o.GridProfile
}

// GetGridProfileOk returns a tuple with the GridProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetGridProfileOk() (*string, bool) {
	if o == nil || IsNil(o.GridProfile) {
		return nil, false
	}
	return o.GridProfile, true
}

// HasGridProfile returns a boolean if a field has been set.
func (o *SystemParams) HasGridProfile() bool {
	if o != nil && !IsNil(o.GridProfile) {
		return true
	}

	return false
}

// SetGridProfile gets a reference to the given string and assigns it to the GridProfile field.
func (o *SystemParams) SetGridProfile(v string) {
	o.GridProfile = &v
}

// GetRequestedProfile returns the RequestedProfile field value if set, zero value otherwise.
func (o *SystemParams) GetRequestedProfile() string {
	if o == nil || IsNil(o.RequestedProfile) {
		var ret string
		return ret
	}
	return *o.RequestedProfile
}

// GetRequestedProfileOk returns a tuple with the RequestedProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetRequestedProfileOk() (*string, bool) {
	if o == nil || IsNil(o.RequestedProfile) {
		return nil, false
	}
	return o.RequestedProfile, true
}

// HasRequestedProfile returns a boolean if a field has been set.
func (o *SystemParams) HasRequestedProfile() bool {
	if o != nil && !IsNil(o.RequestedProfile) {
		return true
	}

	return false
}

// SetRequestedProfile gets a reference to the given string and assigns it to the RequestedProfile field.
func (o *SystemParams) SetRequestedProfile(v string) {
	o.RequestedProfile = &v
}

// GetRequestedReportFreq returns the RequestedReportFreq field value if set, zero value otherwise.
func (o *SystemParams) GetRequestedReportFreq() string {
	if o == nil || IsNil(o.RequestedReportFreq) {
		var ret string
		return ret
	}
	return *o.RequestedReportFreq
}

// GetRequestedReportFreqOk returns a tuple with the RequestedReportFreq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetRequestedReportFreqOk() (*string, bool) {
	if o == nil || IsNil(o.RequestedReportFreq) {
		return nil, false
	}
	return o.RequestedReportFreq, true
}

// HasRequestedReportFreq returns a boolean if a field has been set.
func (o *SystemParams) HasRequestedReportFreq() bool {
	if o != nil && !IsNil(o.RequestedReportFreq) {
		return true
	}

	return false
}

// SetRequestedReportFreq gets a reference to the given string and assigns it to the RequestedReportFreq field.
func (o *SystemParams) SetRequestedReportFreq(v string) {
	o.RequestedReportFreq = &v
}

// GetVoltage returns the Voltage field value if set, zero value otherwise.
func (o *SystemParams) GetVoltage() string {
	if o == nil || IsNil(o.Voltage) {
		var ret string
		return ret
	}
	return *o.Voltage
}

// GetVoltageOk returns a tuple with the Voltage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetVoltageOk() (*string, bool) {
	if o == nil || IsNil(o.Voltage) {
		return nil, false
	}
	return o.Voltage, true
}

// HasVoltage returns a boolean if a field has been set.
func (o *SystemParams) HasVoltage() bool {
	if o != nil && !IsNil(o.Voltage) {
		return true
	}

	return false
}

// SetVoltage gets a reference to the given string and assigns it to the Voltage field.
func (o *SystemParams) SetVoltage(v string) {
	o.Voltage = &v
}

// GetEnvoySerialNumbers returns the EnvoySerialNumbers field value if set, zero value otherwise.
func (o *SystemParams) GetEnvoySerialNumbers() []string {
	if o == nil || IsNil(o.EnvoySerialNumbers) {
		var ret []string
		return ret
	}
	return o.EnvoySerialNumbers
}

// GetEnvoySerialNumbersOk returns a tuple with the EnvoySerialNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetEnvoySerialNumbersOk() ([]string, bool) {
	if o == nil || IsNil(o.EnvoySerialNumbers) {
		return nil, false
	}
	return o.EnvoySerialNumbers, true
}

// HasEnvoySerialNumbers returns a boolean if a field has been set.
func (o *SystemParams) HasEnvoySerialNumbers() bool {
	if o != nil && !IsNil(o.EnvoySerialNumbers) {
		return true
	}

	return false
}

// SetEnvoySerialNumbers gets a reference to the given []string and assigns it to the EnvoySerialNumbers field.
func (o *SystemParams) SetEnvoySerialNumbers(v []string) {
	o.EnvoySerialNumbers = v
}

// GetPvManufacturer returns the PvManufacturer field value if set, zero value otherwise.
func (o *SystemParams) GetPvManufacturer() int32 {
	if o == nil || IsNil(o.PvManufacturer) {
		var ret int32
		return ret
	}
	return *o.PvManufacturer
}

// GetPvManufacturerOk returns a tuple with the PvManufacturer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetPvManufacturerOk() (*int32, bool) {
	if o == nil || IsNil(o.PvManufacturer) {
		return nil, false
	}
	return o.PvManufacturer, true
}

// HasPvManufacturer returns a boolean if a field has been set.
func (o *SystemParams) HasPvManufacturer() bool {
	if o != nil && !IsNil(o.PvManufacturer) {
		return true
	}

	return false
}

// SetPvManufacturer gets a reference to the given int32 and assigns it to the PvManufacturer field.
func (o *SystemParams) SetPvManufacturer(v int32) {
	o.PvManufacturer = &v
}

// GetPvManufacturerName returns the PvManufacturerName field value if set, zero value otherwise.
func (o *SystemParams) GetPvManufacturerName() string {
	if o == nil || IsNil(o.PvManufacturerName) {
		var ret string
		return ret
	}
	return *o.PvManufacturerName
}

// GetPvManufacturerNameOk returns a tuple with the PvManufacturerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetPvManufacturerNameOk() (*string, bool) {
	if o == nil || IsNil(o.PvManufacturerName) {
		return nil, false
	}
	return o.PvManufacturerName, true
}

// HasPvManufacturerName returns a boolean if a field has been set.
func (o *SystemParams) HasPvManufacturerName() bool {
	if o != nil && !IsNil(o.PvManufacturerName) {
		return true
	}

	return false
}

// SetPvManufacturerName gets a reference to the given string and assigns it to the PvManufacturerName field.
func (o *SystemParams) SetPvManufacturerName(v string) {
	o.PvManufacturerName = &v
}

// GetPvModel returns the PvModel field value if set, zero value otherwise.
func (o *SystemParams) GetPvModel() int32 {
	if o == nil || IsNil(o.PvModel) {
		var ret int32
		return ret
	}
	return *o.PvModel
}

// GetPvModelOk returns a tuple with the PvModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetPvModelOk() (*int32, bool) {
	if o == nil || IsNil(o.PvModel) {
		return nil, false
	}
	return o.PvModel, true
}

// HasPvModel returns a boolean if a field has been set.
func (o *SystemParams) HasPvModel() bool {
	if o != nil && !IsNil(o.PvModel) {
		return true
	}

	return false
}

// SetPvModel gets a reference to the given int32 and assigns it to the PvModel field.
func (o *SystemParams) SetPvModel(v int32) {
	o.PvModel = &v
}

// GetPvModelName returns the PvModelName field value if set, zero value otherwise.
func (o *SystemParams) GetPvModelName() string {
	if o == nil || IsNil(o.PvModelName) {
		var ret string
		return ret
	}
	return *o.PvModelName
}

// GetPvModelNameOk returns a tuple with the PvModelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetPvModelNameOk() (*string, bool) {
	if o == nil || IsNil(o.PvModelName) {
		return nil, false
	}
	return o.PvModelName, true
}

// HasPvModelName returns a boolean if a field has been set.
func (o *SystemParams) HasPvModelName() bool {
	if o != nil && !IsNil(o.PvModelName) {
		return true
	}

	return false
}

// SetPvModelName gets a reference to the given string and assigns it to the PvModelName field.
func (o *SystemParams) SetPvModelName(v string) {
	o.PvModelName = &v
}

// GetPvModulePowerRating returns the PvModulePowerRating field value if set, zero value otherwise.
func (o *SystemParams) GetPvModulePowerRating() float32 {
	if o == nil || IsNil(o.PvModulePowerRating) {
		var ret float32
		return ret
	}
	return *o.PvModulePowerRating
}

// GetPvModulePowerRatingOk returns a tuple with the PvModulePowerRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetPvModulePowerRatingOk() (*float32, bool) {
	if o == nil || IsNil(o.PvModulePowerRating) {
		return nil, false
	}
	return o.PvModulePowerRating, true
}

// HasPvModulePowerRating returns a boolean if a field has been set.
func (o *SystemParams) HasPvModulePowerRating() bool {
	if o != nil && !IsNil(o.PvModulePowerRating) {
		return true
	}

	return false
}

// SetPvModulePowerRating gets a reference to the given float32 and assigns it to the PvModulePowerRating field.
func (o *SystemParams) SetPvModulePowerRating(v float32) {
	o.PvModulePowerRating = &v
}

// GetPvModuleType returns the PvModuleType field value if set, zero value otherwise.
func (o *SystemParams) GetPvModuleType() int32 {
	if o == nil || IsNil(o.PvModuleType) {
		var ret int32
		return ret
	}
	return *o.PvModuleType
}

// GetPvModuleTypeOk returns a tuple with the PvModuleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetPvModuleTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.PvModuleType) {
		return nil, false
	}
	return o.PvModuleType, true
}

// HasPvModuleType returns a boolean if a field has been set.
func (o *SystemParams) HasPvModuleType() bool {
	if o != nil && !IsNil(o.PvModuleType) {
		return true
	}

	return false
}

// SetPvModuleType gets a reference to the given int32 and assigns it to the PvModuleType field.
func (o *SystemParams) SetPvModuleType(v int32) {
	o.PvModuleType = &v
}

// GetExpectedEnvoyCount returns the ExpectedEnvoyCount field value if set, zero value otherwise.
func (o *SystemParams) GetExpectedEnvoyCount() int32 {
	if o == nil || IsNil(o.ExpectedEnvoyCount) {
		var ret int32
		return ret
	}
	return *o.ExpectedEnvoyCount
}

// GetExpectedEnvoyCountOk returns a tuple with the ExpectedEnvoyCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetExpectedEnvoyCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpectedEnvoyCount) {
		return nil, false
	}
	return o.ExpectedEnvoyCount, true
}

// HasExpectedEnvoyCount returns a boolean if a field has been set.
func (o *SystemParams) HasExpectedEnvoyCount() bool {
	if o != nil && !IsNil(o.ExpectedEnvoyCount) {
		return true
	}

	return false
}

// SetExpectedEnvoyCount gets a reference to the given int32 and assigns it to the ExpectedEnvoyCount field.
func (o *SystemParams) SetExpectedEnvoyCount(v int32) {
	o.ExpectedEnvoyCount = &v
}

// GetExpectedPcuCount returns the ExpectedPcuCount field value if set, zero value otherwise.
func (o *SystemParams) GetExpectedPcuCount() int32 {
	if o == nil || IsNil(o.ExpectedPcuCount) {
		var ret int32
		return ret
	}
	return *o.ExpectedPcuCount
}

// GetExpectedPcuCountOk returns a tuple with the ExpectedPcuCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetExpectedPcuCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpectedPcuCount) {
		return nil, false
	}
	return o.ExpectedPcuCount, true
}

// HasExpectedPcuCount returns a boolean if a field has been set.
func (o *SystemParams) HasExpectedPcuCount() bool {
	if o != nil && !IsNil(o.ExpectedPcuCount) {
		return true
	}

	return false
}

// SetExpectedPcuCount gets a reference to the given int32 and assigns it to the ExpectedPcuCount field.
func (o *SystemParams) SetExpectedPcuCount(v int32) {
	o.ExpectedPcuCount = &v
}

// GetExpectedAcbCount returns the ExpectedAcbCount field value if set, zero value otherwise.
func (o *SystemParams) GetExpectedAcbCount() int32 {
	if o == nil || IsNil(o.ExpectedAcbCount) {
		var ret int32
		return ret
	}
	return *o.ExpectedAcbCount
}

// GetExpectedAcbCountOk returns a tuple with the ExpectedAcbCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetExpectedAcbCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpectedAcbCount) {
		return nil, false
	}
	return o.ExpectedAcbCount, true
}

// HasExpectedAcbCount returns a boolean if a field has been set.
func (o *SystemParams) HasExpectedAcbCount() bool {
	if o != nil && !IsNil(o.ExpectedAcbCount) {
		return true
	}

	return false
}

// SetExpectedAcbCount gets a reference to the given int32 and assigns it to the ExpectedAcbCount field.
func (o *SystemParams) SetExpectedAcbCount(v int32) {
	o.ExpectedAcbCount = &v
}

// GetExpectedNsrCount returns the ExpectedNsrCount field value if set, zero value otherwise.
func (o *SystemParams) GetExpectedNsrCount() int32 {
	if o == nil || IsNil(o.ExpectedNsrCount) {
		var ret int32
		return ret
	}
	return *o.ExpectedNsrCount
}

// GetExpectedNsrCountOk returns a tuple with the ExpectedNsrCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetExpectedNsrCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpectedNsrCount) {
		return nil, false
	}
	return o.ExpectedNsrCount, true
}

// HasExpectedNsrCount returns a boolean if a field has been set.
func (o *SystemParams) HasExpectedNsrCount() bool {
	if o != nil && !IsNil(o.ExpectedNsrCount) {
		return true
	}

	return false
}

// SetExpectedNsrCount gets a reference to the given int32 and assigns it to the ExpectedNsrCount field.
func (o *SystemParams) SetExpectedNsrCount(v int32) {
	o.ExpectedNsrCount = &v
}

// GetExpectedMeterCount returns the ExpectedMeterCount field value if set, zero value otherwise.
func (o *SystemParams) GetExpectedMeterCount() int32 {
	if o == nil || IsNil(o.ExpectedMeterCount) {
		var ret int32
		return ret
	}
	return *o.ExpectedMeterCount
}

// GetExpectedMeterCountOk returns a tuple with the ExpectedMeterCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetExpectedMeterCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpectedMeterCount) {
		return nil, false
	}
	return o.ExpectedMeterCount, true
}

// HasExpectedMeterCount returns a boolean if a field has been set.
func (o *SystemParams) HasExpectedMeterCount() bool {
	if o != nil && !IsNil(o.ExpectedMeterCount) {
		return true
	}

	return false
}

// SetExpectedMeterCount gets a reference to the given int32 and assigns it to the ExpectedMeterCount field.
func (o *SystemParams) SetExpectedMeterCount(v int32) {
	o.ExpectedMeterCount = &v
}

// GetExpectedEnchargeCount returns the ExpectedEnchargeCount field value if set, zero value otherwise.
func (o *SystemParams) GetExpectedEnchargeCount() int32 {
	if o == nil || IsNil(o.ExpectedEnchargeCount) {
		var ret int32
		return ret
	}
	return *o.ExpectedEnchargeCount
}

// GetExpectedEnchargeCountOk returns a tuple with the ExpectedEnchargeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetExpectedEnchargeCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpectedEnchargeCount) {
		return nil, false
	}
	return o.ExpectedEnchargeCount, true
}

// HasExpectedEnchargeCount returns a boolean if a field has been set.
func (o *SystemParams) HasExpectedEnchargeCount() bool {
	if o != nil && !IsNil(o.ExpectedEnchargeCount) {
		return true
	}

	return false
}

// SetExpectedEnchargeCount gets a reference to the given int32 and assigns it to the ExpectedEnchargeCount field.
func (o *SystemParams) SetExpectedEnchargeCount(v int32) {
	o.ExpectedEnchargeCount = &v
}

// GetExpectedEnpowerCount returns the ExpectedEnpowerCount field value if set, zero value otherwise.
func (o *SystemParams) GetExpectedEnpowerCount() int32 {
	if o == nil || IsNil(o.ExpectedEnpowerCount) {
		var ret int32
		return ret
	}
	return *o.ExpectedEnpowerCount
}

// GetExpectedEnpowerCountOk returns a tuple with the ExpectedEnpowerCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetExpectedEnpowerCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpectedEnpowerCount) {
		return nil, false
	}
	return o.ExpectedEnpowerCount, true
}

// HasExpectedEnpowerCount returns a boolean if a field has been set.
func (o *SystemParams) HasExpectedEnpowerCount() bool {
	if o != nil && !IsNil(o.ExpectedEnpowerCount) {
		return true
	}

	return false
}

// SetExpectedEnpowerCount gets a reference to the given int32 and assigns it to the ExpectedEnpowerCount field.
func (o *SystemParams) SetExpectedEnpowerCount(v int32) {
	o.ExpectedEnpowerCount = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *SystemParams) GetReference() string {
	if o == nil || IsNil(o.Reference) {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *SystemParams) HasReference() bool {
	if o != nil && !IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *SystemParams) SetReference(v string) {
	o.Reference = &v
}

// GetEncharge returns the Encharge field value if set, zero value otherwise.
func (o *SystemParams) GetEncharge() []SystemParamsEnchargeInner {
	if o == nil || IsNil(o.Encharge) {
		var ret []SystemParamsEnchargeInner
		return ret
	}
	return o.Encharge
}

// GetEnchargeOk returns a tuple with the Encharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetEnchargeOk() ([]SystemParamsEnchargeInner, bool) {
	if o == nil || IsNil(o.Encharge) {
		return nil, false
	}
	return o.Encharge, true
}

// HasEncharge returns a boolean if a field has been set.
func (o *SystemParams) HasEncharge() bool {
	if o != nil && !IsNil(o.Encharge) {
		return true
	}

	return false
}

// SetEncharge gets a reference to the given []SystemParamsEnchargeInner and assigns it to the Encharge field.
func (o *SystemParams) SetEncharge(v []SystemParamsEnchargeInner) {
	o.Encharge = v
}

// GetEnpower returns the Enpower field value if set, zero value otherwise.
func (o *SystemParams) GetEnpower() []SystemParamsEnpowerInner {
	if o == nil || IsNil(o.Enpower) {
		var ret []SystemParamsEnpowerInner
		return ret
	}
	return o.Enpower
}

// GetEnpowerOk returns a tuple with the Enpower field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetEnpowerOk() ([]SystemParamsEnpowerInner, bool) {
	if o == nil || IsNil(o.Enpower) {
		return nil, false
	}
	return o.Enpower, true
}

// HasEnpower returns a boolean if a field has been set.
func (o *SystemParams) HasEnpower() bool {
	if o != nil && !IsNil(o.Enpower) {
		return true
	}

	return false
}

// SetEnpower gets a reference to the given []SystemParamsEnpowerInner and assigns it to the Enpower field.
func (o *SystemParams) SetEnpower(v []SystemParamsEnpowerInner) {
	o.Enpower = v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *SystemParams) GetAddress() SystemParamsAddress {
	if o == nil || IsNil(o.Address) {
		var ret SystemParamsAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemParams) GetAddressOk() (*SystemParamsAddress, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *SystemParams) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given SystemParamsAddress and assigns it to the Address field.
func (o *SystemParams) SetAddress(v SystemParamsAddress) {
	o.Address = &v
}

func (o SystemParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SystemParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["system_name"] = o.SystemName
	if !IsNil(o.SystemType) {
		toSerialize["system_type"] = o.SystemType
	}
	if !IsNil(o.InternetConnection) {
		toSerialize["internet_connection"] = o.InternetConnection
	}
	if !IsNil(o.Lease) {
		toSerialize["lease"] = o.Lease
	}
	if !IsNil(o.Operational) {
		toSerialize["operational"] = o.Operational
	}
	if !IsNil(o.OwnerId) {
		toSerialize["owner_id"] = o.OwnerId
	}
	if !IsNil(o.HostId) {
		toSerialize["host_id"] = o.HostId
	}
	if !IsNil(o.AuthorizedSubcontractorId) {
		toSerialize["authorized_subcontractor_id"] = o.AuthorizedSubcontractorId
	}
	if !IsNil(o.InstallerId) {
		toSerialize["installer_id"] = o.InstallerId
	}
	if !IsNil(o.MaintainerName) {
		toSerialize["maintainer_name"] = o.MaintainerName
	}
	if !IsNil(o.MaintainerId) {
		toSerialize["maintainer_id"] = o.MaintainerId
	}
	if !IsNil(o.AuthorizedSubcontractors) {
		toSerialize["authorized_subcontractors"] = o.AuthorizedSubcontractors
	}
	if !IsNil(o.AllowPublicAccess) {
		toSerialize["allow_public_access"] = o.AllowPublicAccess
	}
	if !IsNil(o.InterconnectDate) {
		toSerialize["interconnect_date"] = o.InterconnectDate
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.ArrayType) {
		toSerialize["array_type"] = o.ArrayType
	}
	if !IsNil(o.AttachmentType) {
		toSerialize["attachment_type"] = o.AttachmentType
	}
	if !IsNil(o.EnsembleEnvoy) {
		toSerialize["ensemble_envoy"] = o.EnsembleEnvoy
	}
	if !IsNil(o.GridProfile) {
		toSerialize["grid_profile"] = o.GridProfile
	}
	if !IsNil(o.RequestedProfile) {
		toSerialize["requested_profile"] = o.RequestedProfile
	}
	if !IsNil(o.RequestedReportFreq) {
		toSerialize["requested_report_freq"] = o.RequestedReportFreq
	}
	if !IsNil(o.Voltage) {
		toSerialize["voltage"] = o.Voltage
	}
	if !IsNil(o.EnvoySerialNumbers) {
		toSerialize["envoy_serial_numbers"] = o.EnvoySerialNumbers
	}
	if !IsNil(o.PvManufacturer) {
		toSerialize["pv_manufacturer"] = o.PvManufacturer
	}
	if !IsNil(o.PvManufacturerName) {
		toSerialize["pv_manufacturer_name"] = o.PvManufacturerName
	}
	if !IsNil(o.PvModel) {
		toSerialize["pv_model"] = o.PvModel
	}
	if !IsNil(o.PvModelName) {
		toSerialize["pv_model_name"] = o.PvModelName
	}
	if !IsNil(o.PvModulePowerRating) {
		toSerialize["pv_module_power_rating"] = o.PvModulePowerRating
	}
	if !IsNil(o.PvModuleType) {
		toSerialize["pv_module_type"] = o.PvModuleType
	}
	if !IsNil(o.ExpectedEnvoyCount) {
		toSerialize["expected_envoy_count"] = o.ExpectedEnvoyCount
	}
	if !IsNil(o.ExpectedPcuCount) {
		toSerialize["expected_pcu_count"] = o.ExpectedPcuCount
	}
	if !IsNil(o.ExpectedAcbCount) {
		toSerialize["expected_acb_count"] = o.ExpectedAcbCount
	}
	if !IsNil(o.ExpectedNsrCount) {
		toSerialize["expected_nsr_count"] = o.ExpectedNsrCount
	}
	if !IsNil(o.ExpectedMeterCount) {
		toSerialize["expected_meter_count"] = o.ExpectedMeterCount
	}
	if !IsNil(o.ExpectedEnchargeCount) {
		toSerialize["expected_encharge_count"] = o.ExpectedEnchargeCount
	}
	if !IsNil(o.ExpectedEnpowerCount) {
		toSerialize["expected_enpower_count"] = o.ExpectedEnpowerCount
	}
	if !IsNil(o.Reference) {
		toSerialize["reference"] = o.Reference
	}
	if !IsNil(o.Encharge) {
		toSerialize["encharge"] = o.Encharge
	}
	if !IsNil(o.Enpower) {
		toSerialize["enpower"] = o.Enpower
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	return toSerialize, nil
}

type NullableSystemParams struct {
	value *SystemParams
	isSet bool
}

func (v NullableSystemParams) Get() *SystemParams {
	return v.value
}

func (v *NullableSystemParams) Set(val *SystemParams) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemParams) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemParams(val *SystemParams) *NullableSystemParams {
	return &NullableSystemParams{value: val, isSet: true}
}

func (v NullableSystemParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


