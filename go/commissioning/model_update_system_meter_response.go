/*
The Enphase Commissioning API

Commissioning API can be used to create and update activations on a site, manage companies and users, update Tariff, etc.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package commissioning

import (
	"encoding/json"
)

// checks if the UpdateSystemMeterResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateSystemMeterResponse{}

// UpdateSystemMeterResponse struct for UpdateSystemMeterResponse
type UpdateSystemMeterResponse struct {
	// Meter serial number.
	SerialNumber *string `json:"serial_number,omitempty"`
	// Name of the manufacturer.
	Manufacturer *string `json:"manufacturer,omitempty"`
	// Model.
	Model *string `json:"model,omitempty"`
	// Meter type.
	Type *string `json:"type,omitempty"`
	// Operational date.
	OperationalDate *string `json:"operational_date,omitempty"`
}

// NewUpdateSystemMeterResponse instantiates a new UpdateSystemMeterResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSystemMeterResponse() *UpdateSystemMeterResponse {
	this := UpdateSystemMeterResponse{}
	return &this
}

// NewUpdateSystemMeterResponseWithDefaults instantiates a new UpdateSystemMeterResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSystemMeterResponseWithDefaults() *UpdateSystemMeterResponse {
	this := UpdateSystemMeterResponse{}
	return &this
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *UpdateSystemMeterResponse) GetSerialNumber() string {
	if o == nil || IsNil(o.SerialNumber) {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSystemMeterResponse) GetSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SerialNumber) {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *UpdateSystemMeterResponse) HasSerialNumber() bool {
	if o != nil && !IsNil(o.SerialNumber) {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *UpdateSystemMeterResponse) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetManufacturer returns the Manufacturer field value if set, zero value otherwise.
func (o *UpdateSystemMeterResponse) GetManufacturer() string {
	if o == nil || IsNil(o.Manufacturer) {
		var ret string
		return ret
	}
	return *o.Manufacturer
}

// GetManufacturerOk returns a tuple with the Manufacturer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSystemMeterResponse) GetManufacturerOk() (*string, bool) {
	if o == nil || IsNil(o.Manufacturer) {
		return nil, false
	}
	return o.Manufacturer, true
}

// HasManufacturer returns a boolean if a field has been set.
func (o *UpdateSystemMeterResponse) HasManufacturer() bool {
	if o != nil && !IsNil(o.Manufacturer) {
		return true
	}

	return false
}

// SetManufacturer gets a reference to the given string and assigns it to the Manufacturer field.
func (o *UpdateSystemMeterResponse) SetManufacturer(v string) {
	o.Manufacturer = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *UpdateSystemMeterResponse) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSystemMeterResponse) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *UpdateSystemMeterResponse) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *UpdateSystemMeterResponse) SetModel(v string) {
	o.Model = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *UpdateSystemMeterResponse) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSystemMeterResponse) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *UpdateSystemMeterResponse) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *UpdateSystemMeterResponse) SetType(v string) {
	o.Type = &v
}

// GetOperationalDate returns the OperationalDate field value if set, zero value otherwise.
func (o *UpdateSystemMeterResponse) GetOperationalDate() string {
	if o == nil || IsNil(o.OperationalDate) {
		var ret string
		return ret
	}
	return *o.OperationalDate
}

// GetOperationalDateOk returns a tuple with the OperationalDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSystemMeterResponse) GetOperationalDateOk() (*string, bool) {
	if o == nil || IsNil(o.OperationalDate) {
		return nil, false
	}
	return o.OperationalDate, true
}

// HasOperationalDate returns a boolean if a field has been set.
func (o *UpdateSystemMeterResponse) HasOperationalDate() bool {
	if o != nil && !IsNil(o.OperationalDate) {
		return true
	}

	return false
}

// SetOperationalDate gets a reference to the given string and assigns it to the OperationalDate field.
func (o *UpdateSystemMeterResponse) SetOperationalDate(v string) {
	o.OperationalDate = &v
}

func (o UpdateSystemMeterResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateSystemMeterResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SerialNumber) {
		toSerialize["serial_number"] = o.SerialNumber
	}
	if !IsNil(o.Manufacturer) {
		toSerialize["manufacturer"] = o.Manufacturer
	}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.OperationalDate) {
		toSerialize["operational_date"] = o.OperationalDate
	}
	return toSerialize, nil
}

type NullableUpdateSystemMeterResponse struct {
	value *UpdateSystemMeterResponse
	isSet bool
}

func (v NullableUpdateSystemMeterResponse) Get() *UpdateSystemMeterResponse {
	return v.value
}

func (v *NullableUpdateSystemMeterResponse) Set(val *UpdateSystemMeterResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSystemMeterResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSystemMeterResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSystemMeterResponse(val *UpdateSystemMeterResponse) *NullableUpdateSystemMeterResponse {
	return &NullableUpdateSystemMeterResponse{value: val, isSet: true}
}

func (v NullableUpdateSystemMeterResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSystemMeterResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


