/*
The Enphase Commissioning API

Commissioning API can be used to create and update activations on a site, manage companies and users, update Tariff, etc.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package commissioning

import (
	"encoding/json"
)

// checks if the TariffSeasonsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TariffSeasonsInner{}

// TariffSeasonsInner struct for TariffSeasonsInner
type TariffSeasonsInner struct {
	// ToU year ID. e.g='all_year_long'.
	Id *string `json:"id,omitempty"`
	// Start of season. e.g='1/1'.
	Start *string `json:"start,omitempty"`
	// ToU seasons.
	Days []TariffSeasonsInnerDaysInner `json:"days,omitempty"`
	EnableChargeFromGrid *bool `json:"enable_charge_from_grid,omitempty"`
	EnableDischargeToGrid *bool `json:"enable_discharge_to_grid,omitempty"`
}

// NewTariffSeasonsInner instantiates a new TariffSeasonsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTariffSeasonsInner() *TariffSeasonsInner {
	this := TariffSeasonsInner{}
	return &this
}

// NewTariffSeasonsInnerWithDefaults instantiates a new TariffSeasonsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTariffSeasonsInnerWithDefaults() *TariffSeasonsInner {
	this := TariffSeasonsInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TariffSeasonsInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TariffSeasonsInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TariffSeasonsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *TariffSeasonsInner) SetId(v string) {
	o.Id = &v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *TariffSeasonsInner) GetStart() string {
	if o == nil || IsNil(o.Start) {
		var ret string
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TariffSeasonsInner) GetStartOk() (*string, bool) {
	if o == nil || IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *TariffSeasonsInner) HasStart() bool {
	if o != nil && !IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given string and assigns it to the Start field.
func (o *TariffSeasonsInner) SetStart(v string) {
	o.Start = &v
}

// GetDays returns the Days field value if set, zero value otherwise.
func (o *TariffSeasonsInner) GetDays() []TariffSeasonsInnerDaysInner {
	if o == nil || IsNil(o.Days) {
		var ret []TariffSeasonsInnerDaysInner
		return ret
	}
	return o.Days
}

// GetDaysOk returns a tuple with the Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TariffSeasonsInner) GetDaysOk() ([]TariffSeasonsInnerDaysInner, bool) {
	if o == nil || IsNil(o.Days) {
		return nil, false
	}
	return o.Days, true
}

// HasDays returns a boolean if a field has been set.
func (o *TariffSeasonsInner) HasDays() bool {
	if o != nil && !IsNil(o.Days) {
		return true
	}

	return false
}

// SetDays gets a reference to the given []TariffSeasonsInnerDaysInner and assigns it to the Days field.
func (o *TariffSeasonsInner) SetDays(v []TariffSeasonsInnerDaysInner) {
	o.Days = v
}

// GetEnableChargeFromGrid returns the EnableChargeFromGrid field value if set, zero value otherwise.
func (o *TariffSeasonsInner) GetEnableChargeFromGrid() bool {
	if o == nil || IsNil(o.EnableChargeFromGrid) {
		var ret bool
		return ret
	}
	return *o.EnableChargeFromGrid
}

// GetEnableChargeFromGridOk returns a tuple with the EnableChargeFromGrid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TariffSeasonsInner) GetEnableChargeFromGridOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableChargeFromGrid) {
		return nil, false
	}
	return o.EnableChargeFromGrid, true
}

// HasEnableChargeFromGrid returns a boolean if a field has been set.
func (o *TariffSeasonsInner) HasEnableChargeFromGrid() bool {
	if o != nil && !IsNil(o.EnableChargeFromGrid) {
		return true
	}

	return false
}

// SetEnableChargeFromGrid gets a reference to the given bool and assigns it to the EnableChargeFromGrid field.
func (o *TariffSeasonsInner) SetEnableChargeFromGrid(v bool) {
	o.EnableChargeFromGrid = &v
}

// GetEnableDischargeToGrid returns the EnableDischargeToGrid field value if set, zero value otherwise.
func (o *TariffSeasonsInner) GetEnableDischargeToGrid() bool {
	if o == nil || IsNil(o.EnableDischargeToGrid) {
		var ret bool
		return ret
	}
	return *o.EnableDischargeToGrid
}

// GetEnableDischargeToGridOk returns a tuple with the EnableDischargeToGrid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TariffSeasonsInner) GetEnableDischargeToGridOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableDischargeToGrid) {
		return nil, false
	}
	return o.EnableDischargeToGrid, true
}

// HasEnableDischargeToGrid returns a boolean if a field has been set.
func (o *TariffSeasonsInner) HasEnableDischargeToGrid() bool {
	if o != nil && !IsNil(o.EnableDischargeToGrid) {
		return true
	}

	return false
}

// SetEnableDischargeToGrid gets a reference to the given bool and assigns it to the EnableDischargeToGrid field.
func (o *TariffSeasonsInner) SetEnableDischargeToGrid(v bool) {
	o.EnableDischargeToGrid = &v
}

func (o TariffSeasonsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TariffSeasonsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	if !IsNil(o.Days) {
		toSerialize["days"] = o.Days
	}
	if !IsNil(o.EnableChargeFromGrid) {
		toSerialize["enable_charge_from_grid"] = o.EnableChargeFromGrid
	}
	if !IsNil(o.EnableDischargeToGrid) {
		toSerialize["enable_discharge_to_grid"] = o.EnableDischargeToGrid
	}
	return toSerialize, nil
}

type NullableTariffSeasonsInner struct {
	value *TariffSeasonsInner
	isSet bool
}

func (v NullableTariffSeasonsInner) Get() *TariffSeasonsInner {
	return v.value
}

func (v *NullableTariffSeasonsInner) Set(val *TariffSeasonsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTariffSeasonsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTariffSeasonsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTariffSeasonsInner(val *TariffSeasonsInner) *NullableTariffSeasonsInner {
	return &NullableTariffSeasonsInner{value: val, isSet: true}
}

func (v NullableTariffSeasonsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTariffSeasonsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


