/*
The Enphase Commissioning API

Commissioning API can be used to create and update activations on a site, manage companies and users, update Tariff, etc.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package commissioning

import (
	"encoding/json"
)

// checks if the TariffSettingsTariffSingleRate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TariffSettingsTariffSingleRate{}

// TariffSettingsTariffSingleRate Single rate.
type TariffSettingsTariffSingleRate struct {
	// Usage rate. e.g=0.0.
	Rate *string `json:"rate,omitempty"`
	// FiT rate. e.g=0.0.
	Sell *string `json:"sell,omitempty"`
}

// NewTariffSettingsTariffSingleRate instantiates a new TariffSettingsTariffSingleRate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTariffSettingsTariffSingleRate() *TariffSettingsTariffSingleRate {
	this := TariffSettingsTariffSingleRate{}
	return &this
}

// NewTariffSettingsTariffSingleRateWithDefaults instantiates a new TariffSettingsTariffSingleRate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTariffSettingsTariffSingleRateWithDefaults() *TariffSettingsTariffSingleRate {
	this := TariffSettingsTariffSingleRate{}
	return &this
}

// GetRate returns the Rate field value if set, zero value otherwise.
func (o *TariffSettingsTariffSingleRate) GetRate() string {
	if o == nil || IsNil(o.Rate) {
		var ret string
		return ret
	}
	return *o.Rate
}

// GetRateOk returns a tuple with the Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TariffSettingsTariffSingleRate) GetRateOk() (*string, bool) {
	if o == nil || IsNil(o.Rate) {
		return nil, false
	}
	return o.Rate, true
}

// HasRate returns a boolean if a field has been set.
func (o *TariffSettingsTariffSingleRate) HasRate() bool {
	if o != nil && !IsNil(o.Rate) {
		return true
	}

	return false
}

// SetRate gets a reference to the given string and assigns it to the Rate field.
func (o *TariffSettingsTariffSingleRate) SetRate(v string) {
	o.Rate = &v
}

// GetSell returns the Sell field value if set, zero value otherwise.
func (o *TariffSettingsTariffSingleRate) GetSell() string {
	if o == nil || IsNil(o.Sell) {
		var ret string
		return ret
	}
	return *o.Sell
}

// GetSellOk returns a tuple with the Sell field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TariffSettingsTariffSingleRate) GetSellOk() (*string, bool) {
	if o == nil || IsNil(o.Sell) {
		return nil, false
	}
	return o.Sell, true
}

// HasSell returns a boolean if a field has been set.
func (o *TariffSettingsTariffSingleRate) HasSell() bool {
	if o != nil && !IsNil(o.Sell) {
		return true
	}

	return false
}

// SetSell gets a reference to the given string and assigns it to the Sell field.
func (o *TariffSettingsTariffSingleRate) SetSell(v string) {
	o.Sell = &v
}

func (o TariffSettingsTariffSingleRate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TariffSettingsTariffSingleRate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Rate) {
		toSerialize["rate"] = o.Rate
	}
	if !IsNil(o.Sell) {
		toSerialize["sell"] = o.Sell
	}
	return toSerialize, nil
}

type NullableTariffSettingsTariffSingleRate struct {
	value *TariffSettingsTariffSingleRate
	isSet bool
}

func (v NullableTariffSettingsTariffSingleRate) Get() *TariffSettingsTariffSingleRate {
	return v.value
}

func (v *NullableTariffSettingsTariffSingleRate) Set(val *TariffSettingsTariffSingleRate) {
	v.value = val
	v.isSet = true
}

func (v NullableTariffSettingsTariffSingleRate) IsSet() bool {
	return v.isSet
}

func (v *NullableTariffSettingsTariffSingleRate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTariffSettingsTariffSingleRate(val *TariffSettingsTariffSingleRate) *NullableTariffSettingsTariffSingleRate {
	return &NullableTariffSettingsTariffSingleRate{value: val, isSet: true}
}

func (v NullableTariffSettingsTariffSingleRate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTariffSettingsTariffSingleRate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


