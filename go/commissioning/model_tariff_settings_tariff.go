/*
The Enphase Commissioning API

Commissioning API can be used to create and update activations on a site, manage companies and users, update Tariff, etc.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package commissioning

import (
	"encoding/json"
)

// checks if the TariffSettingsTariff type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TariffSettingsTariff{}

// TariffSettingsTariff struct for TariffSettingsTariff
type TariffSettingsTariff struct {
	CurrencyType *TariffSettingsTariffCurrencyType `json:"currency_type,omitempty"`
	SingleRate *TariffSettingsTariffSingleRate `json:"single_rate,omitempty"`
	// ToU seasons.
	Seasons []TariffSeasonsInner `json:"seasons,omitempty"`
	// ToU seasons.
	SeasonsSell []TariffSeasonsInner `json:"seasons_sell,omitempty"`
}

// NewTariffSettingsTariff instantiates a new TariffSettingsTariff object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTariffSettingsTariff() *TariffSettingsTariff {
	this := TariffSettingsTariff{}
	return &this
}

// NewTariffSettingsTariffWithDefaults instantiates a new TariffSettingsTariff object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTariffSettingsTariffWithDefaults() *TariffSettingsTariff {
	this := TariffSettingsTariff{}
	return &this
}

// GetCurrencyType returns the CurrencyType field value if set, zero value otherwise.
func (o *TariffSettingsTariff) GetCurrencyType() TariffSettingsTariffCurrencyType {
	if o == nil || IsNil(o.CurrencyType) {
		var ret TariffSettingsTariffCurrencyType
		return ret
	}
	return *o.CurrencyType
}

// GetCurrencyTypeOk returns a tuple with the CurrencyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TariffSettingsTariff) GetCurrencyTypeOk() (*TariffSettingsTariffCurrencyType, bool) {
	if o == nil || IsNil(o.CurrencyType) {
		return nil, false
	}
	return o.CurrencyType, true
}

// HasCurrencyType returns a boolean if a field has been set.
func (o *TariffSettingsTariff) HasCurrencyType() bool {
	if o != nil && !IsNil(o.CurrencyType) {
		return true
	}

	return false
}

// SetCurrencyType gets a reference to the given TariffSettingsTariffCurrencyType and assigns it to the CurrencyType field.
func (o *TariffSettingsTariff) SetCurrencyType(v TariffSettingsTariffCurrencyType) {
	o.CurrencyType = &v
}

// GetSingleRate returns the SingleRate field value if set, zero value otherwise.
func (o *TariffSettingsTariff) GetSingleRate() TariffSettingsTariffSingleRate {
	if o == nil || IsNil(o.SingleRate) {
		var ret TariffSettingsTariffSingleRate
		return ret
	}
	return *o.SingleRate
}

// GetSingleRateOk returns a tuple with the SingleRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TariffSettingsTariff) GetSingleRateOk() (*TariffSettingsTariffSingleRate, bool) {
	if o == nil || IsNil(o.SingleRate) {
		return nil, false
	}
	return o.SingleRate, true
}

// HasSingleRate returns a boolean if a field has been set.
func (o *TariffSettingsTariff) HasSingleRate() bool {
	if o != nil && !IsNil(o.SingleRate) {
		return true
	}

	return false
}

// SetSingleRate gets a reference to the given TariffSettingsTariffSingleRate and assigns it to the SingleRate field.
func (o *TariffSettingsTariff) SetSingleRate(v TariffSettingsTariffSingleRate) {
	o.SingleRate = &v
}

// GetSeasons returns the Seasons field value if set, zero value otherwise.
func (o *TariffSettingsTariff) GetSeasons() []TariffSeasonsInner {
	if o == nil || IsNil(o.Seasons) {
		var ret []TariffSeasonsInner
		return ret
	}
	return o.Seasons
}

// GetSeasonsOk returns a tuple with the Seasons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TariffSettingsTariff) GetSeasonsOk() ([]TariffSeasonsInner, bool) {
	if o == nil || IsNil(o.Seasons) {
		return nil, false
	}
	return o.Seasons, true
}

// HasSeasons returns a boolean if a field has been set.
func (o *TariffSettingsTariff) HasSeasons() bool {
	if o != nil && !IsNil(o.Seasons) {
		return true
	}

	return false
}

// SetSeasons gets a reference to the given []TariffSeasonsInner and assigns it to the Seasons field.
func (o *TariffSettingsTariff) SetSeasons(v []TariffSeasonsInner) {
	o.Seasons = v
}

// GetSeasonsSell returns the SeasonsSell field value if set, zero value otherwise.
func (o *TariffSettingsTariff) GetSeasonsSell() []TariffSeasonsInner {
	if o == nil || IsNil(o.SeasonsSell) {
		var ret []TariffSeasonsInner
		return ret
	}
	return o.SeasonsSell
}

// GetSeasonsSellOk returns a tuple with the SeasonsSell field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TariffSettingsTariff) GetSeasonsSellOk() ([]TariffSeasonsInner, bool) {
	if o == nil || IsNil(o.SeasonsSell) {
		return nil, false
	}
	return o.SeasonsSell, true
}

// HasSeasonsSell returns a boolean if a field has been set.
func (o *TariffSettingsTariff) HasSeasonsSell() bool {
	if o != nil && !IsNil(o.SeasonsSell) {
		return true
	}

	return false
}

// SetSeasonsSell gets a reference to the given []TariffSeasonsInner and assigns it to the SeasonsSell field.
func (o *TariffSettingsTariff) SetSeasonsSell(v []TariffSeasonsInner) {
	o.SeasonsSell = v
}

func (o TariffSettingsTariff) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TariffSettingsTariff) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrencyType) {
		toSerialize["currency_type"] = o.CurrencyType
	}
	if !IsNil(o.SingleRate) {
		toSerialize["single_rate"] = o.SingleRate
	}
	if !IsNil(o.Seasons) {
		toSerialize["seasons"] = o.Seasons
	}
	if !IsNil(o.SeasonsSell) {
		toSerialize["seasons_sell"] = o.SeasonsSell
	}
	return toSerialize, nil
}

type NullableTariffSettingsTariff struct {
	value *TariffSettingsTariff
	isSet bool
}

func (v NullableTariffSettingsTariff) Get() *TariffSettingsTariff {
	return v.value
}

func (v *NullableTariffSettingsTariff) Set(val *TariffSettingsTariff) {
	v.value = val
	v.isSet = true
}

func (v NullableTariffSettingsTariff) IsSet() bool {
	return v.isSet
}

func (v *NullableTariffSettingsTariff) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTariffSettingsTariff(val *TariffSettingsTariff) *NullableTariffSettingsTariff {
	return &NullableTariffSettingsTariff{value: val, isSet: true}
}

func (v NullableTariffSettingsTariff) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTariffSettingsTariff) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


