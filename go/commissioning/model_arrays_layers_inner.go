/*
The Enphase Commissioning API

Commissioning API can be used to create and update activations on a site, manage companies and users, update Tariff, etc.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package commissioning

import (
	"encoding/json"
)

// checks if the ArraysLayersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArraysLayersInner{}

// ArraysLayersInner struct for ArraysLayersInner
type ArraysLayersInner struct {
	// Background image url.
	File *string `json:"file,omitempty"`
	// Zoom level.
	Scale *int32 `json:"scale,omitempty"`
	// Angle of the layer.
	Angle *int32 `json:"angle,omitempty"`
	// Opacity of the layer.
	Opacity *int32 `json:"opacity,omitempty"`
	// Width of the layer.
	Width *int32 `json:"width,omitempty"`
	// Height of the layer.
	Height *int32 `json:"height,omitempty"`
	// Left of the layer.
	Left *int32 `json:"left,omitempty"`
	// Top of the layer.
	Top *int32 `json:"top,omitempty"`
}

// NewArraysLayersInner instantiates a new ArraysLayersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArraysLayersInner() *ArraysLayersInner {
	this := ArraysLayersInner{}
	return &this
}

// NewArraysLayersInnerWithDefaults instantiates a new ArraysLayersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArraysLayersInnerWithDefaults() *ArraysLayersInner {
	this := ArraysLayersInner{}
	return &this
}

// GetFile returns the File field value if set, zero value otherwise.
func (o *ArraysLayersInner) GetFile() string {
	if o == nil || IsNil(o.File) {
		var ret string
		return ret
	}
	return *o.File
}

// GetFileOk returns a tuple with the File field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArraysLayersInner) GetFileOk() (*string, bool) {
	if o == nil || IsNil(o.File) {
		return nil, false
	}
	return o.File, true
}

// HasFile returns a boolean if a field has been set.
func (o *ArraysLayersInner) HasFile() bool {
	if o != nil && !IsNil(o.File) {
		return true
	}

	return false
}

// SetFile gets a reference to the given string and assigns it to the File field.
func (o *ArraysLayersInner) SetFile(v string) {
	o.File = &v
}

// GetScale returns the Scale field value if set, zero value otherwise.
func (o *ArraysLayersInner) GetScale() int32 {
	if o == nil || IsNil(o.Scale) {
		var ret int32
		return ret
	}
	return *o.Scale
}

// GetScaleOk returns a tuple with the Scale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArraysLayersInner) GetScaleOk() (*int32, bool) {
	if o == nil || IsNil(o.Scale) {
		return nil, false
	}
	return o.Scale, true
}

// HasScale returns a boolean if a field has been set.
func (o *ArraysLayersInner) HasScale() bool {
	if o != nil && !IsNil(o.Scale) {
		return true
	}

	return false
}

// SetScale gets a reference to the given int32 and assigns it to the Scale field.
func (o *ArraysLayersInner) SetScale(v int32) {
	o.Scale = &v
}

// GetAngle returns the Angle field value if set, zero value otherwise.
func (o *ArraysLayersInner) GetAngle() int32 {
	if o == nil || IsNil(o.Angle) {
		var ret int32
		return ret
	}
	return *o.Angle
}

// GetAngleOk returns a tuple with the Angle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArraysLayersInner) GetAngleOk() (*int32, bool) {
	if o == nil || IsNil(o.Angle) {
		return nil, false
	}
	return o.Angle, true
}

// HasAngle returns a boolean if a field has been set.
func (o *ArraysLayersInner) HasAngle() bool {
	if o != nil && !IsNil(o.Angle) {
		return true
	}

	return false
}

// SetAngle gets a reference to the given int32 and assigns it to the Angle field.
func (o *ArraysLayersInner) SetAngle(v int32) {
	o.Angle = &v
}

// GetOpacity returns the Opacity field value if set, zero value otherwise.
func (o *ArraysLayersInner) GetOpacity() int32 {
	if o == nil || IsNil(o.Opacity) {
		var ret int32
		return ret
	}
	return *o.Opacity
}

// GetOpacityOk returns a tuple with the Opacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArraysLayersInner) GetOpacityOk() (*int32, bool) {
	if o == nil || IsNil(o.Opacity) {
		return nil, false
	}
	return o.Opacity, true
}

// HasOpacity returns a boolean if a field has been set.
func (o *ArraysLayersInner) HasOpacity() bool {
	if o != nil && !IsNil(o.Opacity) {
		return true
	}

	return false
}

// SetOpacity gets a reference to the given int32 and assigns it to the Opacity field.
func (o *ArraysLayersInner) SetOpacity(v int32) {
	o.Opacity = &v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *ArraysLayersInner) GetWidth() int32 {
	if o == nil || IsNil(o.Width) {
		var ret int32
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArraysLayersInner) GetWidthOk() (*int32, bool) {
	if o == nil || IsNil(o.Width) {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *ArraysLayersInner) HasWidth() bool {
	if o != nil && !IsNil(o.Width) {
		return true
	}

	return false
}

// SetWidth gets a reference to the given int32 and assigns it to the Width field.
func (o *ArraysLayersInner) SetWidth(v int32) {
	o.Width = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *ArraysLayersInner) GetHeight() int32 {
	if o == nil || IsNil(o.Height) {
		var ret int32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArraysLayersInner) GetHeightOk() (*int32, bool) {
	if o == nil || IsNil(o.Height) {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *ArraysLayersInner) HasHeight() bool {
	if o != nil && !IsNil(o.Height) {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int32 and assigns it to the Height field.
func (o *ArraysLayersInner) SetHeight(v int32) {
	o.Height = &v
}

// GetLeft returns the Left field value if set, zero value otherwise.
func (o *ArraysLayersInner) GetLeft() int32 {
	if o == nil || IsNil(o.Left) {
		var ret int32
		return ret
	}
	return *o.Left
}

// GetLeftOk returns a tuple with the Left field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArraysLayersInner) GetLeftOk() (*int32, bool) {
	if o == nil || IsNil(o.Left) {
		return nil, false
	}
	return o.Left, true
}

// HasLeft returns a boolean if a field has been set.
func (o *ArraysLayersInner) HasLeft() bool {
	if o != nil && !IsNil(o.Left) {
		return true
	}

	return false
}

// SetLeft gets a reference to the given int32 and assigns it to the Left field.
func (o *ArraysLayersInner) SetLeft(v int32) {
	o.Left = &v
}

// GetTop returns the Top field value if set, zero value otherwise.
func (o *ArraysLayersInner) GetTop() int32 {
	if o == nil || IsNil(o.Top) {
		var ret int32
		return ret
	}
	return *o.Top
}

// GetTopOk returns a tuple with the Top field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArraysLayersInner) GetTopOk() (*int32, bool) {
	if o == nil || IsNil(o.Top) {
		return nil, false
	}
	return o.Top, true
}

// HasTop returns a boolean if a field has been set.
func (o *ArraysLayersInner) HasTop() bool {
	if o != nil && !IsNil(o.Top) {
		return true
	}

	return false
}

// SetTop gets a reference to the given int32 and assigns it to the Top field.
func (o *ArraysLayersInner) SetTop(v int32) {
	o.Top = &v
}

func (o ArraysLayersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArraysLayersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.File) {
		toSerialize["file"] = o.File
	}
	if !IsNil(o.Scale) {
		toSerialize["scale"] = o.Scale
	}
	if !IsNil(o.Angle) {
		toSerialize["angle"] = o.Angle
	}
	if !IsNil(o.Opacity) {
		toSerialize["opacity"] = o.Opacity
	}
	if !IsNil(o.Width) {
		toSerialize["width"] = o.Width
	}
	if !IsNil(o.Height) {
		toSerialize["height"] = o.Height
	}
	if !IsNil(o.Left) {
		toSerialize["left"] = o.Left
	}
	if !IsNil(o.Top) {
		toSerialize["top"] = o.Top
	}
	return toSerialize, nil
}

type NullableArraysLayersInner struct {
	value *ArraysLayersInner
	isSet bool
}

func (v NullableArraysLayersInner) Get() *ArraysLayersInner {
	return v.value
}

func (v *NullableArraysLayersInner) Set(val *ArraysLayersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableArraysLayersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableArraysLayersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArraysLayersInner(val *ArraysLayersInner) *NullableArraysLayersInner {
	return &NullableArraysLayersInner{value: val, isSet: true}
}

func (v NullableArraysLayersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArraysLayersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


