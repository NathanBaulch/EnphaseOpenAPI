/*
The Enphase Commissioning API

Commissioning API can be used to create and update activations on a site, manage companies and users, update Tariff, etc.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package commissioning

import (
	"encoding/json"
)

// checks if the TariffSeasonsInnerDaysInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TariffSeasonsInnerDaysInner{}

// TariffSeasonsInnerDaysInner struct for TariffSeasonsInnerDaysInner
type TariffSeasonsInnerDaysInner struct {
	// ToU days ID. e.g='all_days'.
	Id *string `json:"id,omitempty"`
	// Comma separated days. e.g='Sun,Mon,Tue,Wed,Thu,Fri,Sat'.
	Days *string `json:"days,omitempty"`
	// Must charge start field. e.g=0.
	MustChargeStart *int32 `json:"must_charge_start,omitempty"`
	// Must charge duration field. e.g=0.
	MustChargeDuration *int32 `json:"must_charge_duration,omitempty"`
	// Periods.
	Periods []TariffSeasonsInnerDaysInnerPeriodsInner `json:"periods,omitempty"`
}

// NewTariffSeasonsInnerDaysInner instantiates a new TariffSeasonsInnerDaysInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTariffSeasonsInnerDaysInner() *TariffSeasonsInnerDaysInner {
	this := TariffSeasonsInnerDaysInner{}
	return &this
}

// NewTariffSeasonsInnerDaysInnerWithDefaults instantiates a new TariffSeasonsInnerDaysInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTariffSeasonsInnerDaysInnerWithDefaults() *TariffSeasonsInnerDaysInner {
	this := TariffSeasonsInnerDaysInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TariffSeasonsInnerDaysInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TariffSeasonsInnerDaysInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TariffSeasonsInnerDaysInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *TariffSeasonsInnerDaysInner) SetId(v string) {
	o.Id = &v
}

// GetDays returns the Days field value if set, zero value otherwise.
func (o *TariffSeasonsInnerDaysInner) GetDays() string {
	if o == nil || IsNil(o.Days) {
		var ret string
		return ret
	}
	return *o.Days
}

// GetDaysOk returns a tuple with the Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TariffSeasonsInnerDaysInner) GetDaysOk() (*string, bool) {
	if o == nil || IsNil(o.Days) {
		return nil, false
	}
	return o.Days, true
}

// HasDays returns a boolean if a field has been set.
func (o *TariffSeasonsInnerDaysInner) HasDays() bool {
	if o != nil && !IsNil(o.Days) {
		return true
	}

	return false
}

// SetDays gets a reference to the given string and assigns it to the Days field.
func (o *TariffSeasonsInnerDaysInner) SetDays(v string) {
	o.Days = &v
}

// GetMustChargeStart returns the MustChargeStart field value if set, zero value otherwise.
func (o *TariffSeasonsInnerDaysInner) GetMustChargeStart() int32 {
	if o == nil || IsNil(o.MustChargeStart) {
		var ret int32
		return ret
	}
	return *o.MustChargeStart
}

// GetMustChargeStartOk returns a tuple with the MustChargeStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TariffSeasonsInnerDaysInner) GetMustChargeStartOk() (*int32, bool) {
	if o == nil || IsNil(o.MustChargeStart) {
		return nil, false
	}
	return o.MustChargeStart, true
}

// HasMustChargeStart returns a boolean if a field has been set.
func (o *TariffSeasonsInnerDaysInner) HasMustChargeStart() bool {
	if o != nil && !IsNil(o.MustChargeStart) {
		return true
	}

	return false
}

// SetMustChargeStart gets a reference to the given int32 and assigns it to the MustChargeStart field.
func (o *TariffSeasonsInnerDaysInner) SetMustChargeStart(v int32) {
	o.MustChargeStart = &v
}

// GetMustChargeDuration returns the MustChargeDuration field value if set, zero value otherwise.
func (o *TariffSeasonsInnerDaysInner) GetMustChargeDuration() int32 {
	if o == nil || IsNil(o.MustChargeDuration) {
		var ret int32
		return ret
	}
	return *o.MustChargeDuration
}

// GetMustChargeDurationOk returns a tuple with the MustChargeDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TariffSeasonsInnerDaysInner) GetMustChargeDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.MustChargeDuration) {
		return nil, false
	}
	return o.MustChargeDuration, true
}

// HasMustChargeDuration returns a boolean if a field has been set.
func (o *TariffSeasonsInnerDaysInner) HasMustChargeDuration() bool {
	if o != nil && !IsNil(o.MustChargeDuration) {
		return true
	}

	return false
}

// SetMustChargeDuration gets a reference to the given int32 and assigns it to the MustChargeDuration field.
func (o *TariffSeasonsInnerDaysInner) SetMustChargeDuration(v int32) {
	o.MustChargeDuration = &v
}

// GetPeriods returns the Periods field value if set, zero value otherwise.
func (o *TariffSeasonsInnerDaysInner) GetPeriods() []TariffSeasonsInnerDaysInnerPeriodsInner {
	if o == nil || IsNil(o.Periods) {
		var ret []TariffSeasonsInnerDaysInnerPeriodsInner
		return ret
	}
	return o.Periods
}

// GetPeriodsOk returns a tuple with the Periods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TariffSeasonsInnerDaysInner) GetPeriodsOk() ([]TariffSeasonsInnerDaysInnerPeriodsInner, bool) {
	if o == nil || IsNil(o.Periods) {
		return nil, false
	}
	return o.Periods, true
}

// HasPeriods returns a boolean if a field has been set.
func (o *TariffSeasonsInnerDaysInner) HasPeriods() bool {
	if o != nil && !IsNil(o.Periods) {
		return true
	}

	return false
}

// SetPeriods gets a reference to the given []TariffSeasonsInnerDaysInnerPeriodsInner and assigns it to the Periods field.
func (o *TariffSeasonsInnerDaysInner) SetPeriods(v []TariffSeasonsInnerDaysInnerPeriodsInner) {
	o.Periods = v
}

func (o TariffSeasonsInnerDaysInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TariffSeasonsInnerDaysInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Days) {
		toSerialize["days"] = o.Days
	}
	if !IsNil(o.MustChargeStart) {
		toSerialize["must_charge_start"] = o.MustChargeStart
	}
	if !IsNil(o.MustChargeDuration) {
		toSerialize["must_charge_duration"] = o.MustChargeDuration
	}
	if !IsNil(o.Periods) {
		toSerialize["periods"] = o.Periods
	}
	return toSerialize, nil
}

type NullableTariffSeasonsInnerDaysInner struct {
	value *TariffSeasonsInnerDaysInner
	isSet bool
}

func (v NullableTariffSeasonsInnerDaysInner) Get() *TariffSeasonsInnerDaysInner {
	return v.value
}

func (v *NullableTariffSeasonsInnerDaysInner) Set(val *TariffSeasonsInnerDaysInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTariffSeasonsInnerDaysInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTariffSeasonsInnerDaysInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTariffSeasonsInnerDaysInner(val *TariffSeasonsInnerDaysInner) *NullableTariffSeasonsInnerDaysInner {
	return &NullableTariffSeasonsInnerDaysInner{value: val, isSet: true}
}

func (v NullableTariffSeasonsInnerDaysInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTariffSeasonsInnerDaysInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


