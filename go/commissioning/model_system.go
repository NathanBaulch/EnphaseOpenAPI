/*
The Enphase Commissioning API

Commissioning API can be used to create and update activations on a site, manage companies and users, update Tariff, etc.

API version: 4.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package commissioning

import (
	"encoding/json"
)

// checks if the System type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &System{}

// System struct for System
type System struct {
	// Enlighten ID of this system. System-generated.
	SystemId *int32 `json:"system_id,omitempty"`
	// Name of the system.
	SystemName *string `json:"system_name,omitempty"`
	SystemType *SystemTypeEnum `json:"system_type,omitempty"`
	// System's status.
	Status *string `json:"status,omitempty"`
	// What stage of the activation process this activation is in. System-generated.
	Stage *int32 `json:"stage,omitempty"`
	InternetConnection *SystemInternetConnectionEnum `json:"internet_connection,omitempty"`
	// Whether the system is leased. Default false.
	Lease *bool `json:"lease,omitempty"`
	// Whether this system is permitted to operate. Default true.
	Operational *bool `json:"operational,omitempty"`
	Owner *SystemOwner `json:"owner,omitempty"`
	// Enlighten ID of this system owner. System-generated. This field is optional.
	OwnerId *int32 `json:"owner_id,omitempty"`
	Host *SystemHost `json:"host,omitempty"`
	// Enlighten ID of this system host. System-generated. This field is optional.
	HostId *int32 `json:"host_id,omitempty"`
	// Name of the installer.
	InstallerName *string `json:"installer_name,omitempty"`
	// Enlighten ID of the installer of this system. Defaults to current user's company ID.
	InstallerId *int32 `json:"installer_id,omitempty"`
	// URI for this activation.
	Uri *string `json:"uri,omitempty"`
	// Activation last updated timestamp.
	UpdatedAt *int64 `json:"updated_at,omitempty"`
	// Identifier of this system as provided by the calling user's company. This attribute is not present if the calling user's company does not have a reference for this system.
	Reference *string `json:"reference,omitempty"`
	// Identifiers assigned to this activation by other companies which have access to it. This attribute is not present if there are no other references for this system.
	OtherReferences []string `json:"other_references,omitempty"`
	// When true, the system will be eligible to appear in the public systems lists of Enphase and the system's installer. Default true.
	AllowPublicAccess *bool `json:"allow_public_access,omitempty"`
	// When the system was approved to connect to the grid.
	InterconnectDate *string `json:"interconnect_date,omitempty"`
	// Installer support email.
	InstallerSupportEmail *string `json:"installer_support_email,omitempty"`
	Source *SystemSourceEnum `json:"source,omitempty"`
	ArrayType *SystemArrayTypeEnum `json:"array_type,omitempty"`
	AttachmentType *SystemAttachmentTypeEnum `json:"attachment_type,omitempty"`
	// Specifies serial number of ensemble envoy in multi envoy system.
	EnsembleEnvoy *string `json:"ensemble_envoy,omitempty"`
	ProductionMode *SystemProductionModeEnum `json:"production_mode,omitempty"`
	// Grid profile to set on this system's microinverters. See GridProfiles API for how to retrieve a list of known profiles.
	GridProfile *string `json:"grid_profile,omitempty"`
	RequestedProfile *string `json:"requested_profile,omitempty"`
	RequestedReportFreq *string `json:"requested_report_freq,omitempty"`
	// Supported voltage/phase associated with a commercial system inside North America. If system type is not commercial, or if the installer exists & installer's country is not inside North America, or if the system's country is not inside North America, then the voltage value would be null.
	Voltage *string `json:"voltage,omitempty"`
	// A list of Envoys installed on this system.
	EnvoySerialNumbers []string `json:"envoy_serial_numbers,omitempty"`
	// Total envoys the system is supposed to have.
	ExpectedEnvoyCount *int32 `json:"expected_envoy_count,omitempty"`
	// Total PCUs the system is supposed to have.
	ExpectedPcuCount *int32 `json:"expected_pcu_count,omitempty"`
	// Total nsrs the system is supposed to have.
	ExpectedNsrCount *int32 `json:"expected_nsr_count,omitempty"`
	// Total meters the system is supposed to have.
	ExpectedMeterCount *int32 `json:"expected_meter_count,omitempty"`
	// Total encharges the system is supposed to have.
	ExpectedEnchargeCount *int32 `json:"expected_encharge_count,omitempty"`
	// Total enpowers the system is supposed to have.
	ExpectedEnpowerCount *int32 `json:"expected_enpower_count,omitempty"`
	// Enlighten ID of the PV manufacturer associated with the PV model installed on the system. See PvManufacturers for how to retrieve PV manufacturer IDs.
	PvManufacturer *int32 `json:"pv_manufacturer,omitempty"`
	// Name of the Custom PV module manufacturer associated with the system.
	PvManufacturerName *string `json:"pv_manufacturer_name,omitempty"`
	// Enlighten ID of the PV model installed on the system. See PvManufacturers and PvModels for how to retrieve PV model IDs.
	PvModel *int32 `json:"pv_model,omitempty"`
	// Name of the Custom PV module model associated with the system.
	PvModelName *string `json:"pv_model_name,omitempty"`
	// Power rating (in W) of the PV module installed on the system.
	PvModulePowerRating *float32 `json:"pv_module_power_rating,omitempty"`
	// Type ID of the PV module installed on the system. 1 -> 'Mono-facial', 2 -> 'Bi-facial', 3 -> 'Split cell', 4 -> 'Other'.
	PvModuleType *int32 `json:"pv_module_type,omitempty"`
	// Encharge detail.
	Encharge []SystemEnchargeInner `json:"encharge,omitempty"`
	// Enpower detail.
	Enpower []SystemEnpowerInner `json:"enpower,omitempty"`
	Address *Address `json:"address,omitempty"`
}

// NewSystem instantiates a new System object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystem() *System {
	this := System{}
	return &this
}

// NewSystemWithDefaults instantiates a new System object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemWithDefaults() *System {
	this := System{}
	return &this
}

// GetSystemId returns the SystemId field value if set, zero value otherwise.
func (o *System) GetSystemId() int32 {
	if o == nil || IsNil(o.SystemId) {
		var ret int32
		return ret
	}
	return *o.SystemId
}

// GetSystemIdOk returns a tuple with the SystemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetSystemIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SystemId) {
		return nil, false
	}
	return o.SystemId, true
}

// HasSystemId returns a boolean if a field has been set.
func (o *System) HasSystemId() bool {
	if o != nil && !IsNil(o.SystemId) {
		return true
	}

	return false
}

// SetSystemId gets a reference to the given int32 and assigns it to the SystemId field.
func (o *System) SetSystemId(v int32) {
	o.SystemId = &v
}

// GetSystemName returns the SystemName field value if set, zero value otherwise.
func (o *System) GetSystemName() string {
	if o == nil || IsNil(o.SystemName) {
		var ret string
		return ret
	}
	return *o.SystemName
}

// GetSystemNameOk returns a tuple with the SystemName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetSystemNameOk() (*string, bool) {
	if o == nil || IsNil(o.SystemName) {
		return nil, false
	}
	return o.SystemName, true
}

// HasSystemName returns a boolean if a field has been set.
func (o *System) HasSystemName() bool {
	if o != nil && !IsNil(o.SystemName) {
		return true
	}

	return false
}

// SetSystemName gets a reference to the given string and assigns it to the SystemName field.
func (o *System) SetSystemName(v string) {
	o.SystemName = &v
}

// GetSystemType returns the SystemType field value if set, zero value otherwise.
func (o *System) GetSystemType() SystemTypeEnum {
	if o == nil || IsNil(o.SystemType) {
		var ret SystemTypeEnum
		return ret
	}
	return *o.SystemType
}

// GetSystemTypeOk returns a tuple with the SystemType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetSystemTypeOk() (*SystemTypeEnum, bool) {
	if o == nil || IsNil(o.SystemType) {
		return nil, false
	}
	return o.SystemType, true
}

// HasSystemType returns a boolean if a field has been set.
func (o *System) HasSystemType() bool {
	if o != nil && !IsNil(o.SystemType) {
		return true
	}

	return false
}

// SetSystemType gets a reference to the given SystemTypeEnum and assigns it to the SystemType field.
func (o *System) SetSystemType(v SystemTypeEnum) {
	o.SystemType = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *System) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *System) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *System) SetStatus(v string) {
	o.Status = &v
}

// GetStage returns the Stage field value if set, zero value otherwise.
func (o *System) GetStage() int32 {
	if o == nil || IsNil(o.Stage) {
		var ret int32
		return ret
	}
	return *o.Stage
}

// GetStageOk returns a tuple with the Stage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetStageOk() (*int32, bool) {
	if o == nil || IsNil(o.Stage) {
		return nil, false
	}
	return o.Stage, true
}

// HasStage returns a boolean if a field has been set.
func (o *System) HasStage() bool {
	if o != nil && !IsNil(o.Stage) {
		return true
	}

	return false
}

// SetStage gets a reference to the given int32 and assigns it to the Stage field.
func (o *System) SetStage(v int32) {
	o.Stage = &v
}

// GetInternetConnection returns the InternetConnection field value if set, zero value otherwise.
func (o *System) GetInternetConnection() SystemInternetConnectionEnum {
	if o == nil || IsNil(o.InternetConnection) {
		var ret SystemInternetConnectionEnum
		return ret
	}
	return *o.InternetConnection
}

// GetInternetConnectionOk returns a tuple with the InternetConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetInternetConnectionOk() (*SystemInternetConnectionEnum, bool) {
	if o == nil || IsNil(o.InternetConnection) {
		return nil, false
	}
	return o.InternetConnection, true
}

// HasInternetConnection returns a boolean if a field has been set.
func (o *System) HasInternetConnection() bool {
	if o != nil && !IsNil(o.InternetConnection) {
		return true
	}

	return false
}

// SetInternetConnection gets a reference to the given SystemInternetConnectionEnum and assigns it to the InternetConnection field.
func (o *System) SetInternetConnection(v SystemInternetConnectionEnum) {
	o.InternetConnection = &v
}

// GetLease returns the Lease field value if set, zero value otherwise.
func (o *System) GetLease() bool {
	if o == nil || IsNil(o.Lease) {
		var ret bool
		return ret
	}
	return *o.Lease
}

// GetLeaseOk returns a tuple with the Lease field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetLeaseOk() (*bool, bool) {
	if o == nil || IsNil(o.Lease) {
		return nil, false
	}
	return o.Lease, true
}

// HasLease returns a boolean if a field has been set.
func (o *System) HasLease() bool {
	if o != nil && !IsNil(o.Lease) {
		return true
	}

	return false
}

// SetLease gets a reference to the given bool and assigns it to the Lease field.
func (o *System) SetLease(v bool) {
	o.Lease = &v
}

// GetOperational returns the Operational field value if set, zero value otherwise.
func (o *System) GetOperational() bool {
	if o == nil || IsNil(o.Operational) {
		var ret bool
		return ret
	}
	return *o.Operational
}

// GetOperationalOk returns a tuple with the Operational field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetOperationalOk() (*bool, bool) {
	if o == nil || IsNil(o.Operational) {
		return nil, false
	}
	return o.Operational, true
}

// HasOperational returns a boolean if a field has been set.
func (o *System) HasOperational() bool {
	if o != nil && !IsNil(o.Operational) {
		return true
	}

	return false
}

// SetOperational gets a reference to the given bool and assigns it to the Operational field.
func (o *System) SetOperational(v bool) {
	o.Operational = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *System) GetOwner() SystemOwner {
	if o == nil || IsNil(o.Owner) {
		var ret SystemOwner
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetOwnerOk() (*SystemOwner, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *System) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given SystemOwner and assigns it to the Owner field.
func (o *System) SetOwner(v SystemOwner) {
	o.Owner = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *System) GetOwnerId() int32 {
	if o == nil || IsNil(o.OwnerId) {
		var ret int32
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetOwnerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *System) HasOwnerId() bool {
	if o != nil && !IsNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given int32 and assigns it to the OwnerId field.
func (o *System) SetOwnerId(v int32) {
	o.OwnerId = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *System) GetHost() SystemHost {
	if o == nil || IsNil(o.Host) {
		var ret SystemHost
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetHostOk() (*SystemHost, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *System) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given SystemHost and assigns it to the Host field.
func (o *System) SetHost(v SystemHost) {
	o.Host = &v
}

// GetHostId returns the HostId field value if set, zero value otherwise.
func (o *System) GetHostId() int32 {
	if o == nil || IsNil(o.HostId) {
		var ret int32
		return ret
	}
	return *o.HostId
}

// GetHostIdOk returns a tuple with the HostId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetHostIdOk() (*int32, bool) {
	if o == nil || IsNil(o.HostId) {
		return nil, false
	}
	return o.HostId, true
}

// HasHostId returns a boolean if a field has been set.
func (o *System) HasHostId() bool {
	if o != nil && !IsNil(o.HostId) {
		return true
	}

	return false
}

// SetHostId gets a reference to the given int32 and assigns it to the HostId field.
func (o *System) SetHostId(v int32) {
	o.HostId = &v
}

// GetInstallerName returns the InstallerName field value if set, zero value otherwise.
func (o *System) GetInstallerName() string {
	if o == nil || IsNil(o.InstallerName) {
		var ret string
		return ret
	}
	return *o.InstallerName
}

// GetInstallerNameOk returns a tuple with the InstallerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetInstallerNameOk() (*string, bool) {
	if o == nil || IsNil(o.InstallerName) {
		return nil, false
	}
	return o.InstallerName, true
}

// HasInstallerName returns a boolean if a field has been set.
func (o *System) HasInstallerName() bool {
	if o != nil && !IsNil(o.InstallerName) {
		return true
	}

	return false
}

// SetInstallerName gets a reference to the given string and assigns it to the InstallerName field.
func (o *System) SetInstallerName(v string) {
	o.InstallerName = &v
}

// GetInstallerId returns the InstallerId field value if set, zero value otherwise.
func (o *System) GetInstallerId() int32 {
	if o == nil || IsNil(o.InstallerId) {
		var ret int32
		return ret
	}
	return *o.InstallerId
}

// GetInstallerIdOk returns a tuple with the InstallerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetInstallerIdOk() (*int32, bool) {
	if o == nil || IsNil(o.InstallerId) {
		return nil, false
	}
	return o.InstallerId, true
}

// HasInstallerId returns a boolean if a field has been set.
func (o *System) HasInstallerId() bool {
	if o != nil && !IsNil(o.InstallerId) {
		return true
	}

	return false
}

// SetInstallerId gets a reference to the given int32 and assigns it to the InstallerId field.
func (o *System) SetInstallerId(v int32) {
	o.InstallerId = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *System) GetUri() string {
	if o == nil || IsNil(o.Uri) {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetUriOk() (*string, bool) {
	if o == nil || IsNil(o.Uri) {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *System) HasUri() bool {
	if o != nil && !IsNil(o.Uri) {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *System) SetUri(v string) {
	o.Uri = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *System) GetUpdatedAt() int64 {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret int64
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetUpdatedAtOk() (*int64, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *System) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int64 and assigns it to the UpdatedAt field.
func (o *System) SetUpdatedAt(v int64) {
	o.UpdatedAt = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *System) GetReference() string {
	if o == nil || IsNil(o.Reference) {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *System) HasReference() bool {
	if o != nil && !IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *System) SetReference(v string) {
	o.Reference = &v
}

// GetOtherReferences returns the OtherReferences field value if set, zero value otherwise.
func (o *System) GetOtherReferences() []string {
	if o == nil || IsNil(o.OtherReferences) {
		var ret []string
		return ret
	}
	return o.OtherReferences
}

// GetOtherReferencesOk returns a tuple with the OtherReferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetOtherReferencesOk() ([]string, bool) {
	if o == nil || IsNil(o.OtherReferences) {
		return nil, false
	}
	return o.OtherReferences, true
}

// HasOtherReferences returns a boolean if a field has been set.
func (o *System) HasOtherReferences() bool {
	if o != nil && !IsNil(o.OtherReferences) {
		return true
	}

	return false
}

// SetOtherReferences gets a reference to the given []string and assigns it to the OtherReferences field.
func (o *System) SetOtherReferences(v []string) {
	o.OtherReferences = v
}

// GetAllowPublicAccess returns the AllowPublicAccess field value if set, zero value otherwise.
func (o *System) GetAllowPublicAccess() bool {
	if o == nil || IsNil(o.AllowPublicAccess) {
		var ret bool
		return ret
	}
	return *o.AllowPublicAccess
}

// GetAllowPublicAccessOk returns a tuple with the AllowPublicAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetAllowPublicAccessOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowPublicAccess) {
		return nil, false
	}
	return o.AllowPublicAccess, true
}

// HasAllowPublicAccess returns a boolean if a field has been set.
func (o *System) HasAllowPublicAccess() bool {
	if o != nil && !IsNil(o.AllowPublicAccess) {
		return true
	}

	return false
}

// SetAllowPublicAccess gets a reference to the given bool and assigns it to the AllowPublicAccess field.
func (o *System) SetAllowPublicAccess(v bool) {
	o.AllowPublicAccess = &v
}

// GetInterconnectDate returns the InterconnectDate field value if set, zero value otherwise.
func (o *System) GetInterconnectDate() string {
	if o == nil || IsNil(o.InterconnectDate) {
		var ret string
		return ret
	}
	return *o.InterconnectDate
}

// GetInterconnectDateOk returns a tuple with the InterconnectDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetInterconnectDateOk() (*string, bool) {
	if o == nil || IsNil(o.InterconnectDate) {
		return nil, false
	}
	return o.InterconnectDate, true
}

// HasInterconnectDate returns a boolean if a field has been set.
func (o *System) HasInterconnectDate() bool {
	if o != nil && !IsNil(o.InterconnectDate) {
		return true
	}

	return false
}

// SetInterconnectDate gets a reference to the given string and assigns it to the InterconnectDate field.
func (o *System) SetInterconnectDate(v string) {
	o.InterconnectDate = &v
}

// GetInstallerSupportEmail returns the InstallerSupportEmail field value if set, zero value otherwise.
func (o *System) GetInstallerSupportEmail() string {
	if o == nil || IsNil(o.InstallerSupportEmail) {
		var ret string
		return ret
	}
	return *o.InstallerSupportEmail
}

// GetInstallerSupportEmailOk returns a tuple with the InstallerSupportEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetInstallerSupportEmailOk() (*string, bool) {
	if o == nil || IsNil(o.InstallerSupportEmail) {
		return nil, false
	}
	return o.InstallerSupportEmail, true
}

// HasInstallerSupportEmail returns a boolean if a field has been set.
func (o *System) HasInstallerSupportEmail() bool {
	if o != nil && !IsNil(o.InstallerSupportEmail) {
		return true
	}

	return false
}

// SetInstallerSupportEmail gets a reference to the given string and assigns it to the InstallerSupportEmail field.
func (o *System) SetInstallerSupportEmail(v string) {
	o.InstallerSupportEmail = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *System) GetSource() SystemSourceEnum {
	if o == nil || IsNil(o.Source) {
		var ret SystemSourceEnum
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetSourceOk() (*SystemSourceEnum, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *System) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given SystemSourceEnum and assigns it to the Source field.
func (o *System) SetSource(v SystemSourceEnum) {
	o.Source = &v
}

// GetArrayType returns the ArrayType field value if set, zero value otherwise.
func (o *System) GetArrayType() SystemArrayTypeEnum {
	if o == nil || IsNil(o.ArrayType) {
		var ret SystemArrayTypeEnum
		return ret
	}
	return *o.ArrayType
}

// GetArrayTypeOk returns a tuple with the ArrayType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetArrayTypeOk() (*SystemArrayTypeEnum, bool) {
	if o == nil || IsNil(o.ArrayType) {
		return nil, false
	}
	return o.ArrayType, true
}

// HasArrayType returns a boolean if a field has been set.
func (o *System) HasArrayType() bool {
	if o != nil && !IsNil(o.ArrayType) {
		return true
	}

	return false
}

// SetArrayType gets a reference to the given SystemArrayTypeEnum and assigns it to the ArrayType field.
func (o *System) SetArrayType(v SystemArrayTypeEnum) {
	o.ArrayType = &v
}

// GetAttachmentType returns the AttachmentType field value if set, zero value otherwise.
func (o *System) GetAttachmentType() SystemAttachmentTypeEnum {
	if o == nil || IsNil(o.AttachmentType) {
		var ret SystemAttachmentTypeEnum
		return ret
	}
	return *o.AttachmentType
}

// GetAttachmentTypeOk returns a tuple with the AttachmentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetAttachmentTypeOk() (*SystemAttachmentTypeEnum, bool) {
	if o == nil || IsNil(o.AttachmentType) {
		return nil, false
	}
	return o.AttachmentType, true
}

// HasAttachmentType returns a boolean if a field has been set.
func (o *System) HasAttachmentType() bool {
	if o != nil && !IsNil(o.AttachmentType) {
		return true
	}

	return false
}

// SetAttachmentType gets a reference to the given SystemAttachmentTypeEnum and assigns it to the AttachmentType field.
func (o *System) SetAttachmentType(v SystemAttachmentTypeEnum) {
	o.AttachmentType = &v
}

// GetEnsembleEnvoy returns the EnsembleEnvoy field value if set, zero value otherwise.
func (o *System) GetEnsembleEnvoy() string {
	if o == nil || IsNil(o.EnsembleEnvoy) {
		var ret string
		return ret
	}
	return *o.EnsembleEnvoy
}

// GetEnsembleEnvoyOk returns a tuple with the EnsembleEnvoy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetEnsembleEnvoyOk() (*string, bool) {
	if o == nil || IsNil(o.EnsembleEnvoy) {
		return nil, false
	}
	return o.EnsembleEnvoy, true
}

// HasEnsembleEnvoy returns a boolean if a field has been set.
func (o *System) HasEnsembleEnvoy() bool {
	if o != nil && !IsNil(o.EnsembleEnvoy) {
		return true
	}

	return false
}

// SetEnsembleEnvoy gets a reference to the given string and assigns it to the EnsembleEnvoy field.
func (o *System) SetEnsembleEnvoy(v string) {
	o.EnsembleEnvoy = &v
}

// GetProductionMode returns the ProductionMode field value if set, zero value otherwise.
func (o *System) GetProductionMode() SystemProductionModeEnum {
	if o == nil || IsNil(o.ProductionMode) {
		var ret SystemProductionModeEnum
		return ret
	}
	return *o.ProductionMode
}

// GetProductionModeOk returns a tuple with the ProductionMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetProductionModeOk() (*SystemProductionModeEnum, bool) {
	if o == nil || IsNil(o.ProductionMode) {
		return nil, false
	}
	return o.ProductionMode, true
}

// HasProductionMode returns a boolean if a field has been set.
func (o *System) HasProductionMode() bool {
	if o != nil && !IsNil(o.ProductionMode) {
		return true
	}

	return false
}

// SetProductionMode gets a reference to the given SystemProductionModeEnum and assigns it to the ProductionMode field.
func (o *System) SetProductionMode(v SystemProductionModeEnum) {
	o.ProductionMode = &v
}

// GetGridProfile returns the GridProfile field value if set, zero value otherwise.
func (o *System) GetGridProfile() string {
	if o == nil || IsNil(o.GridProfile) {
		var ret string
		return ret
	}
	return *o.GridProfile
}

// GetGridProfileOk returns a tuple with the GridProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetGridProfileOk() (*string, bool) {
	if o == nil || IsNil(o.GridProfile) {
		return nil, false
	}
	return o.GridProfile, true
}

// HasGridProfile returns a boolean if a field has been set.
func (o *System) HasGridProfile() bool {
	if o != nil && !IsNil(o.GridProfile) {
		return true
	}

	return false
}

// SetGridProfile gets a reference to the given string and assigns it to the GridProfile field.
func (o *System) SetGridProfile(v string) {
	o.GridProfile = &v
}

// GetRequestedProfile returns the RequestedProfile field value if set, zero value otherwise.
func (o *System) GetRequestedProfile() string {
	if o == nil || IsNil(o.RequestedProfile) {
		var ret string
		return ret
	}
	return *o.RequestedProfile
}

// GetRequestedProfileOk returns a tuple with the RequestedProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetRequestedProfileOk() (*string, bool) {
	if o == nil || IsNil(o.RequestedProfile) {
		return nil, false
	}
	return o.RequestedProfile, true
}

// HasRequestedProfile returns a boolean if a field has been set.
func (o *System) HasRequestedProfile() bool {
	if o != nil && !IsNil(o.RequestedProfile) {
		return true
	}

	return false
}

// SetRequestedProfile gets a reference to the given string and assigns it to the RequestedProfile field.
func (o *System) SetRequestedProfile(v string) {
	o.RequestedProfile = &v
}

// GetRequestedReportFreq returns the RequestedReportFreq field value if set, zero value otherwise.
func (o *System) GetRequestedReportFreq() string {
	if o == nil || IsNil(o.RequestedReportFreq) {
		var ret string
		return ret
	}
	return *o.RequestedReportFreq
}

// GetRequestedReportFreqOk returns a tuple with the RequestedReportFreq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetRequestedReportFreqOk() (*string, bool) {
	if o == nil || IsNil(o.RequestedReportFreq) {
		return nil, false
	}
	return o.RequestedReportFreq, true
}

// HasRequestedReportFreq returns a boolean if a field has been set.
func (o *System) HasRequestedReportFreq() bool {
	if o != nil && !IsNil(o.RequestedReportFreq) {
		return true
	}

	return false
}

// SetRequestedReportFreq gets a reference to the given string and assigns it to the RequestedReportFreq field.
func (o *System) SetRequestedReportFreq(v string) {
	o.RequestedReportFreq = &v
}

// GetVoltage returns the Voltage field value if set, zero value otherwise.
func (o *System) GetVoltage() string {
	if o == nil || IsNil(o.Voltage) {
		var ret string
		return ret
	}
	return *o.Voltage
}

// GetVoltageOk returns a tuple with the Voltage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetVoltageOk() (*string, bool) {
	if o == nil || IsNil(o.Voltage) {
		return nil, false
	}
	return o.Voltage, true
}

// HasVoltage returns a boolean if a field has been set.
func (o *System) HasVoltage() bool {
	if o != nil && !IsNil(o.Voltage) {
		return true
	}

	return false
}

// SetVoltage gets a reference to the given string and assigns it to the Voltage field.
func (o *System) SetVoltage(v string) {
	o.Voltage = &v
}

// GetEnvoySerialNumbers returns the EnvoySerialNumbers field value if set, zero value otherwise.
func (o *System) GetEnvoySerialNumbers() []string {
	if o == nil || IsNil(o.EnvoySerialNumbers) {
		var ret []string
		return ret
	}
	return o.EnvoySerialNumbers
}

// GetEnvoySerialNumbersOk returns a tuple with the EnvoySerialNumbers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetEnvoySerialNumbersOk() ([]string, bool) {
	if o == nil || IsNil(o.EnvoySerialNumbers) {
		return nil, false
	}
	return o.EnvoySerialNumbers, true
}

// HasEnvoySerialNumbers returns a boolean if a field has been set.
func (o *System) HasEnvoySerialNumbers() bool {
	if o != nil && !IsNil(o.EnvoySerialNumbers) {
		return true
	}

	return false
}

// SetEnvoySerialNumbers gets a reference to the given []string and assigns it to the EnvoySerialNumbers field.
func (o *System) SetEnvoySerialNumbers(v []string) {
	o.EnvoySerialNumbers = v
}

// GetExpectedEnvoyCount returns the ExpectedEnvoyCount field value if set, zero value otherwise.
func (o *System) GetExpectedEnvoyCount() int32 {
	if o == nil || IsNil(o.ExpectedEnvoyCount) {
		var ret int32
		return ret
	}
	return *o.ExpectedEnvoyCount
}

// GetExpectedEnvoyCountOk returns a tuple with the ExpectedEnvoyCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetExpectedEnvoyCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpectedEnvoyCount) {
		return nil, false
	}
	return o.ExpectedEnvoyCount, true
}

// HasExpectedEnvoyCount returns a boolean if a field has been set.
func (o *System) HasExpectedEnvoyCount() bool {
	if o != nil && !IsNil(o.ExpectedEnvoyCount) {
		return true
	}

	return false
}

// SetExpectedEnvoyCount gets a reference to the given int32 and assigns it to the ExpectedEnvoyCount field.
func (o *System) SetExpectedEnvoyCount(v int32) {
	o.ExpectedEnvoyCount = &v
}

// GetExpectedPcuCount returns the ExpectedPcuCount field value if set, zero value otherwise.
func (o *System) GetExpectedPcuCount() int32 {
	if o == nil || IsNil(o.ExpectedPcuCount) {
		var ret int32
		return ret
	}
	return *o.ExpectedPcuCount
}

// GetExpectedPcuCountOk returns a tuple with the ExpectedPcuCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetExpectedPcuCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpectedPcuCount) {
		return nil, false
	}
	return o.ExpectedPcuCount, true
}

// HasExpectedPcuCount returns a boolean if a field has been set.
func (o *System) HasExpectedPcuCount() bool {
	if o != nil && !IsNil(o.ExpectedPcuCount) {
		return true
	}

	return false
}

// SetExpectedPcuCount gets a reference to the given int32 and assigns it to the ExpectedPcuCount field.
func (o *System) SetExpectedPcuCount(v int32) {
	o.ExpectedPcuCount = &v
}

// GetExpectedNsrCount returns the ExpectedNsrCount field value if set, zero value otherwise.
func (o *System) GetExpectedNsrCount() int32 {
	if o == nil || IsNil(o.ExpectedNsrCount) {
		var ret int32
		return ret
	}
	return *o.ExpectedNsrCount
}

// GetExpectedNsrCountOk returns a tuple with the ExpectedNsrCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetExpectedNsrCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpectedNsrCount) {
		return nil, false
	}
	return o.ExpectedNsrCount, true
}

// HasExpectedNsrCount returns a boolean if a field has been set.
func (o *System) HasExpectedNsrCount() bool {
	if o != nil && !IsNil(o.ExpectedNsrCount) {
		return true
	}

	return false
}

// SetExpectedNsrCount gets a reference to the given int32 and assigns it to the ExpectedNsrCount field.
func (o *System) SetExpectedNsrCount(v int32) {
	o.ExpectedNsrCount = &v
}

// GetExpectedMeterCount returns the ExpectedMeterCount field value if set, zero value otherwise.
func (o *System) GetExpectedMeterCount() int32 {
	if o == nil || IsNil(o.ExpectedMeterCount) {
		var ret int32
		return ret
	}
	return *o.ExpectedMeterCount
}

// GetExpectedMeterCountOk returns a tuple with the ExpectedMeterCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetExpectedMeterCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpectedMeterCount) {
		return nil, false
	}
	return o.ExpectedMeterCount, true
}

// HasExpectedMeterCount returns a boolean if a field has been set.
func (o *System) HasExpectedMeterCount() bool {
	if o != nil && !IsNil(o.ExpectedMeterCount) {
		return true
	}

	return false
}

// SetExpectedMeterCount gets a reference to the given int32 and assigns it to the ExpectedMeterCount field.
func (o *System) SetExpectedMeterCount(v int32) {
	o.ExpectedMeterCount = &v
}

// GetExpectedEnchargeCount returns the ExpectedEnchargeCount field value if set, zero value otherwise.
func (o *System) GetExpectedEnchargeCount() int32 {
	if o == nil || IsNil(o.ExpectedEnchargeCount) {
		var ret int32
		return ret
	}
	return *o.ExpectedEnchargeCount
}

// GetExpectedEnchargeCountOk returns a tuple with the ExpectedEnchargeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetExpectedEnchargeCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpectedEnchargeCount) {
		return nil, false
	}
	return o.ExpectedEnchargeCount, true
}

// HasExpectedEnchargeCount returns a boolean if a field has been set.
func (o *System) HasExpectedEnchargeCount() bool {
	if o != nil && !IsNil(o.ExpectedEnchargeCount) {
		return true
	}

	return false
}

// SetExpectedEnchargeCount gets a reference to the given int32 and assigns it to the ExpectedEnchargeCount field.
func (o *System) SetExpectedEnchargeCount(v int32) {
	o.ExpectedEnchargeCount = &v
}

// GetExpectedEnpowerCount returns the ExpectedEnpowerCount field value if set, zero value otherwise.
func (o *System) GetExpectedEnpowerCount() int32 {
	if o == nil || IsNil(o.ExpectedEnpowerCount) {
		var ret int32
		return ret
	}
	return *o.ExpectedEnpowerCount
}

// GetExpectedEnpowerCountOk returns a tuple with the ExpectedEnpowerCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetExpectedEnpowerCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ExpectedEnpowerCount) {
		return nil, false
	}
	return o.ExpectedEnpowerCount, true
}

// HasExpectedEnpowerCount returns a boolean if a field has been set.
func (o *System) HasExpectedEnpowerCount() bool {
	if o != nil && !IsNil(o.ExpectedEnpowerCount) {
		return true
	}

	return false
}

// SetExpectedEnpowerCount gets a reference to the given int32 and assigns it to the ExpectedEnpowerCount field.
func (o *System) SetExpectedEnpowerCount(v int32) {
	o.ExpectedEnpowerCount = &v
}

// GetPvManufacturer returns the PvManufacturer field value if set, zero value otherwise.
func (o *System) GetPvManufacturer() int32 {
	if o == nil || IsNil(o.PvManufacturer) {
		var ret int32
		return ret
	}
	return *o.PvManufacturer
}

// GetPvManufacturerOk returns a tuple with the PvManufacturer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetPvManufacturerOk() (*int32, bool) {
	if o == nil || IsNil(o.PvManufacturer) {
		return nil, false
	}
	return o.PvManufacturer, true
}

// HasPvManufacturer returns a boolean if a field has been set.
func (o *System) HasPvManufacturer() bool {
	if o != nil && !IsNil(o.PvManufacturer) {
		return true
	}

	return false
}

// SetPvManufacturer gets a reference to the given int32 and assigns it to the PvManufacturer field.
func (o *System) SetPvManufacturer(v int32) {
	o.PvManufacturer = &v
}

// GetPvManufacturerName returns the PvManufacturerName field value if set, zero value otherwise.
func (o *System) GetPvManufacturerName() string {
	if o == nil || IsNil(o.PvManufacturerName) {
		var ret string
		return ret
	}
	return *o.PvManufacturerName
}

// GetPvManufacturerNameOk returns a tuple with the PvManufacturerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetPvManufacturerNameOk() (*string, bool) {
	if o == nil || IsNil(o.PvManufacturerName) {
		return nil, false
	}
	return o.PvManufacturerName, true
}

// HasPvManufacturerName returns a boolean if a field has been set.
func (o *System) HasPvManufacturerName() bool {
	if o != nil && !IsNil(o.PvManufacturerName) {
		return true
	}

	return false
}

// SetPvManufacturerName gets a reference to the given string and assigns it to the PvManufacturerName field.
func (o *System) SetPvManufacturerName(v string) {
	o.PvManufacturerName = &v
}

// GetPvModel returns the PvModel field value if set, zero value otherwise.
func (o *System) GetPvModel() int32 {
	if o == nil || IsNil(o.PvModel) {
		var ret int32
		return ret
	}
	return *o.PvModel
}

// GetPvModelOk returns a tuple with the PvModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetPvModelOk() (*int32, bool) {
	if o == nil || IsNil(o.PvModel) {
		return nil, false
	}
	return o.PvModel, true
}

// HasPvModel returns a boolean if a field has been set.
func (o *System) HasPvModel() bool {
	if o != nil && !IsNil(o.PvModel) {
		return true
	}

	return false
}

// SetPvModel gets a reference to the given int32 and assigns it to the PvModel field.
func (o *System) SetPvModel(v int32) {
	o.PvModel = &v
}

// GetPvModelName returns the PvModelName field value if set, zero value otherwise.
func (o *System) GetPvModelName() string {
	if o == nil || IsNil(o.PvModelName) {
		var ret string
		return ret
	}
	return *o.PvModelName
}

// GetPvModelNameOk returns a tuple with the PvModelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetPvModelNameOk() (*string, bool) {
	if o == nil || IsNil(o.PvModelName) {
		return nil, false
	}
	return o.PvModelName, true
}

// HasPvModelName returns a boolean if a field has been set.
func (o *System) HasPvModelName() bool {
	if o != nil && !IsNil(o.PvModelName) {
		return true
	}

	return false
}

// SetPvModelName gets a reference to the given string and assigns it to the PvModelName field.
func (o *System) SetPvModelName(v string) {
	o.PvModelName = &v
}

// GetPvModulePowerRating returns the PvModulePowerRating field value if set, zero value otherwise.
func (o *System) GetPvModulePowerRating() float32 {
	if o == nil || IsNil(o.PvModulePowerRating) {
		var ret float32
		return ret
	}
	return *o.PvModulePowerRating
}

// GetPvModulePowerRatingOk returns a tuple with the PvModulePowerRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetPvModulePowerRatingOk() (*float32, bool) {
	if o == nil || IsNil(o.PvModulePowerRating) {
		return nil, false
	}
	return o.PvModulePowerRating, true
}

// HasPvModulePowerRating returns a boolean if a field has been set.
func (o *System) HasPvModulePowerRating() bool {
	if o != nil && !IsNil(o.PvModulePowerRating) {
		return true
	}

	return false
}

// SetPvModulePowerRating gets a reference to the given float32 and assigns it to the PvModulePowerRating field.
func (o *System) SetPvModulePowerRating(v float32) {
	o.PvModulePowerRating = &v
}

// GetPvModuleType returns the PvModuleType field value if set, zero value otherwise.
func (o *System) GetPvModuleType() int32 {
	if o == nil || IsNil(o.PvModuleType) {
		var ret int32
		return ret
	}
	return *o.PvModuleType
}

// GetPvModuleTypeOk returns a tuple with the PvModuleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetPvModuleTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.PvModuleType) {
		return nil, false
	}
	return o.PvModuleType, true
}

// HasPvModuleType returns a boolean if a field has been set.
func (o *System) HasPvModuleType() bool {
	if o != nil && !IsNil(o.PvModuleType) {
		return true
	}

	return false
}

// SetPvModuleType gets a reference to the given int32 and assigns it to the PvModuleType field.
func (o *System) SetPvModuleType(v int32) {
	o.PvModuleType = &v
}

// GetEncharge returns the Encharge field value if set, zero value otherwise.
func (o *System) GetEncharge() []SystemEnchargeInner {
	if o == nil || IsNil(o.Encharge) {
		var ret []SystemEnchargeInner
		return ret
	}
	return o.Encharge
}

// GetEnchargeOk returns a tuple with the Encharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetEnchargeOk() ([]SystemEnchargeInner, bool) {
	if o == nil || IsNil(o.Encharge) {
		return nil, false
	}
	return o.Encharge, true
}

// HasEncharge returns a boolean if a field has been set.
func (o *System) HasEncharge() bool {
	if o != nil && !IsNil(o.Encharge) {
		return true
	}

	return false
}

// SetEncharge gets a reference to the given []SystemEnchargeInner and assigns it to the Encharge field.
func (o *System) SetEncharge(v []SystemEnchargeInner) {
	o.Encharge = v
}

// GetEnpower returns the Enpower field value if set, zero value otherwise.
func (o *System) GetEnpower() []SystemEnpowerInner {
	if o == nil || IsNil(o.Enpower) {
		var ret []SystemEnpowerInner
		return ret
	}
	return o.Enpower
}

// GetEnpowerOk returns a tuple with the Enpower field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetEnpowerOk() ([]SystemEnpowerInner, bool) {
	if o == nil || IsNil(o.Enpower) {
		return nil, false
	}
	return o.Enpower, true
}

// HasEnpower returns a boolean if a field has been set.
func (o *System) HasEnpower() bool {
	if o != nil && !IsNil(o.Enpower) {
		return true
	}

	return false
}

// SetEnpower gets a reference to the given []SystemEnpowerInner and assigns it to the Enpower field.
func (o *System) SetEnpower(v []SystemEnpowerInner) {
	o.Enpower = v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *System) GetAddress() Address {
	if o == nil || IsNil(o.Address) {
		var ret Address
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetAddressOk() (*Address, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *System) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given Address and assigns it to the Address field.
func (o *System) SetAddress(v Address) {
	o.Address = &v
}

func (o System) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o System) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SystemId) {
		toSerialize["system_id"] = o.SystemId
	}
	if !IsNil(o.SystemName) {
		toSerialize["system_name"] = o.SystemName
	}
	if !IsNil(o.SystemType) {
		toSerialize["system_type"] = o.SystemType
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Stage) {
		toSerialize["stage"] = o.Stage
	}
	if !IsNil(o.InternetConnection) {
		toSerialize["internet_connection"] = o.InternetConnection
	}
	if !IsNil(o.Lease) {
		toSerialize["lease"] = o.Lease
	}
	if !IsNil(o.Operational) {
		toSerialize["operational"] = o.Operational
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.OwnerId) {
		toSerialize["owner_id"] = o.OwnerId
	}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.HostId) {
		toSerialize["host_id"] = o.HostId
	}
	if !IsNil(o.InstallerName) {
		toSerialize["installer_name"] = o.InstallerName
	}
	if !IsNil(o.InstallerId) {
		toSerialize["installer_id"] = o.InstallerId
	}
	if !IsNil(o.Uri) {
		toSerialize["uri"] = o.Uri
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Reference) {
		toSerialize["reference"] = o.Reference
	}
	if !IsNil(o.OtherReferences) {
		toSerialize["other_references"] = o.OtherReferences
	}
	if !IsNil(o.AllowPublicAccess) {
		toSerialize["allow_public_access"] = o.AllowPublicAccess
	}
	if !IsNil(o.InterconnectDate) {
		toSerialize["interconnect_date"] = o.InterconnectDate
	}
	if !IsNil(o.InstallerSupportEmail) {
		toSerialize["installer_support_email"] = o.InstallerSupportEmail
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.ArrayType) {
		toSerialize["array_type"] = o.ArrayType
	}
	if !IsNil(o.AttachmentType) {
		toSerialize["attachment_type"] = o.AttachmentType
	}
	if !IsNil(o.EnsembleEnvoy) {
		toSerialize["ensemble_envoy"] = o.EnsembleEnvoy
	}
	if !IsNil(o.ProductionMode) {
		toSerialize["production_mode"] = o.ProductionMode
	}
	if !IsNil(o.GridProfile) {
		toSerialize["grid_profile"] = o.GridProfile
	}
	if !IsNil(o.RequestedProfile) {
		toSerialize["requested_profile"] = o.RequestedProfile
	}
	if !IsNil(o.RequestedReportFreq) {
		toSerialize["requested_report_freq"] = o.RequestedReportFreq
	}
	if !IsNil(o.Voltage) {
		toSerialize["voltage"] = o.Voltage
	}
	if !IsNil(o.EnvoySerialNumbers) {
		toSerialize["envoy_serial_numbers"] = o.EnvoySerialNumbers
	}
	if !IsNil(o.ExpectedEnvoyCount) {
		toSerialize["expected_envoy_count"] = o.ExpectedEnvoyCount
	}
	if !IsNil(o.ExpectedPcuCount) {
		toSerialize["expected_pcu_count"] = o.ExpectedPcuCount
	}
	if !IsNil(o.ExpectedNsrCount) {
		toSerialize["expected_nsr_count"] = o.ExpectedNsrCount
	}
	if !IsNil(o.ExpectedMeterCount) {
		toSerialize["expected_meter_count"] = o.ExpectedMeterCount
	}
	if !IsNil(o.ExpectedEnchargeCount) {
		toSerialize["expected_encharge_count"] = o.ExpectedEnchargeCount
	}
	if !IsNil(o.ExpectedEnpowerCount) {
		toSerialize["expected_enpower_count"] = o.ExpectedEnpowerCount
	}
	if !IsNil(o.PvManufacturer) {
		toSerialize["pv_manufacturer"] = o.PvManufacturer
	}
	if !IsNil(o.PvManufacturerName) {
		toSerialize["pv_manufacturer_name"] = o.PvManufacturerName
	}
	if !IsNil(o.PvModel) {
		toSerialize["pv_model"] = o.PvModel
	}
	if !IsNil(o.PvModelName) {
		toSerialize["pv_model_name"] = o.PvModelName
	}
	if !IsNil(o.PvModulePowerRating) {
		toSerialize["pv_module_power_rating"] = o.PvModulePowerRating
	}
	if !IsNil(o.PvModuleType) {
		toSerialize["pv_module_type"] = o.PvModuleType
	}
	if !IsNil(o.Encharge) {
		toSerialize["encharge"] = o.Encharge
	}
	if !IsNil(o.Enpower) {
		toSerialize["enpower"] = o.Enpower
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	return toSerialize, nil
}

type NullableSystem struct {
	value *System
	isSet bool
}

func (v NullableSystem) Get() *System {
	return v.value
}

func (v *NullableSystem) Set(val *System) {
	v.value = val
	v.isSet = true
}

func (v NullableSystem) IsSet() bool {
	return v.isSet
}

func (v *NullableSystem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystem(val *System) *NullableSystem {
	return &NullableSystem{value: val, isSet: true}
}

func (v NullableSystem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


