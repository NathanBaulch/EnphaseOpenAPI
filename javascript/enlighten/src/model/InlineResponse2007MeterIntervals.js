/**
 * The Enlighten Systems API
 * The Enlighten Systems API is a JSON-based API that provides access to performance data for a PV system. By using the Enlighten Systems API, you agree to the Enphase Energy API License Agreement.  Please note that the Enlighten Systems API does not provide performance data at a panel or microinverter level.
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InlineResponse2007Intervals1 from './InlineResponse2007Intervals1';

/**
 * The InlineResponse2007MeterIntervals model module.
 * @module model/InlineResponse2007MeterIntervals
 * @version 2.0
 */
class InlineResponse2007MeterIntervals {
    /**
     * Constructs a new <code>InlineResponse2007MeterIntervals</code>.
     * @alias module:model/InlineResponse2007MeterIntervals
     * @param meterSerialNumber {String} Serial number of the revenue grade meter.
     * @param envoySerialNumber {String} Serial number of the reporting envoy.
     * @param intervals {Array.<module:model/InlineResponse2007Intervals1>} Individual meter level interval.
     */
    constructor(meterSerialNumber, envoySerialNumber, intervals) { 
        
        InlineResponse2007MeterIntervals.initialize(this, meterSerialNumber, envoySerialNumber, intervals);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, meterSerialNumber, envoySerialNumber, intervals) { 
        obj['meter_serial_number'] = meterSerialNumber;
        obj['envoy_serial_number'] = envoySerialNumber;
        obj['intervals'] = intervals;
    }

    /**
     * Constructs a <code>InlineResponse2007MeterIntervals</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse2007MeterIntervals} obj Optional instance to populate.
     * @return {module:model/InlineResponse2007MeterIntervals} The populated <code>InlineResponse2007MeterIntervals</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse2007MeterIntervals();

            if (data.hasOwnProperty('meter_serial_number')) {
                obj['meter_serial_number'] = ApiClient.convertToType(data['meter_serial_number'], 'String');
            }
            if (data.hasOwnProperty('envoy_serial_number')) {
                obj['envoy_serial_number'] = ApiClient.convertToType(data['envoy_serial_number'], 'String');
            }
            if (data.hasOwnProperty('intervals')) {
                obj['intervals'] = ApiClient.convertToType(data['intervals'], [InlineResponse2007Intervals1]);
            }
        }
        return obj;
    }


}

/**
 * Serial number of the revenue grade meter.
 * @member {String} meter_serial_number
 */
InlineResponse2007MeterIntervals.prototype['meter_serial_number'] = undefined;

/**
 * Serial number of the reporting envoy.
 * @member {String} envoy_serial_number
 */
InlineResponse2007MeterIntervals.prototype['envoy_serial_number'] = undefined;

/**
 * Individual meter level interval.
 * @member {Array.<module:model/InlineResponse2007Intervals1>} intervals
 */
InlineResponse2007MeterIntervals.prototype['intervals'] = undefined;






export default InlineResponse2007MeterIntervals;

