/**
 * The Enlighten Systems API
 * The Enlighten Systems API is a JSON-based API that provides access to performance data for a PV system. By using the Enlighten Systems API, you agree to the Enphase Energy API License Agreement.  Please note that the Enlighten Systems API does not provide performance data at a panel or microinverter level.
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineResponse2001Envoys model module.
 * @module model/InlineResponse2001Envoys
 * @version 2.0
 */
class InlineResponse2001Envoys {
    /**
     * Constructs a new <code>InlineResponse2001Envoys</code>.
     * @alias module:model/InlineResponse2001Envoys
     * @param envoyId {Number} The Enlighten ID of the Envoy.
     * @param lastReportAt {Number} The last time this Envoy submitted a report, by default expressed in Unix epoch time. When the `datetime_format` query parameter is `iso8601`, `last_report_at` is in ISO 8601 format. If Enlighten has no record of a report from this Envoy, returns null.
     * @param name {String} The human-friendly name of this Envoy.
     * @param partNumber {String} The Enphase part number of this Envoy.
     * @param serialNumber {String} The serial number of this Envoy.
     * @param status {module:model/InlineResponse2001Envoys.StatusEnum} The current status of this Envoy. * `normal` - The Envoy is operating normally. * `comm` - The Envoy is not communicating to Enlighten.
     */
    constructor(envoyId, lastReportAt, name, partNumber, serialNumber, status) { 
        
        InlineResponse2001Envoys.initialize(this, envoyId, lastReportAt, name, partNumber, serialNumber, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, envoyId, lastReportAt, name, partNumber, serialNumber, status) { 
        obj['envoy_id'] = envoyId;
        obj['last_report_at'] = lastReportAt;
        obj['name'] = name;
        obj['part_number'] = partNumber;
        obj['serial_number'] = serialNumber;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>InlineResponse2001Envoys</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse2001Envoys} obj Optional instance to populate.
     * @return {module:model/InlineResponse2001Envoys} The populated <code>InlineResponse2001Envoys</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse2001Envoys();

            if (data.hasOwnProperty('envoy_id')) {
                obj['envoy_id'] = ApiClient.convertToType(data['envoy_id'], 'Number');
            }
            if (data.hasOwnProperty('last_report_at')) {
                obj['last_report_at'] = ApiClient.convertToType(data['last_report_at'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('part_number')) {
                obj['part_number'] = ApiClient.convertToType(data['part_number'], 'String');
            }
            if (data.hasOwnProperty('serial_number')) {
                obj['serial_number'] = ApiClient.convertToType(data['serial_number'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The Enlighten ID of the Envoy.
 * @member {Number} envoy_id
 */
InlineResponse2001Envoys.prototype['envoy_id'] = undefined;

/**
 * The last time this Envoy submitted a report, by default expressed in Unix epoch time. When the `datetime_format` query parameter is `iso8601`, `last_report_at` is in ISO 8601 format. If Enlighten has no record of a report from this Envoy, returns null.
 * @member {Number} last_report_at
 */
InlineResponse2001Envoys.prototype['last_report_at'] = undefined;

/**
 * The human-friendly name of this Envoy.
 * @member {String} name
 */
InlineResponse2001Envoys.prototype['name'] = undefined;

/**
 * The Enphase part number of this Envoy.
 * @member {String} part_number
 */
InlineResponse2001Envoys.prototype['part_number'] = undefined;

/**
 * The serial number of this Envoy.
 * @member {String} serial_number
 */
InlineResponse2001Envoys.prototype['serial_number'] = undefined;

/**
 * The current status of this Envoy. * `normal` - The Envoy is operating normally. * `comm` - The Envoy is not communicating to Enlighten.
 * @member {module:model/InlineResponse2001Envoys.StatusEnum} status
 */
InlineResponse2001Envoys.prototype['status'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
InlineResponse2001Envoys['StatusEnum'] = {

    /**
     * value: "normal"
     * @const
     */
    "normal": "normal",

    /**
     * value: "comm"
     * @const
     */
    "comm": "comm"
};



export default InlineResponse2001Envoys;

