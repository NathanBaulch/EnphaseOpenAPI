/**
 * The Enlighten Systems API
 * The Enlighten Systems API is a JSON-based API that provides access to performance data for a PV system. By using the Enlighten Systems API, you agree to the Enphase Energy API License Agreement.  Please note that the Enlighten Systems API does not provide performance data at a panel or microinverter level.
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SystemsSystems from './SystemsSystems';

/**
 * The Systems model module.
 * @module model/Systems
 * @version 2.0
 */
class Systems {
    /**
     * Constructs a new <code>Systems</code>.
     * @alias module:model/Systems
     * @param systems {Array.<module:model/SystemsSystems>} 
     * @param next {String} 
     */
    constructor(systems, next) { 
        
        Systems.initialize(this, systems, next);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, systems, next) { 
        obj['systems'] = systems;
        obj['next'] = next;
    }

    /**
     * Constructs a <code>Systems</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Systems} obj Optional instance to populate.
     * @return {module:model/Systems} The populated <code>Systems</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Systems();

            if (data.hasOwnProperty('systems')) {
                obj['systems'] = ApiClient.convertToType(data['systems'], [SystemsSystems]);
            }
            if (data.hasOwnProperty('next')) {
                obj['next'] = ApiClient.convertToType(data['next'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<module:model/SystemsSystems>} systems
 */
Systems.prototype['systems'] = undefined;

/**
 * @member {String} next
 */
Systems.prototype['next'] = undefined;






export default Systems;

