/**
 * The Enlighten Systems API
 * The Enlighten Systems API is a JSON-based API that provides access to performance data for a PV system. By using the Enlighten Systems API, you agree to the Enphase Energy API License Agreement.  Please note that the Enlighten Systems API does not provide performance data at a panel or microinverter level.
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InventoryMeters model module.
 * @module model/InventoryMeters
 * @version 2.0
 */
class InventoryMeters {
    /**
     * Constructs a new <code>InventoryMeters</code>.
     * @alias module:model/InventoryMeters
     * @param sn {String} 
     * @param manufacturer {String} 
     * @param model {String} 
     */
    constructor(sn, manufacturer, model) { 
        
        InventoryMeters.initialize(this, sn, manufacturer, model);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, sn, manufacturer, model) { 
        obj['sn'] = sn;
        obj['manufacturer'] = manufacturer;
        obj['model'] = model;
    }

    /**
     * Constructs a <code>InventoryMeters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InventoryMeters} obj Optional instance to populate.
     * @return {module:model/InventoryMeters} The populated <code>InventoryMeters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InventoryMeters();

            if (data.hasOwnProperty('sn')) {
                obj['sn'] = ApiClient.convertToType(data['sn'], 'String');
            }
            if (data.hasOwnProperty('manufacturer')) {
                obj['manufacturer'] = ApiClient.convertToType(data['manufacturer'], 'String');
            }
            if (data.hasOwnProperty('model')) {
                obj['model'] = ApiClient.convertToType(data['model'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} sn
 */
InventoryMeters.prototype['sn'] = undefined;

/**
 * @member {String} manufacturer
 */
InventoryMeters.prototype['manufacturer'] = undefined;

/**
 * @member {String} model
 */
InventoryMeters.prototype['model'] = undefined;






export default InventoryMeters;

