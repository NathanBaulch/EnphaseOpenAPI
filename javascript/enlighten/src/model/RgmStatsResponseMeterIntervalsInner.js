/**
 * The Enlighten Systems API
 * The Enlighten Systems API is a JSON-based API that provides access to performance data for a PV system. By using the Enlighten Systems API, you agree to the Enphase Energy API License Agreement.  Please note that the Enlighten Systems API does not provide performance data at a panel or microinverter level.
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RgmStatsResponseMeterIntervalsInnerIntervalsInner from './RgmStatsResponseMeterIntervalsInnerIntervalsInner';

/**
 * The RgmStatsResponseMeterIntervalsInner model module.
 * @module model/RgmStatsResponseMeterIntervalsInner
 * @version 2.0
 */
class RgmStatsResponseMeterIntervalsInner {
    /**
     * Constructs a new <code>RgmStatsResponseMeterIntervalsInner</code>.
     * @alias module:model/RgmStatsResponseMeterIntervalsInner
     * @param meterSerialNumber {String} Serial number of the revenue grade meter.
     * @param envoySerialNumber {String} Serial number of the reporting envoy.
     * @param intervals {Array.<module:model/RgmStatsResponseMeterIntervalsInnerIntervalsInner>} Individual meter level interval.
     */
    constructor(meterSerialNumber, envoySerialNumber, intervals) { 
        
        RgmStatsResponseMeterIntervalsInner.initialize(this, meterSerialNumber, envoySerialNumber, intervals);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, meterSerialNumber, envoySerialNumber, intervals) { 
        obj['meter_serial_number'] = meterSerialNumber;
        obj['envoy_serial_number'] = envoySerialNumber;
        obj['intervals'] = intervals;
    }

    /**
     * Constructs a <code>RgmStatsResponseMeterIntervalsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RgmStatsResponseMeterIntervalsInner} obj Optional instance to populate.
     * @return {module:model/RgmStatsResponseMeterIntervalsInner} The populated <code>RgmStatsResponseMeterIntervalsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RgmStatsResponseMeterIntervalsInner();

            if (data.hasOwnProperty('meter_serial_number')) {
                obj['meter_serial_number'] = ApiClient.convertToType(data['meter_serial_number'], 'String');
            }
            if (data.hasOwnProperty('envoy_serial_number')) {
                obj['envoy_serial_number'] = ApiClient.convertToType(data['envoy_serial_number'], 'String');
            }
            if (data.hasOwnProperty('intervals')) {
                obj['intervals'] = ApiClient.convertToType(data['intervals'], [RgmStatsResponseMeterIntervalsInnerIntervalsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RgmStatsResponseMeterIntervalsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RgmStatsResponseMeterIntervalsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RgmStatsResponseMeterIntervalsInner.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['meter_serial_number'] && !(typeof data['meter_serial_number'] === 'string' || data['meter_serial_number'] instanceof String)) {
            throw new Error("Expected the field `meter_serial_number` to be a primitive type in the JSON string but got " + data['meter_serial_number']);
        }
        // ensure the json data is a string
        if (data['envoy_serial_number'] && !(typeof data['envoy_serial_number'] === 'string' || data['envoy_serial_number'] instanceof String)) {
            throw new Error("Expected the field `envoy_serial_number` to be a primitive type in the JSON string but got " + data['envoy_serial_number']);
        }
        if (data['intervals']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['intervals'])) {
                throw new Error("Expected the field `intervals` to be an array in the JSON data but got " + data['intervals']);
            }
            // validate the optional field `intervals` (array)
            for (const item of data['intervals']) {
                RgmStatsResponseMeterIntervalsInnerIntervalsInner.validateJsonObject(item);
            };
        }

        return true;
    }


}

RgmStatsResponseMeterIntervalsInner.RequiredProperties = ["meter_serial_number", "envoy_serial_number", "intervals"];

/**
 * Serial number of the revenue grade meter.
 * @member {String} meter_serial_number
 */
RgmStatsResponseMeterIntervalsInner.prototype['meter_serial_number'] = undefined;

/**
 * Serial number of the reporting envoy.
 * @member {String} envoy_serial_number
 */
RgmStatsResponseMeterIntervalsInner.prototype['envoy_serial_number'] = undefined;

/**
 * Individual meter level interval.
 * @member {Array.<module:model/RgmStatsResponseMeterIntervalsInnerIntervalsInner>} intervals
 */
RgmStatsResponseMeterIntervalsInner.prototype['intervals'] = undefined;






export default RgmStatsResponseMeterIntervalsInner;

