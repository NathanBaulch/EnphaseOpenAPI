/**
 * The Enlighten Systems API
 * The Enlighten Systems API is a JSON-based API that provides access to performance data for a PV system. By using the Enlighten Systems API, you agree to the Enphase Energy API License Agreement.  Please note that the Enlighten Systems API does not provide performance data at a panel or microinverter level.
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InvertersSummaryByEnvoyOrSiteResponsePowerProduced model module.
 * @module model/InvertersSummaryByEnvoyOrSiteResponsePowerProduced
 * @version 2.0
 */
class InvertersSummaryByEnvoyOrSiteResponsePowerProduced {
    /**
     * Constructs a new <code>InvertersSummaryByEnvoyOrSiteResponsePowerProduced</code>.
     * @alias module:model/InvertersSummaryByEnvoyOrSiteResponsePowerProduced
     * @param value {Number} 
     * @param units {module:model/InvertersSummaryByEnvoyOrSiteResponsePowerProduced.UnitsEnum} 
     * @param precision {Number} 
     */
    constructor(value, units, precision) { 
        
        InvertersSummaryByEnvoyOrSiteResponsePowerProduced.initialize(this, value, units, precision);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, value, units, precision) { 
        obj['value'] = value;
        obj['units'] = units;
        obj['precision'] = precision;
    }

    /**
     * Constructs a <code>InvertersSummaryByEnvoyOrSiteResponsePowerProduced</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InvertersSummaryByEnvoyOrSiteResponsePowerProduced} obj Optional instance to populate.
     * @return {module:model/InvertersSummaryByEnvoyOrSiteResponsePowerProduced} The populated <code>InvertersSummaryByEnvoyOrSiteResponsePowerProduced</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InvertersSummaryByEnvoyOrSiteResponsePowerProduced();

            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
            if (data.hasOwnProperty('units')) {
                obj['units'] = ApiClient.convertToType(data['units'], 'String');
            }
            if (data.hasOwnProperty('precision')) {
                obj['precision'] = ApiClient.convertToType(data['precision'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} value
 */
InvertersSummaryByEnvoyOrSiteResponsePowerProduced.prototype['value'] = undefined;

/**
 * @member {module:model/InvertersSummaryByEnvoyOrSiteResponsePowerProduced.UnitsEnum} units
 */
InvertersSummaryByEnvoyOrSiteResponsePowerProduced.prototype['units'] = undefined;

/**
 * @member {Number} precision
 */
InvertersSummaryByEnvoyOrSiteResponsePowerProduced.prototype['precision'] = undefined;





/**
 * Allowed values for the <code>units</code> property.
 * @enum {String}
 * @readonly
 */
InvertersSummaryByEnvoyOrSiteResponsePowerProduced['UnitsEnum'] = {

    /**
     * value: "W"
     * @const
     */
    "W": "W"
};



export default InvertersSummaryByEnvoyOrSiteResponsePowerProduced;

