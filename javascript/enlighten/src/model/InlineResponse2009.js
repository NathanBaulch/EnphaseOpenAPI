/**
 * The Enlighten Systems API
 * The Enlighten Systems API is a JSON-based API that provides access to performance data for a PV system. By using the Enlighten Systems API, you agree to the Enphase Energy API License Agreement.  Please note that the Enlighten Systems API does not provide performance data at a panel or microinverter level.
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Meta from './Meta';

/**
 * The InlineResponse2009 model module.
 * @module model/InlineResponse2009
 * @version 2.0
 */
class InlineResponse2009 {
    /**
     * Constructs a new <code>InlineResponse2009</code>.
     * @alias module:model/InlineResponse2009
     * @param startDate {Date} When no `start_date` parameter is specified on the request, this is the `operational_date` of the system. May be null if system has never produced. When a `start_date` parameter is included in the request, it is included here in the response.
     * @param systemId {Number} The identifier of the system.
     * @param consumption {Array.<Number>} An array of consumption measurements, one for each day since consumption metering began, or one for each day of the requested period.
     * @param meta {module:model/Meta} 
     */
    constructor(startDate, systemId, consumption, meta) { 
        
        InlineResponse2009.initialize(this, startDate, systemId, consumption, meta);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, startDate, systemId, consumption, meta) { 
        obj['start_date'] = startDate;
        obj['system_id'] = systemId;
        obj['consumption'] = consumption;
        obj['meta'] = meta;
    }

    /**
     * Constructs a <code>InlineResponse2009</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse2009} obj Optional instance to populate.
     * @return {module:model/InlineResponse2009} The populated <code>InlineResponse2009</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse2009();

            if (data.hasOwnProperty('start_date')) {
                obj['start_date'] = ApiClient.convertToType(data['start_date'], 'Date');
            }
            if (data.hasOwnProperty('system_id')) {
                obj['system_id'] = ApiClient.convertToType(data['system_id'], 'Number');
            }
            if (data.hasOwnProperty('consumption')) {
                obj['consumption'] = ApiClient.convertToType(data['consumption'], ['Number']);
            }
            if (data.hasOwnProperty('meta')) {
                obj['meta'] = Meta.constructFromObject(data['meta']);
            }
        }
        return obj;
    }


}

/**
 * When no `start_date` parameter is specified on the request, this is the `operational_date` of the system. May be null if system has never produced. When a `start_date` parameter is included in the request, it is included here in the response.
 * @member {Date} start_date
 */
InlineResponse2009.prototype['start_date'] = undefined;

/**
 * The identifier of the system.
 * @member {Number} system_id
 */
InlineResponse2009.prototype['system_id'] = undefined;

/**
 * An array of consumption measurements, one for each day since consumption metering began, or one for each day of the requested period.
 * @member {Array.<Number>} consumption
 */
InlineResponse2009.prototype['consumption'] = undefined;

/**
 * @member {module:model/Meta} meta
 */
InlineResponse2009.prototype['meta'] = undefined;






export default InlineResponse2009;

