/**
 * The Enlighten Systems API
 * The Enlighten Systems API is a JSON-based API that provides access to performance data for a PV system. By using the Enlighten Systems API, you agree to the Enphase Energy API License Agreement.  Please note that the Enlighten Systems API does not provide performance data at a panel or microinverter level.
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineResponse2006MeterReadings model module.
 * @module model/InlineResponse2006MeterReadings
 * @version 2.0
 */
class InlineResponse2006MeterReadings {
    /**
     * Constructs a new <code>InlineResponse2006MeterReadings</code>.
     * @alias module:model/InlineResponse2006MeterReadings
     * @param serialNumber {String} The serial number of the meter.
     * @param value {Number} The odometer reading, in Watt-hours.
     * @param readAt {Number} The time when the reading was taken, always prior or equal to the requested `end_at`.
     */
    constructor(serialNumber, value, readAt) { 
        
        InlineResponse2006MeterReadings.initialize(this, serialNumber, value, readAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, serialNumber, value, readAt) { 
        obj['serial_number'] = serialNumber;
        obj['value'] = value;
        obj['read_at'] = readAt;
    }

    /**
     * Constructs a <code>InlineResponse2006MeterReadings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse2006MeterReadings} obj Optional instance to populate.
     * @return {module:model/InlineResponse2006MeterReadings} The populated <code>InlineResponse2006MeterReadings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse2006MeterReadings();

            if (data.hasOwnProperty('serial_number')) {
                obj['serial_number'] = ApiClient.convertToType(data['serial_number'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
            if (data.hasOwnProperty('read_at')) {
                obj['read_at'] = ApiClient.convertToType(data['read_at'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * The serial number of the meter.
 * @member {String} serial_number
 */
InlineResponse2006MeterReadings.prototype['serial_number'] = undefined;

/**
 * The odometer reading, in Watt-hours.
 * @member {Number} value
 */
InlineResponse2006MeterReadings.prototype['value'] = undefined;

/**
 * The time when the reading was taken, always prior or equal to the requested `end_at`.
 * @member {Number} read_at
 */
InlineResponse2006MeterReadings.prototype['read_at'] = undefined;






export default InlineResponse2006MeterReadings;

