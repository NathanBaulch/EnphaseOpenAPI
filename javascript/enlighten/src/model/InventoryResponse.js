/**
 * The Enlighten Systems API
 * The Enlighten Systems API is a JSON-based API that provides access to performance data for a PV system. By using the Enlighten Systems API, you agree to the Enphase Energy API License Agreement.  Please note that the Enlighten Systems API does not provide performance data at a panel or microinverter level.
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InventoryResponseEnvoys from './InventoryResponseEnvoys';
import InventoryResponseMeters from './InventoryResponseMeters';
import Meta from './Meta';

/**
 * The InventoryResponse model module.
 * @module model/InventoryResponse
 * @version 2.0
 */
class InventoryResponse {
    /**
     * Constructs a new <code>InventoryResponse</code>.
     * @alias module:model/InventoryResponse
     * @param systemId {Number} Enlighten ID for this system.
     * @param inverters {Array.<module:model/InventoryResponseEnvoys>} A list of inverters on this system, including serial and model numbers.
     * @param meters {Array.<module:model/InventoryResponseMeters>} A list of meters on this system, including serial number, manufacturer, and model number.
     * @param meta {module:model/Meta} 
     */
    constructor(systemId, inverters, meters, meta) { 
        
        InventoryResponse.initialize(this, systemId, inverters, meters, meta);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, systemId, inverters, meters, meta) { 
        obj['system_id'] = systemId;
        obj['inverters'] = inverters;
        obj['meters'] = meters;
        obj['meta'] = meta;
    }

    /**
     * Constructs a <code>InventoryResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InventoryResponse} obj Optional instance to populate.
     * @return {module:model/InventoryResponse} The populated <code>InventoryResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InventoryResponse();

            if (data.hasOwnProperty('system_id')) {
                obj['system_id'] = ApiClient.convertToType(data['system_id'], 'Number');
            }
            if (data.hasOwnProperty('envoys')) {
                obj['envoys'] = ApiClient.convertToType(data['envoys'], [InventoryResponseEnvoys]);
            }
            if (data.hasOwnProperty('inverters')) {
                obj['inverters'] = ApiClient.convertToType(data['inverters'], [InventoryResponseEnvoys]);
            }
            if (data.hasOwnProperty('meters')) {
                obj['meters'] = ApiClient.convertToType(data['meters'], [InventoryResponseMeters]);
            }
            if (data.hasOwnProperty('meta')) {
                obj['meta'] = Meta.constructFromObject(data['meta']);
            }
        }
        return obj;
    }


}

/**
 * Enlighten ID for this system.
 * @member {Number} system_id
 */
InventoryResponse.prototype['system_id'] = undefined;

/**
 * A list of Envoys on this system, including serial number.
 * @member {Array.<module:model/InventoryResponseEnvoys>} envoys
 */
InventoryResponse.prototype['envoys'] = undefined;

/**
 * A list of inverters on this system, including serial and model numbers.
 * @member {Array.<module:model/InventoryResponseEnvoys>} inverters
 */
InventoryResponse.prototype['inverters'] = undefined;

/**
 * A list of meters on this system, including serial number, manufacturer, and model number.
 * @member {Array.<module:model/InventoryResponseMeters>} meters
 */
InventoryResponse.prototype['meters'] = undefined;

/**
 * @member {module:model/Meta} meta
 */
InventoryResponse.prototype['meta'] = undefined;






export default InventoryResponse;

