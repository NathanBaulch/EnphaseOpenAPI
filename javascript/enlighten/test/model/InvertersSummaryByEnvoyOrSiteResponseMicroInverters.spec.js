/**
 * The Enlighten Systems API
 * The Enlighten Systems API is a JSON-based API that provides access to performance data for a PV system. By using the Enlighten Systems API, you agree to the Enphase Energy API License Agreement.  Please note that the Enlighten Systems API does not provide performance data at a panel or microinverter level.
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TheEnlightenSystemsApi);
  }
}(this, function(expect, TheEnlightenSystemsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TheEnlightenSystemsApi.InvertersSummaryByEnvoyOrSiteResponseMicroInverters();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InvertersSummaryByEnvoyOrSiteResponseMicroInverters', function() {
    it('should create an instance of InvertersSummaryByEnvoyOrSiteResponseMicroInverters', function() {
      // uncomment below and update the code to test InvertersSummaryByEnvoyOrSiteResponseMicroInverters
      //var instane = new TheEnlightenSystemsApi.InvertersSummaryByEnvoyOrSiteResponseMicroInverters();
      //expect(instance).to.be.a(TheEnlightenSystemsApi.InvertersSummaryByEnvoyOrSiteResponseMicroInverters);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new TheEnlightenSystemsApi.InvertersSummaryByEnvoyOrSiteResponseMicroInverters();
      //expect(instance).to.be();
    });

    it('should have the property model (base name: "model")', function() {
      // uncomment below and update the code to test the property model
      //var instance = new TheEnlightenSystemsApi.InvertersSummaryByEnvoyOrSiteResponseMicroInverters();
      //expect(instance).to.be();
    });

    it('should have the property partNumber (base name: "part_number")', function() {
      // uncomment below and update the code to test the property partNumber
      //var instance = new TheEnlightenSystemsApi.InvertersSummaryByEnvoyOrSiteResponseMicroInverters();
      //expect(instance).to.be();
    });

    it('should have the property serialNumber (base name: "serial_number")', function() {
      // uncomment below and update the code to test the property serialNumber
      //var instance = new TheEnlightenSystemsApi.InvertersSummaryByEnvoyOrSiteResponseMicroInverters();
      //expect(instance).to.be();
    });

    it('should have the property sku (base name: "sku")', function() {
      // uncomment below and update the code to test the property sku
      //var instance = new TheEnlightenSystemsApi.InvertersSummaryByEnvoyOrSiteResponseMicroInverters();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new TheEnlightenSystemsApi.InvertersSummaryByEnvoyOrSiteResponseMicroInverters();
      //expect(instance).to.be();
    });

    it('should have the property powerProduced (base name: "power_produced")', function() {
      // uncomment below and update the code to test the property powerProduced
      //var instance = new TheEnlightenSystemsApi.InvertersSummaryByEnvoyOrSiteResponseMicroInverters();
      //expect(instance).to.be();
    });

    it('should have the property procLoad (base name: "proc_load")', function() {
      // uncomment below and update the code to test the property procLoad
      //var instance = new TheEnlightenSystemsApi.InvertersSummaryByEnvoyOrSiteResponseMicroInverters();
      //expect(instance).to.be();
    });

    it('should have the property paramTable (base name: "param_table")', function() {
      // uncomment below and update the code to test the property paramTable
      //var instance = new TheEnlightenSystemsApi.InvertersSummaryByEnvoyOrSiteResponseMicroInverters();
      //expect(instance).to.be();
    });

    it('should have the property envoySerialNumber (base name: "envoy_serial_number")', function() {
      // uncomment below and update the code to test the property envoySerialNumber
      //var instance = new TheEnlightenSystemsApi.InvertersSummaryByEnvoyOrSiteResponseMicroInverters();
      //expect(instance).to.be();
    });

    it('should have the property energy (base name: "energy")', function() {
      // uncomment below and update the code to test the property energy
      //var instance = new TheEnlightenSystemsApi.InvertersSummaryByEnvoyOrSiteResponseMicroInverters();
      //expect(instance).to.be();
    });

    it('should have the property gridProfile (base name: "grid_profile")', function() {
      // uncomment below and update the code to test the property gridProfile
      //var instance = new TheEnlightenSystemsApi.InvertersSummaryByEnvoyOrSiteResponseMicroInverters();
      //expect(instance).to.be();
    });

    it('should have the property lastReportDate (base name: "last_report_date")', function() {
      // uncomment below and update the code to test the property lastReportDate
      //var instance = new TheEnlightenSystemsApi.InvertersSummaryByEnvoyOrSiteResponseMicroInverters();
      //expect(instance).to.be();
    });

  });

}));
