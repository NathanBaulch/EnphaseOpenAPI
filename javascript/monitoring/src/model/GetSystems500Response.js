/**
 * The Enphase Monitoring API
 * Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DataTemporarilyUnavailableError from './DataTemporarilyUnavailableError';
import InternalServerError from './InternalServerError';

/**
 * The GetSystems500Response model module.
 * @module model/GetSystems500Response
 * @version 4.0
 */
class GetSystems500Response {
    /**
     * Constructs a new <code>GetSystems500Response</code>.
     * @alias module:model/GetSystems500Response
     * @param {(module:model/DataTemporarilyUnavailableError|module:model/InternalServerError)} instance The actual instance to initialize GetSystems500Response.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "InternalServerError") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                InternalServerError.validateJSON(instance); // throw an exception if no match
                // create InternalServerError from JS object
                this.actualInstance = InternalServerError.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into InternalServerError
            errorMessages.push("Failed to construct InternalServerError: " + err)
        }

        try {
            if (typeof instance === "DataTemporarilyUnavailableError") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                DataTemporarilyUnavailableError.validateJSON(instance); // throw an exception if no match
                // create DataTemporarilyUnavailableError from JS object
                this.actualInstance = DataTemporarilyUnavailableError.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into DataTemporarilyUnavailableError
            errorMessages.push("Failed to construct DataTemporarilyUnavailableError: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `GetSystems500Response` with oneOf schemas DataTemporarilyUnavailableError, InternalServerError. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `GetSystems500Response` with oneOf schemas DataTemporarilyUnavailableError, InternalServerError. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>GetSystems500Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetSystems500Response} obj Optional instance to populate.
     * @return {module:model/GetSystems500Response} The populated <code>GetSystems500Response</code> instance.
     */
    static constructFromObject(data, obj) {
        return new GetSystems500Response(data);
    }

    /**
     * Gets the actual instance, which can be <code>DataTemporarilyUnavailableError</code>, <code>InternalServerError</code>.
     * @return {(module:model/DataTemporarilyUnavailableError|module:model/InternalServerError)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>DataTemporarilyUnavailableError</code>, <code>InternalServerError</code>.
     * @param {(module:model/DataTemporarilyUnavailableError|module:model/InternalServerError)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = GetSystems500Response.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of GetSystems500Response from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/GetSystems500Response} An instance of GetSystems500Response.
     */
    static fromJSON = function(json_string){
        return GetSystems500Response.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {String} reason
 */
GetSystems500Response.prototype['reason'] = undefined;

/**
 * @member {Array.<String>} message
 */
GetSystems500Response.prototype['message'] = undefined;

/**
 * Error code.
 * @member {Number} errorCode
 */
GetSystems500Response.prototype['errorCode'] = undefined;

/**
 * Error messages.
 * @member {Array.<String>} errorMessages
 */
GetSystems500Response.prototype['errorMessages'] = undefined;


GetSystems500Response.OneOf = ["DataTemporarilyUnavailableError", "InternalServerError"];

export default GetSystems500Response;

