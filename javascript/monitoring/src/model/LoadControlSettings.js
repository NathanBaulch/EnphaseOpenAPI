/**
 * The Enphase Monitoring API
 * Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LoadControlSettingsLoadControlDataInner from './LoadControlSettingsLoadControlDataInner';

/**
 * The LoadControlSettings model module.
 * @module model/LoadControlSettings
 * @version 4.0
 */
class LoadControlSettings {
    /**
     * Constructs a new <code>LoadControlSettings</code>.
     * @alias module:model/LoadControlSettings
     */
    constructor() { 
        
        LoadControlSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LoadControlSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LoadControlSettings} obj Optional instance to populate.
     * @return {module:model/LoadControlSettings} The populated <code>LoadControlSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LoadControlSettings();

            if (data.hasOwnProperty('system_id')) {
                obj['system_id'] = ApiClient.convertToType(data['system_id'], 'Number');
            }
            if (data.hasOwnProperty('load_control_data')) {
                obj['load_control_data'] = ApiClient.convertToType(data['load_control_data'], [LoadControlSettingsLoadControlDataInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LoadControlSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LoadControlSettings</code>.
     */
    static validateJSON(data) {
        if (data['load_control_data']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['load_control_data'])) {
                throw new Error("Expected the field `load_control_data` to be an array in the JSON data but got " + data['load_control_data']);
            }
            // validate the optional field `load_control_data` (array)
            for (const item of data['load_control_data']) {
                LoadControlSettingsLoadControlDataInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Number} system_id
 */
LoadControlSettings.prototype['system_id'] = undefined;

/**
 * Load control data for all the configured loads.
 * @member {Array.<module:model/LoadControlSettingsLoadControlDataInner>} load_control_data
 */
LoadControlSettings.prototype['load_control_data'] = undefined;






export default LoadControlSettings;

