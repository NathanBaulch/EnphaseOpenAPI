/**
 * The Enphase Monitoring API
 * Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import System from './System';

/**
 * The GetSystemsResponse model module.
 * @module model/GetSystemsResponse
 * @version 4.0
 */
class GetSystemsResponse {
    /**
     * Constructs a new <code>GetSystemsResponse</code>.
     * @alias module:model/GetSystemsResponse
     */
    constructor() { 
        
        GetSystemsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetSystemsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetSystemsResponse} obj Optional instance to populate.
     * @return {module:model/GetSystemsResponse} The populated <code>GetSystemsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetSystemsResponse();

            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
            if (data.hasOwnProperty('current_page')) {
                obj['current_page'] = ApiClient.convertToType(data['current_page'], 'Number');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], 'String');
            }
            if (data.hasOwnProperty('systems')) {
                obj['systems'] = ApiClient.convertToType(data['systems'], [System]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetSystemsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetSystemsResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['items'] && !(typeof data['items'] === 'string' || data['items'] instanceof String)) {
            throw new Error("Expected the field `items` to be a primitive type in the JSON string but got " + data['items']);
        }
        if (data['systems']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['systems'])) {
                throw new Error("Expected the field `systems` to be an array in the JSON data but got " + data['systems']);
            }
            // validate the optional field `systems` (array)
            for (const item of data['systems']) {
                System.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Total number of systems.
 * @member {Number} total
 */
GetSystemsResponse.prototype['total'] = undefined;

/**
 * Number of the current page fetched.
 * @member {Number} current_page
 */
GetSystemsResponse.prototype['current_page'] = undefined;

/**
 * Maximum number of records shown per page. Default=10, Min=1, Max=100.
 * @member {Number} size
 */
GetSystemsResponse.prototype['size'] = undefined;

/**
 * Total number of systems actually returned for the current page.
 * @member {Number} count
 */
GetSystemsResponse.prototype['count'] = undefined;

/**
 * Named key of the list data. In this endpoint, it is systems.
 * @member {String} items
 */
GetSystemsResponse.prototype['items'] = undefined;

/**
 * List of systems.
 * @member {Array.<module:model/System>} systems
 */
GetSystemsResponse.prototype['systems'] = undefined;






export default GetSystemsResponse;

