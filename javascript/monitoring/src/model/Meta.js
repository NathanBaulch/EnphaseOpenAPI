/**
 * The Enphase Monitoring API
 * Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SystemStatusEnum from './SystemStatusEnum';

/**
 * The Meta model module.
 * @module model/Meta
 * @version 4.0
 */
class Meta {
    /**
     * Constructs a new <code>Meta</code>.
     * Information about the system such as its status, when it became operational and last reported to Envoy.
     * @alias module:model/Meta
     */
    constructor() { 
        
        Meta.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Meta</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Meta} obj Optional instance to populate.
     * @return {module:model/Meta} The populated <code>Meta</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Meta();

            if (data.hasOwnProperty('status')) {
                obj['status'] = SystemStatusEnum.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('last_report_at')) {
                obj['last_report_at'] = ApiClient.convertToType(data['last_report_at'], 'Number');
            }
            if (data.hasOwnProperty('last_energy_at')) {
                obj['last_energy_at'] = ApiClient.convertToType(data['last_energy_at'], 'Number');
            }
            if (data.hasOwnProperty('operational_at')) {
                obj['operational_at'] = ApiClient.convertToType(data['operational_at'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Meta</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Meta</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {module:model/SystemStatusEnum} status
 */
Meta.prototype['status'] = undefined;

/**
 * Timestamp (in epoch format) at which the system's Envoy last submitted a report.
 * @member {Number} last_report_at
 */
Meta.prototype['last_report_at'] = undefined;

/**
 * Timestamp (in epoch format) at which the system's produced energy was last reported. Even if the last produced energy is 0, its timestamp will be returned.
 * @member {Number} last_energy_at
 */
Meta.prototype['last_energy_at'] = undefined;

/**
 * Timestamp (in epoch format) at which this system became operational. Corresponds to the system's interconnect time, if one is specified. Otherwise, it is the system's first reported interval end time.
 * @member {Number} operational_at
 */
Meta.prototype['operational_at'] = undefined;






export default Meta;

