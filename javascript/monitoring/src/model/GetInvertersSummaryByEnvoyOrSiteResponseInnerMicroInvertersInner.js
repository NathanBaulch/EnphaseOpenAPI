/**
 * The Enphase Monitoring API
 * Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInnerEnergy from './GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInnerEnergy';
import GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInnerPowerProduced from './GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInnerPowerProduced';

/**
 * The GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner model module.
 * @module model/GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner
 * @version 4.0
 */
class GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner {
    /**
     * Constructs a new <code>GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner</code>.
     * @alias module:model/GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner
     */
    constructor() { 
        
        GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner} obj Optional instance to populate.
     * @return {module:model/GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner} The populated <code>GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('serial_number')) {
                obj['serial_number'] = ApiClient.convertToType(data['serial_number'], 'String');
            }
            if (data.hasOwnProperty('model')) {
                obj['model'] = ApiClient.convertToType(data['model'], 'String');
            }
            if (data.hasOwnProperty('part_number')) {
                obj['part_number'] = ApiClient.convertToType(data['part_number'], 'String');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('power_produced')) {
                obj['power_produced'] = GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInnerPowerProduced.constructFromObject(data['power_produced']);
            }
            if (data.hasOwnProperty('proc_load')) {
                obj['proc_load'] = ApiClient.convertToType(data['proc_load'], 'String');
            }
            if (data.hasOwnProperty('param_table')) {
                obj['param_table'] = ApiClient.convertToType(data['param_table'], 'String');
            }
            if (data.hasOwnProperty('envoy_serial_number')) {
                obj['envoy_serial_number'] = ApiClient.convertToType(data['envoy_serial_number'], 'String');
            }
            if (data.hasOwnProperty('energy')) {
                obj['energy'] = GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInnerEnergy.constructFromObject(data['energy']);
            }
            if (data.hasOwnProperty('grid_profile')) {
                obj['grid_profile'] = ApiClient.convertToType(data['grid_profile'], 'String');
            }
            if (data.hasOwnProperty('last_report_date')) {
                obj['last_report_date'] = ApiClient.convertToType(data['last_report_date'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['serial_number'] && !(typeof data['serial_number'] === 'string' || data['serial_number'] instanceof String)) {
            throw new Error("Expected the field `serial_number` to be a primitive type in the JSON string but got " + data['serial_number']);
        }
        // ensure the json data is a string
        if (data['model'] && !(typeof data['model'] === 'string' || data['model'] instanceof String)) {
            throw new Error("Expected the field `model` to be a primitive type in the JSON string but got " + data['model']);
        }
        // ensure the json data is a string
        if (data['part_number'] && !(typeof data['part_number'] === 'string' || data['part_number'] instanceof String)) {
            throw new Error("Expected the field `part_number` to be a primitive type in the JSON string but got " + data['part_number']);
        }
        // ensure the json data is a string
        if (data['sku'] && !(typeof data['sku'] === 'string' || data['sku'] instanceof String)) {
            throw new Error("Expected the field `sku` to be a primitive type in the JSON string but got " + data['sku']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // validate the optional field `power_produced`
        if (data['power_produced']) { // data not null
          GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInnerPowerProduced.validateJSON(data['power_produced']);
        }
        // ensure the json data is a string
        if (data['proc_load'] && !(typeof data['proc_load'] === 'string' || data['proc_load'] instanceof String)) {
            throw new Error("Expected the field `proc_load` to be a primitive type in the JSON string but got " + data['proc_load']);
        }
        // ensure the json data is a string
        if (data['param_table'] && !(typeof data['param_table'] === 'string' || data['param_table'] instanceof String)) {
            throw new Error("Expected the field `param_table` to be a primitive type in the JSON string but got " + data['param_table']);
        }
        // ensure the json data is a string
        if (data['envoy_serial_number'] && !(typeof data['envoy_serial_number'] === 'string' || data['envoy_serial_number'] instanceof String)) {
            throw new Error("Expected the field `envoy_serial_number` to be a primitive type in the JSON string but got " + data['envoy_serial_number']);
        }
        // validate the optional field `energy`
        if (data['energy']) { // data not null
          GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInnerEnergy.validateJSON(data['energy']);
        }
        // ensure the json data is a string
        if (data['grid_profile'] && !(typeof data['grid_profile'] === 'string' || data['grid_profile'] instanceof String)) {
            throw new Error("Expected the field `grid_profile` to be a primitive type in the JSON string but got " + data['grid_profile']);
        }

        return true;
    }


}



/**
 * Numeric ID of the microinverter.
 * @member {Number} id
 */
GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner.prototype['id'] = undefined;

/**
 * Serial number of the microinverter.
 * @member {String} serial_number
 */
GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner.prototype['serial_number'] = undefined;

/**
 * Microinverter model type.
 * @member {String} model
 */
GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner.prototype['model'] = undefined;

/**
 * Microinverter part number.
 * @member {String} part_number
 */
GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner.prototype['part_number'] = undefined;

/**
 * SKU of the microinverter.
 * @member {String} sku
 */
GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner.prototype['sku'] = undefined;

/**
 * Current status of the micro inverter.
 * @member {String} status
 */
GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner.prototype['status'] = undefined;

/**
 * @member {module:model/GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInnerPowerProduced} power_produced
 */
GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner.prototype['power_produced'] = undefined;

/**
 * Processor load.
 * @member {String} proc_load
 */
GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner.prototype['proc_load'] = undefined;

/**
 * Parameter table.
 * @member {String} param_table
 */
GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner.prototype['param_table'] = undefined;

/**
 * Envoy serial number of the system that the micro reports to.
 * @member {String} envoy_serial_number
 */
GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner.prototype['envoy_serial_number'] = undefined;

/**
 * @member {module:model/GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInnerEnergy} energy
 */
GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner.prototype['energy'] = undefined;

/**
 * Grid profile ID.
 * @member {String} grid_profile
 */
GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner.prototype['grid_profile'] = undefined;

/**
 * Date on which the microinverter last reported.
 * @member {Date} last_report_date
 */
GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner.prototype['last_report_date'] = undefined;






export default GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInner;

