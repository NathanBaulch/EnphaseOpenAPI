/**
 * The Enphase Monitoring API
 * Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetSystemProductionMeterReadingsResponseMeterReadingsInner model module.
 * @module model/GetSystemProductionMeterReadingsResponseMeterReadingsInner
 * @version 4.0
 */
class GetSystemProductionMeterReadingsResponseMeterReadingsInner {
    /**
     * Constructs a new <code>GetSystemProductionMeterReadingsResponseMeterReadingsInner</code>.
     * @alias module:model/GetSystemProductionMeterReadingsResponseMeterReadingsInner
     */
    constructor() { 
        
        GetSystemProductionMeterReadingsResponseMeterReadingsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetSystemProductionMeterReadingsResponseMeterReadingsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetSystemProductionMeterReadingsResponseMeterReadingsInner} obj Optional instance to populate.
     * @return {module:model/GetSystemProductionMeterReadingsResponseMeterReadingsInner} The populated <code>GetSystemProductionMeterReadingsResponseMeterReadingsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetSystemProductionMeterReadingsResponseMeterReadingsInner();

            if (data.hasOwnProperty('serial_number')) {
                obj['serial_number'] = ApiClient.convertToType(data['serial_number'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
            if (data.hasOwnProperty('read_at')) {
                obj['read_at'] = ApiClient.convertToType(data['read_at'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetSystemProductionMeterReadingsResponseMeterReadingsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetSystemProductionMeterReadingsResponseMeterReadingsInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['serial_number'] && !(typeof data['serial_number'] === 'string' || data['serial_number'] instanceof String)) {
            throw new Error("Expected the field `serial_number` to be a primitive type in the JSON string but got " + data['serial_number']);
        }

        return true;
    }


}



/**
 * Serial number of the meter.
 * @member {String} serial_number
 */
GetSystemProductionMeterReadingsResponseMeterReadingsInner.prototype['serial_number'] = undefined;

/**
 * Meter reading, in Wh.
 * @member {Number} value
 */
GetSystemProductionMeterReadingsResponseMeterReadingsInner.prototype['value'] = undefined;

/**
 * Time when the reading was taken, always prior or equal to the requested 'end_at'.
 * @member {Number} read_at
 */
GetSystemProductionMeterReadingsResponseMeterReadingsInner.prototype['read_at'] = undefined;






export default GetSystemProductionMeterReadingsResponseMeterReadingsInner;

