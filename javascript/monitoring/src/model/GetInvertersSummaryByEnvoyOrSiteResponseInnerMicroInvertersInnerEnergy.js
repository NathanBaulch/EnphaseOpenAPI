/**
 * The Enphase Monitoring API
 * Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInnerEnergy model module.
 * @module model/GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInnerEnergy
 * @version 4.0
 */
class GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInnerEnergy {
    /**
     * Constructs a new <code>GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInnerEnergy</code>.
     * @alias module:model/GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInnerEnergy
     */
    constructor() { 
        
        GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInnerEnergy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInnerEnergy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInnerEnergy} obj Optional instance to populate.
     * @return {module:model/GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInnerEnergy} The populated <code>GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInnerEnergy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInnerEnergy();

            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
            if (data.hasOwnProperty('units')) {
                obj['units'] = ApiClient.convertToType(data['units'], 'String');
            }
            if (data.hasOwnProperty('precision')) {
                obj['precision'] = ApiClient.convertToType(data['precision'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInnerEnergy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInnerEnergy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['units'] && !(typeof data['units'] === 'string' || data['units'] instanceof String)) {
            throw new Error("Expected the field `units` to be a primitive type in the JSON string but got " + data['units']);
        }

        return true;
    }


}



/**
 * Lifetime energy produced by the microinverter.
 * @member {Number} value
 */
GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInnerEnergy.prototype['value'] = undefined;

/**
 * Energy units.
 * @member {String} units
 */
GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInnerEnergy.prototype['units'] = undefined;

/**
 * @member {Number} precision
 */
GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInnerEnergy.prototype['precision'] = undefined;






export default GetInvertersSummaryByEnvoyOrSiteResponseInnerMicroInvertersInnerEnergy;

