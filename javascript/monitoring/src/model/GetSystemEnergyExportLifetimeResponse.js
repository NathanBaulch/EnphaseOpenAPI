/**
 * The Enphase Monitoring API
 * Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Meta from './Meta';

/**
 * The GetSystemEnergyExportLifetimeResponse model module.
 * @module model/GetSystemEnergyExportLifetimeResponse
 * @version 4.0
 */
class GetSystemEnergyExportLifetimeResponse {
    /**
     * Constructs a new <code>GetSystemEnergyExportLifetimeResponse</code>.
     * @alias module:model/GetSystemEnergyExportLifetimeResponse
     */
    constructor() { 
        
        GetSystemEnergyExportLifetimeResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetSystemEnergyExportLifetimeResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetSystemEnergyExportLifetimeResponse} obj Optional instance to populate.
     * @return {module:model/GetSystemEnergyExportLifetimeResponse} The populated <code>GetSystemEnergyExportLifetimeResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetSystemEnergyExportLifetimeResponse();

            if (data.hasOwnProperty('system_id')) {
                obj['system_id'] = ApiClient.convertToType(data['system_id'], 'Number');
            }
            if (data.hasOwnProperty('start_date')) {
                obj['start_date'] = ApiClient.convertToType(data['start_date'], 'Date');
            }
            if (data.hasOwnProperty('export')) {
                obj['export'] = ApiClient.convertToType(data['export'], ['Number']);
            }
            if (data.hasOwnProperty('meta')) {
                obj['meta'] = Meta.constructFromObject(data['meta']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetSystemEnergyExportLifetimeResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetSystemEnergyExportLifetimeResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['export'])) {
            throw new Error("Expected the field `export` to be an array in the JSON data but got " + data['export']);
        }
        // validate the optional field `meta`
        if (data['meta']) { // data not null
          Meta.validateJSON(data['meta']);
        }

        return true;
    }


}



/**
 * Unique numeric ID of the system.
 * @member {Number} system_id
 */
GetSystemEnergyExportLifetimeResponse.prototype['system_id'] = undefined;

/**
 * When no start_date parameter is specified on the request, defaults to the operational_date of the system. May be null if system has never produced. When a start_date parameter is included in the request, the same is included in the response.
 * @member {Date} start_date
 */
GetSystemEnergyExportLifetimeResponse.prototype['start_date'] = undefined;

/**
 * An array of export measurements, one for each day since the system started producing, or one for each day of the requested period. If the system has never produced energy, the array may be empty.
 * @member {Array.<Number>} export
 */
GetSystemEnergyExportLifetimeResponse.prototype['export'] = undefined;

/**
 * @member {module:model/Meta} meta
 */
GetSystemEnergyExportLifetimeResponse.prototype['meta'] = undefined;






export default GetSystemEnergyExportLifetimeResponse;

