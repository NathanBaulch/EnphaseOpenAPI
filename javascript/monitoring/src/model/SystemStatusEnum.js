/**
 * The Enphase Monitoring API
 * Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
/**
* Enum class SystemStatusEnum.
* @enum {}
* @readonly
*/
export default class SystemStatusEnum {
    
        /**
         * value: "deactivated"
         * @const
         */
        "deactivated" = "deactivated";

    
        /**
         * value: "normal"
         * @const
         */
        "normal" = "normal";

    
        /**
         * value: "comm"
         * @const
         */
        "comm" = "comm";

    
        /**
         * value: "micro"
         * @const
         */
        "micro" = "micro";

    
        /**
         * value: "power"
         * @const
         */
        "power" = "power";

    
        /**
         * value: "meter"
         * @const
         */
        "meter" = "meter";

    
        /**
         * value: "meter_issue"
         * @const
         */
        "meter_issue" = "meter_issue";

    
        /**
         * value: "battery"
         * @const
         */
        "battery" = "battery";

    
        /**
         * value: "storage_idle"
         * @const
         */
        "storage_idle" = "storage_idle";

    
        /**
         * value: "encharge"
         * @const
         */
        "encharge" = "encharge";

    
        /**
         * value: "encharge_issue"
         * @const
         */
        "encharge_issue" = "encharge_issue";

    
        /**
         * value: "enpower"
         * @const
         */
        "enpower" = "enpower";

    
        /**
         * value: "enpower_issue"
         * @const
         */
        "enpower_issue" = "enpower_issue";

    
        /**
         * value: "retired"
         * @const
         */
        "retired" = "retired";

    
        /**
         * value: "not_monitored"
         * @const
         */
        "not_monitored" = "not_monitored";

    
        /**
         * value: "unused"
         * @const
         */
        "unused" = "unused";

    
        /**
         * value: "disabled"
         * @const
         */
        "disabled" = "disabled";

    
        /**
         * value: "debug"
         * @const
         */
        "debug" = "debug";

    
        /**
         * value: "info"
         * @const
         */
        "info" = "info";

    
        /**
         * value: "monitored"
         * @const
         */
        "monitored" = "monitored";

    
        /**
         * value: "muted"
         * @const
         */
        "muted" = "muted";

    
        /**
         * value: "warning"
         * @const
         */
        "warning" = "warning";

    
        /**
         * value: "error"
         * @const
         */
        "error" = "error";

    
        /**
         * value: "no_data"
         * @const
         */
        "no_data" = "no_data";

    
        /**
         * value: "rma"
         * @const
         */
        "rma" = "rma";

    
        /**
         * value: "unknown"
         * @const
         */
        "unknown" = "unknown";

    
        /**
         * value: "nsr"
         * @const
         */
        "nsr" = "nsr";

    
        /**
         * value: "any"
         * @const
         */
        "any" = "any";

    
        /**
         * value: "data_upload"
         * @const
         */
        "data_upload" = "data_upload";

    
        /**
         * value: "on_grid"
         * @const
         */
        "on_grid" = "on_grid";

    
        /**
         * value: "off_grid"
         * @const
         */
        "off_grid" = "off_grid";

    
        /**
         * value: "grid_unknown"
         * @const
         */
        "grid_unknown" = "grid_unknown";

    

    /**
    * Returns a <code>SystemStatusEnum</code> enum value from a Javascript object name.
    * @param {Object} data The plain JavaScript object containing the name of the enum value.
    * @return {module:model/SystemStatusEnum} The enum <code>SystemStatusEnum</code> value.
    */
    static constructFromObject(object) {
        return object;
    }
}

