/**
 * The Enphase Monitoring API
 * Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetSystemProductionMeterReadingsResponseMeterReadingsInner from './GetSystemProductionMeterReadingsResponseMeterReadingsInner';
import Meta from './Meta';

/**
 * The GetSystemProductionMeterReadingsResponse model module.
 * @module model/GetSystemProductionMeterReadingsResponse
 * @version 4.0
 */
class GetSystemProductionMeterReadingsResponse {
    /**
     * Constructs a new <code>GetSystemProductionMeterReadingsResponse</code>.
     * @alias module:model/GetSystemProductionMeterReadingsResponse
     */
    constructor() { 
        
        GetSystemProductionMeterReadingsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetSystemProductionMeterReadingsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetSystemProductionMeterReadingsResponse} obj Optional instance to populate.
     * @return {module:model/GetSystemProductionMeterReadingsResponse} The populated <code>GetSystemProductionMeterReadingsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetSystemProductionMeterReadingsResponse();

            if (data.hasOwnProperty('system_id')) {
                obj['system_id'] = ApiClient.convertToType(data['system_id'], 'Number');
            }
            if (data.hasOwnProperty('meter_readings')) {
                obj['meter_readings'] = ApiClient.convertToType(data['meter_readings'], [GetSystemProductionMeterReadingsResponseMeterReadingsInner]);
            }
            if (data.hasOwnProperty('meta')) {
                obj['meta'] = Meta.constructFromObject(data['meta']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetSystemProductionMeterReadingsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetSystemProductionMeterReadingsResponse</code>.
     */
    static validateJSON(data) {
        if (data['meter_readings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['meter_readings'])) {
                throw new Error("Expected the field `meter_readings` to be an array in the JSON data but got " + data['meter_readings']);
            }
            // validate the optional field `meter_readings` (array)
            for (const item of data['meter_readings']) {
                GetSystemProductionMeterReadingsResponseMeterReadingsInner.validateJSON(item);
            };
        }
        // validate the optional field `meta`
        if (data['meta']) { // data not null
          Meta.validateJSON(data['meta']);
        }

        return true;
    }


}



/**
 * System ID.
 * @member {Number} system_id
 */
GetSystemProductionMeterReadingsResponse.prototype['system_id'] = undefined;

/**
 * Production meter readings.
 * @member {Array.<module:model/GetSystemProductionMeterReadingsResponseMeterReadingsInner>} meter_readings
 */
GetSystemProductionMeterReadingsResponse.prototype['meter_readings'] = undefined;

/**
 * @member {module:model/Meta} meta
 */
GetSystemProductionMeterReadingsResponse.prototype['meta'] = undefined;






export default GetSystemProductionMeterReadingsResponse;

