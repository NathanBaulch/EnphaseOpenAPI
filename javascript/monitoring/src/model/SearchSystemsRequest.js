/**
 * The Enphase Monitoring API
 * Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SearchSystemsRequestSystem from './SearchSystemsRequestSystem';
import SystemSortByEnum from './SystemSortByEnum';

/**
 * The SearchSystemsRequest model module.
 * @module model/SearchSystemsRequest
 * @version 4.0
 */
class SearchSystemsRequest {
    /**
     * Constructs a new <code>SearchSystemsRequest</code>.
     * @alias module:model/SearchSystemsRequest
     * @param system {module:model/SearchSystemsRequestSystem} 
     */
    constructor(system) { 
        
        SearchSystemsRequest.initialize(this, system);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, system) { 
        obj['system'] = system;
    }

    /**
     * Constructs a <code>SearchSystemsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchSystemsRequest} obj Optional instance to populate.
     * @return {module:model/SearchSystemsRequest} The populated <code>SearchSystemsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchSystemsRequest();

            if (data.hasOwnProperty('system')) {
                obj['system'] = SearchSystemsRequestSystem.constructFromObject(data['system']);
            }
            if (data.hasOwnProperty('sort_by')) {
                obj['sort_by'] = SystemSortByEnum.constructFromObject(data['sort_by']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchSystemsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchSystemsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SearchSystemsRequest.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `system`
        if (data['system']) { // data not null
          SearchSystemsRequestSystem.validateJSON(data['system']);
        }

        return true;
    }


}

SearchSystemsRequest.RequiredProperties = ["system"];

/**
 * @member {module:model/SearchSystemsRequestSystem} system
 */
SearchSystemsRequest.prototype['system'] = undefined;

/**
 * @member {module:model/SystemSortByEnum} sort_by
 */
SearchSystemsRequest.prototype['sort_by'] = undefined;






export default SearchSystemsRequest;

