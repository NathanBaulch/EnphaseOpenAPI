/**
 * The Enphase Monitoring API
 * Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetSystemRgmStatsResponseIntervalsInner from './GetSystemRgmStatsResponseIntervalsInner';
import GetSystemRgmStatsResponseMeterIntervalsInner from './GetSystemRgmStatsResponseMeterIntervalsInner';
import Meta from './Meta';

/**
 * The GetSystemRgmStatsResponse model module.
 * @module model/GetSystemRgmStatsResponse
 * @version 4.0
 */
class GetSystemRgmStatsResponse {
    /**
     * Constructs a new <code>GetSystemRgmStatsResponse</code>.
     * @alias module:model/GetSystemRgmStatsResponse
     */
    constructor() { 
        
        GetSystemRgmStatsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetSystemRgmStatsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetSystemRgmStatsResponse} obj Optional instance to populate.
     * @return {module:model/GetSystemRgmStatsResponse} The populated <code>GetSystemRgmStatsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetSystemRgmStatsResponse();

            if (data.hasOwnProperty('system_id')) {
                obj['system_id'] = ApiClient.convertToType(data['system_id'], 'Number');
            }
            if (data.hasOwnProperty('total_devices')) {
                obj['total_devices'] = ApiClient.convertToType(data['total_devices'], 'Number');
            }
            if (data.hasOwnProperty('meta')) {
                obj['meta'] = Meta.constructFromObject(data['meta']);
            }
            if (data.hasOwnProperty('intervals')) {
                obj['intervals'] = ApiClient.convertToType(data['intervals'], [GetSystemRgmStatsResponseIntervalsInner]);
            }
            if (data.hasOwnProperty('meter_intervals')) {
                obj['meter_intervals'] = ApiClient.convertToType(data['meter_intervals'], [GetSystemRgmStatsResponseMeterIntervalsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetSystemRgmStatsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetSystemRgmStatsResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `meta`
        if (data['meta']) { // data not null
          Meta.validateJSON(data['meta']);
        }
        if (data['intervals']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['intervals'])) {
                throw new Error("Expected the field `intervals` to be an array in the JSON data but got " + data['intervals']);
            }
            // validate the optional field `intervals` (array)
            for (const item of data['intervals']) {
                GetSystemRgmStatsResponseIntervalsInner.validateJSON(item);
            };
        }
        if (data['meter_intervals']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['meter_intervals'])) {
                throw new Error("Expected the field `meter_intervals` to be an array in the JSON data but got " + data['meter_intervals']);
            }
            // validate the optional field `meter_intervals` (array)
            for (const item of data['meter_intervals']) {
                GetSystemRgmStatsResponseMeterIntervalsInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * System ID.
 * @member {Number} system_id
 */
GetSystemRgmStatsResponse.prototype['system_id'] = undefined;

/**
 * Number of active revenue-grade meters for this system.
 * @member {Number} total_devices
 */
GetSystemRgmStatsResponse.prototype['total_devices'] = undefined;

/**
 * @member {module:model/Meta} meta
 */
GetSystemRgmStatsResponse.prototype['meta'] = undefined;

/**
 * A list of intervals between the requested start and end times.
 * @member {Array.<module:model/GetSystemRgmStatsResponseIntervalsInner>} intervals
 */
GetSystemRgmStatsResponse.prototype['intervals'] = undefined;

/**
 * A list of intervals of a meter between the requested start and end times.
 * @member {Array.<module:model/GetSystemRgmStatsResponseMeterIntervalsInner>} meter_intervals
 */
GetSystemRgmStatsResponse.prototype['meter_intervals'] = undefined;






export default GetSystemRgmStatsResponse;

