/**
 * The Enphase Monitoring API
 * Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateSystemBatterySettingsRequest model module.
 * @module model/UpdateSystemBatterySettingsRequest
 * @version 4.0
 */
class UpdateSystemBatterySettingsRequest {
    /**
     * Constructs a new <code>UpdateSystemBatterySettingsRequest</code>.
     * @alias module:model/UpdateSystemBatterySettingsRequest
     */
    constructor() { 
        
        UpdateSystemBatterySettingsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateSystemBatterySettingsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateSystemBatterySettingsRequest} obj Optional instance to populate.
     * @return {module:model/UpdateSystemBatterySettingsRequest} The populated <code>UpdateSystemBatterySettingsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateSystemBatterySettingsRequest();

            if (data.hasOwnProperty('battery_mode')) {
                obj['battery_mode'] = ApiClient.convertToType(data['battery_mode'], 'String');
            }
            if (data.hasOwnProperty('reserve_soc')) {
                obj['reserve_soc'] = ApiClient.convertToType(data['reserve_soc'], 'Number');
            }
            if (data.hasOwnProperty('energy_independence')) {
                obj['energy_independence'] = ApiClient.convertToType(data['energy_independence'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateSystemBatterySettingsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateSystemBatterySettingsRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['battery_mode'] && !(typeof data['battery_mode'] === 'string' || data['battery_mode'] instanceof String)) {
            throw new Error("Expected the field `battery_mode` to be a primitive type in the JSON string but got " + data['battery_mode']);
        }
        // ensure the json data is a string
        if (data['energy_independence'] && !(typeof data['energy_independence'] === 'string' || data['energy_independence'] instanceof String)) {
            throw new Error("Expected the field `energy_independence` to be a primitive type in the JSON string but got " + data['energy_independence']);
        }

        return true;
    }


}



/**
 * To update battery mode of the system (case sensitive). Available values are Savings Mode, Self-consumption, Full Backup.
 * @member {String} battery_mode
 */
UpdateSystemBatterySettingsRequest.prototype['battery_mode'] = undefined;

/**
 * Reserve soc for the current mode. Cannot be less than vls.
 * @member {Number} reserve_soc
 */
UpdateSystemBatterySettingsRequest.prototype['reserve_soc'] = undefined;

/**
 * Energy independence after peak hours \"enabled\"/\"disabled\". Enabled: Battery will discharge to save money during peak hours when electricity rates are high. Once that is done, energy independence is prioritized. This will increase the energy self-sufficiency until the reserve soc is hit. Battery will charge from solar in the morning to get ready for the next period. Disabled: Battery will discharge only during peak hours when electricity rates are high. During other times, battery will be idle or will charge from solar in the morning to get ready for the next period.
 * @member {String} energy_independence
 */
UpdateSystemBatterySettingsRequest.prototype['energy_independence'] = undefined;






export default UpdateSystemBatterySettingsRequest;

