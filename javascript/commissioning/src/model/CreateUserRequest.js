/**
 * The Enphase Commissioning API
 * Commissioning API can be used to create and update activations on a site, manage companies and users, update Tariff, etc.
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateUserRequest model module.
 * @module model/CreateUserRequest
 * @version 4.0
 */
class CreateUserRequest {
    /**
     * Constructs a new <code>CreateUserRequest</code>.
     * @alias module:model/CreateUserRequest
     * @param email {String} Email address of the user. Must be unique within Enlighten. Required.
     * @param firstName {String} User's first name. Required.
     * @param lastName {String} User's last name. Required.
     */
    constructor(email, firstName, lastName) { 
        
        CreateUserRequest.initialize(this, email, firstName, lastName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, email, firstName, lastName) { 
        obj['email'] = email;
        obj['first_name'] = firstName;
        obj['last_name'] = lastName;
    }

    /**
     * Constructs a <code>CreateUserRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateUserRequest} obj Optional instance to populate.
     * @return {module:model/CreateUserRequest} The populated <code>CreateUserRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateUserRequest();

            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('enlighten_emails')) {
                obj['enlighten_emails'] = ApiClient.convertToType(data['enlighten_emails'], 'Boolean');
            }
            if (data.hasOwnProperty('enlighten_view')) {
                obj['enlighten_view'] = ApiClient.convertToType(data['enlighten_view'], 'String');
            }
            if (data.hasOwnProperty('first_name')) {
                obj['first_name'] = ApiClient.convertToType(data['first_name'], 'String');
            }
            if (data.hasOwnProperty('last_name')) {
                obj['last_name'] = ApiClient.convertToType(data['last_name'], 'String');
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
            }
            if (data.hasOwnProperty('company_id')) {
                obj['company_id'] = ApiClient.convertToType(data['company_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateUserRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateUserRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateUserRequest.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['enlighten_view'] && !(typeof data['enlighten_view'] === 'string' || data['enlighten_view'] instanceof String)) {
            throw new Error("Expected the field `enlighten_view` to be a primitive type in the JSON string but got " + data['enlighten_view']);
        }
        // ensure the json data is a string
        if (data['first_name'] && !(typeof data['first_name'] === 'string' || data['first_name'] instanceof String)) {
            throw new Error("Expected the field `first_name` to be a primitive type in the JSON string but got " + data['first_name']);
        }
        // ensure the json data is a string
        if (data['last_name'] && !(typeof data['last_name'] === 'string' || data['last_name'] instanceof String)) {
            throw new Error("Expected the field `last_name` to be a primitive type in the JSON string but got " + data['last_name']);
        }
        // ensure the json data is a string
        if (data['phone'] && !(typeof data['phone'] === 'string' || data['phone'] instanceof String)) {
            throw new Error("Expected the field `phone` to be a primitive type in the JSON string but got " + data['phone']);
        }

        return true;
    }


}

CreateUserRequest.RequiredProperties = ["email", "first_name", "last_name"];

/**
 * Email address of the user. Must be unique within Enlighten. Required.
 * @member {String} email
 */
CreateUserRequest.prototype['email'] = undefined;

/**
 * Whether the user receives automated emails from Enlighten. Default false.
 * @member {Boolean} enlighten_emails
 */
CreateUserRequest.prototype['enlighten_emails'] = undefined;

/**
 * Which view of Enlighten the user has. Options 'my' for MyEnlighten, 'manager' for Enlighten Manager. Default 'my'. Users who do not belong to companies should be set to 'my'. You must have an agreement with Enphase Energy to set a user to 'manager'. Company ID is required when enlighten_view is 'manager'.
 * @member {String} enlighten_view
 */
CreateUserRequest.prototype['enlighten_view'] = undefined;

/**
 * User's first name. Required.
 * @member {String} first_name
 */
CreateUserRequest.prototype['first_name'] = undefined;

/**
 * User's last name. Required.
 * @member {String} last_name
 */
CreateUserRequest.prototype['last_name'] = undefined;

/**
 * Telephone number of the user. Optional.
 * @member {String} phone
 */
CreateUserRequest.prototype['phone'] = undefined;

/**
 * Enlighten-generated ID of the company to which the user belongs, if any.
 * @member {Number} company_id
 */
CreateUserRequest.prototype['company_id'] = undefined;






export default CreateUserRequest;

