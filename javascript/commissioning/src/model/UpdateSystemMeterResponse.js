/**
 * The Enphase Commissioning API
 * Commissioning API can be used to create and update activations on a site, manage companies and users, update Tariff, etc.
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateSystemMeterResponse model module.
 * @module model/UpdateSystemMeterResponse
 * @version 4.0
 */
class UpdateSystemMeterResponse {
    /**
     * Constructs a new <code>UpdateSystemMeterResponse</code>.
     * @alias module:model/UpdateSystemMeterResponse
     */
    constructor() { 
        
        UpdateSystemMeterResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateSystemMeterResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateSystemMeterResponse} obj Optional instance to populate.
     * @return {module:model/UpdateSystemMeterResponse} The populated <code>UpdateSystemMeterResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateSystemMeterResponse();

            if (data.hasOwnProperty('serial_number')) {
                obj['serial_number'] = ApiClient.convertToType(data['serial_number'], 'String');
            }
            if (data.hasOwnProperty('manufacturer')) {
                obj['manufacturer'] = ApiClient.convertToType(data['manufacturer'], 'String');
            }
            if (data.hasOwnProperty('model')) {
                obj['model'] = ApiClient.convertToType(data['model'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('operational_date')) {
                obj['operational_date'] = ApiClient.convertToType(data['operational_date'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateSystemMeterResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateSystemMeterResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['serial_number'] && !(typeof data['serial_number'] === 'string' || data['serial_number'] instanceof String)) {
            throw new Error("Expected the field `serial_number` to be a primitive type in the JSON string but got " + data['serial_number']);
        }
        // ensure the json data is a string
        if (data['manufacturer'] && !(typeof data['manufacturer'] === 'string' || data['manufacturer'] instanceof String)) {
            throw new Error("Expected the field `manufacturer` to be a primitive type in the JSON string but got " + data['manufacturer']);
        }
        // ensure the json data is a string
        if (data['model'] && !(typeof data['model'] === 'string' || data['model'] instanceof String)) {
            throw new Error("Expected the field `model` to be a primitive type in the JSON string but got " + data['model']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Meter serial number.
 * @member {String} serial_number
 */
UpdateSystemMeterResponse.prototype['serial_number'] = undefined;

/**
 * Name of the manufacturer.
 * @member {String} manufacturer
 */
UpdateSystemMeterResponse.prototype['manufacturer'] = undefined;

/**
 * Model.
 * @member {String} model
 */
UpdateSystemMeterResponse.prototype['model'] = undefined;

/**
 * Meter type.
 * @member {String} type
 */
UpdateSystemMeterResponse.prototype['type'] = undefined;

/**
 * Operational date.
 * @member {Date} operational_date
 */
UpdateSystemMeterResponse.prototype['operational_date'] = undefined;






export default UpdateSystemMeterResponse;

