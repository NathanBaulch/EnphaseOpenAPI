/**
 * The Enphase Commissioning API
 * Commissioning API can be used to create and update activations on a site, manage companies and users, update Tariff, etc.
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetCompanyUsersResponseUsersInner from './GetCompanyUsersResponseUsersInner';

/**
 * The GetCompanyUsersResponse model module.
 * @module model/GetCompanyUsersResponse
 * @version 4.0
 */
class GetCompanyUsersResponse {
    /**
     * Constructs a new <code>GetCompanyUsersResponse</code>.
     * @alias module:model/GetCompanyUsersResponse
     */
    constructor() { 
        
        GetCompanyUsersResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetCompanyUsersResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetCompanyUsersResponse} obj Optional instance to populate.
     * @return {module:model/GetCompanyUsersResponse} The populated <code>GetCompanyUsersResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetCompanyUsersResponse();

            if (data.hasOwnProperty('users')) {
                obj['users'] = ApiClient.convertToType(data['users'], [GetCompanyUsersResponseUsersInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetCompanyUsersResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetCompanyUsersResponse</code>.
     */
    static validateJSON(data) {
        if (data['users']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['users'])) {
                throw new Error("Expected the field `users` to be an array in the JSON data but got " + data['users']);
            }
            // validate the optional field `users` (array)
            for (const item of data['users']) {
                GetCompanyUsersResponseUsersInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Zero or more users. Each user is an array. In that first value of the array is Enlighten ID of the user. System-generated. Second value of the array is the email address of the user.
 * @member {Array.<module:model/GetCompanyUsersResponseUsersInner>} users
 */
GetCompanyUsersResponse.prototype['users'] = undefined;






export default GetCompanyUsersResponse;

