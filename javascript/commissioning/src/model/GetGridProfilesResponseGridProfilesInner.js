/**
 * The Enphase Commissioning API
 * Commissioning API can be used to create and update activations on a site, manage companies and users, update Tariff, etc.
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetGridProfilesResponseGridProfilesInner model module.
 * @module model/GetGridProfilesResponseGridProfilesInner
 * @version 4.0
 */
class GetGridProfilesResponseGridProfilesInner {
    /**
     * Constructs a new <code>GetGridProfilesResponseGridProfilesInner</code>.
     * @alias module:model/GetGridProfilesResponseGridProfilesInner
     */
    constructor() { 
        
        GetGridProfilesResponseGridProfilesInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetGridProfilesResponseGridProfilesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetGridProfilesResponseGridProfilesInner} obj Optional instance to populate.
     * @return {module:model/GetGridProfilesResponseGridProfilesInner} The populated <code>GetGridProfilesResponseGridProfilesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetGridProfilesResponseGridProfilesInner();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('profile_id')) {
                obj['profile_id'] = ApiClient.convertToType(data['profile_id'], 'String');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('updated')) {
                obj['updated'] = ApiClient.convertToType(data['updated'], 'Date');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('envoy_type')) {
                obj['envoy_type'] = ApiClient.convertToType(data['envoy_type'], 'String');
            }
            if (data.hasOwnProperty('countries')) {
                obj['countries'] = ApiClient.convertToType(data['countries'], ['String']);
            }
            if (data.hasOwnProperty('states')) {
                obj['states'] = ApiClient.convertToType(data['states'], ['String']);
            }
            if (data.hasOwnProperty('state_names')) {
                obj['state_names'] = ApiClient.convertToType(data['state_names'], ['String']);
            }
            if (data.hasOwnProperty('ensemble_1_compatible')) {
                obj['ensemble_1_compatible'] = ApiClient.convertToType(data['ensemble_1_compatible'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetGridProfilesResponseGridProfilesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetGridProfilesResponseGridProfilesInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['profile_id'] && !(typeof data['profile_id'] === 'string' || data['profile_id'] instanceof String)) {
            throw new Error("Expected the field `profile_id` to be a primitive type in the JSON string but got " + data['profile_id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }
        // ensure the json data is a string
        if (data['envoy_type'] && !(typeof data['envoy_type'] === 'string' || data['envoy_type'] instanceof String)) {
            throw new Error("Expected the field `envoy_type` to be a primitive type in the JSON string but got " + data['envoy_type']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['countries'])) {
            throw new Error("Expected the field `countries` to be an array in the JSON data but got " + data['countries']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['states'])) {
            throw new Error("Expected the field `states` to be an array in the JSON data but got " + data['states']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['state_names'])) {
            throw new Error("Expected the field `state_names` to be an array in the JSON data but got " + data['state_names']);
        }

        return true;
    }


}



/**
 * Grid profile ID. System-generated.
 * @member {String} id
 */
GetGridProfilesResponseGridProfilesInner.prototype['id'] = undefined;

/**
 * @member {String} profile_id
 */
GetGridProfilesResponseGridProfilesInner.prototype['profile_id'] = undefined;

/**
 * Profile created date and time.
 * @member {Date} created
 */
GetGridProfilesResponseGridProfilesInner.prototype['created'] = undefined;

/**
 * Profile last updated date and time.
 * @member {Date} updated
 */
GetGridProfilesResponseGridProfilesInner.prototype['updated'] = undefined;

/**
 * Profile name.
 * @member {String} name
 */
GetGridProfilesResponseGridProfilesInner.prototype['name'] = undefined;

/**
 * Profile description.
 * @member {String} description
 */
GetGridProfilesResponseGridProfilesInner.prototype['description'] = undefined;

/**
 * Profile version.
 * @member {String} version
 */
GetGridProfilesResponseGridProfilesInner.prototype['version'] = undefined;

/**
 * Envoy type.
 * @member {String} envoy_type
 */
GetGridProfilesResponseGridProfilesInner.prototype['envoy_type'] = undefined;

/**
 * Name of the Countries.
 * @member {Array.<String>} countries
 */
GetGridProfilesResponseGridProfilesInner.prototype['countries'] = undefined;

/**
 * States code.
 * @member {Array.<String>} states
 */
GetGridProfilesResponseGridProfilesInner.prototype['states'] = undefined;

/**
 * Name of the states.
 * @member {Array.<String>} state_names
 */
GetGridProfilesResponseGridProfilesInner.prototype['state_names'] = undefined;

/**
 * @member {Boolean} ensemble_1_compatible
 */
GetGridProfilesResponseGridProfilesInner.prototype['ensemble_1_compatible'] = undefined;






export default GetGridProfilesResponseGridProfilesInner;

