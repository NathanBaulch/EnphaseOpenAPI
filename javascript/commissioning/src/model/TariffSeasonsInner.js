/**
 * The Enphase Commissioning API
 * Commissioning API can be used to create and update activations on a site, manage companies and users, update Tariff, etc.
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TariffSeasonsInnerDaysInner from './TariffSeasonsInnerDaysInner';

/**
 * The TariffSeasonsInner model module.
 * @module model/TariffSeasonsInner
 * @version 4.0
 */
class TariffSeasonsInner {
    /**
     * Constructs a new <code>TariffSeasonsInner</code>.
     * @alias module:model/TariffSeasonsInner
     */
    constructor() { 
        
        TariffSeasonsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TariffSeasonsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TariffSeasonsInner} obj Optional instance to populate.
     * @return {module:model/TariffSeasonsInner} The populated <code>TariffSeasonsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TariffSeasonsInner();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = ApiClient.convertToType(data['start'], 'String');
            }
            if (data.hasOwnProperty('days')) {
                obj['days'] = ApiClient.convertToType(data['days'], [TariffSeasonsInnerDaysInner]);
            }
            if (data.hasOwnProperty('enable_charge_from_grid')) {
                obj['enable_charge_from_grid'] = ApiClient.convertToType(data['enable_charge_from_grid'], 'Boolean');
            }
            if (data.hasOwnProperty('enable_discharge_to_grid')) {
                obj['enable_discharge_to_grid'] = ApiClient.convertToType(data['enable_discharge_to_grid'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TariffSeasonsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TariffSeasonsInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['start'] && !(typeof data['start'] === 'string' || data['start'] instanceof String)) {
            throw new Error("Expected the field `start` to be a primitive type in the JSON string but got " + data['start']);
        }
        if (data['days']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['days'])) {
                throw new Error("Expected the field `days` to be an array in the JSON data but got " + data['days']);
            }
            // validate the optional field `days` (array)
            for (const item of data['days']) {
                TariffSeasonsInnerDaysInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * ToU year ID. e.g='all_year_long'.
 * @member {String} id
 */
TariffSeasonsInner.prototype['id'] = undefined;

/**
 * Start of season. e.g='1/1'.
 * @member {String} start
 */
TariffSeasonsInner.prototype['start'] = undefined;

/**
 * ToU seasons.
 * @member {Array.<module:model/TariffSeasonsInnerDaysInner>} days
 */
TariffSeasonsInner.prototype['days'] = undefined;

/**
 * @member {Boolean} enable_charge_from_grid
 */
TariffSeasonsInner.prototype['enable_charge_from_grid'] = undefined;

/**
 * @member {Boolean} enable_discharge_to_grid
 */
TariffSeasonsInner.prototype['enable_discharge_to_grid'] = undefined;






export default TariffSeasonsInner;

