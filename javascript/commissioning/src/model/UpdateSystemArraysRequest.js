/**
 * The Enphase Commissioning API
 * Commissioning API can be used to create and update activations on a site, manage companies and users, update Tariff, etc.
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ArrayParams from './ArrayParams';

/**
 * The UpdateSystemArraysRequest model module.
 * @module model/UpdateSystemArraysRequest
 * @version 4.0
 */
class UpdateSystemArraysRequest {
    /**
     * Constructs a new <code>UpdateSystemArraysRequest</code>.
     * @alias module:model/UpdateSystemArraysRequest
     * @param angle {Number} Angle of the system.
     * @param arrays {Array.<module:model/ArrayParams>} 
     */
    constructor(angle, arrays) { 
        
        UpdateSystemArraysRequest.initialize(this, angle, arrays);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, angle, arrays) { 
        obj['angle'] = angle;
        obj['arrays'] = arrays;
    }

    /**
     * Constructs a <code>UpdateSystemArraysRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateSystemArraysRequest} obj Optional instance to populate.
     * @return {module:model/UpdateSystemArraysRequest} The populated <code>UpdateSystemArraysRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateSystemArraysRequest();

            if (data.hasOwnProperty('angle')) {
                obj['angle'] = ApiClient.convertToType(data['angle'], 'Number');
            }
            if (data.hasOwnProperty('arrays')) {
                obj['arrays'] = ApiClient.convertToType(data['arrays'], [ArrayParams]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateSystemArraysRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateSystemArraysRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateSystemArraysRequest.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['arrays']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['arrays'])) {
                throw new Error("Expected the field `arrays` to be an array in the JSON data but got " + data['arrays']);
            }
            // validate the optional field `arrays` (array)
            for (const item of data['arrays']) {
                ArrayParams.validateJSON(item);
            };
        }

        return true;
    }


}

UpdateSystemArraysRequest.RequiredProperties = ["angle", "arrays"];

/**
 * Angle of the system.
 * @member {Number} angle
 */
UpdateSystemArraysRequest.prototype['angle'] = undefined;

/**
 * @member {Array.<module:model/ArrayParams>} arrays
 */
UpdateSystemArraysRequest.prototype['arrays'] = undefined;






export default UpdateSystemArraysRequest;

