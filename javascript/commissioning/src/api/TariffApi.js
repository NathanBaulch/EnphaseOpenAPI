/**
 * The Enphase Commissioning API
 * Commissioning API can be used to create and update activations on a site, manage companies and users, update Tariff, etc.
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ServerError from '../model/ServerError';
import TariffSettings from '../model/TariffSettings';
import TooManyRequestsError from '../model/TooManyRequestsError';
import UpdateSystemTariffSettingsResponse from '../model/UpdateSystemTariffSettingsResponse';

/**
* Tariff service.
* @module api/TariffApi
* @version 4.0
*/
export default class TariffApi {

    /**
    * Constructs a new TariffApi. 
    * @alias module:api/TariffApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Get tariff for a system
     * Get tariff for a system.
     * @param {Number} systemId Unique numeric ID of the system.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/TariffSettings} and HTTP response
     */
    getSystemTariffSettingsWithHttpInfo(systemId) {
      let postBody = null;
      // verify the required parameter 'systemId' is set
      if (systemId === undefined || systemId === null) {
        throw new Error("Missing the required parameter 'systemId' when calling getSystemTariffSettings");
      }

      let pathParams = {
        'system_id': systemId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'ApiKey'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TariffSettings;
      return this.apiClient.callApi(
        '/systems/config/{system_id}/tariff', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get tariff for a system
     * Get tariff for a system.
     * @param {Number} systemId Unique numeric ID of the system.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/TariffSettings}
     */
    getSystemTariffSettings(systemId) {
      return this.getSystemTariffSettingsWithHttpInfo(systemId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Update tariff for a system
     * @param {Number} systemId Unique numeric ID of the system.
     * @param {Object} opts Optional parameters
     * @param {module:model/TariffSettings} [params] 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/UpdateSystemTariffSettingsResponse} and HTTP response
     */
    updateSystemTariffSettingsWithHttpInfo(systemId, opts) {
      opts = opts || {};
      let postBody = opts['params'];
      // verify the required parameter 'systemId' is set
      if (systemId === undefined || systemId === null) {
        throw new Error("Missing the required parameter 'systemId' when calling updateSystemTariffSettings");
      }

      let pathParams = {
        'system_id': systemId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'ApiKey'];
      let contentTypes = ['application/text'];
      let accepts = ['application/json'];
      let returnType = UpdateSystemTariffSettingsResponse;
      return this.apiClient.callApi(
        '/systems/config/{system_id}/tariff', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Update tariff for a system
     * @param {Number} systemId Unique numeric ID of the system.
     * @param {Object} opts Optional parameters
     * @param {module:model/TariffSettings} opts.params 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/UpdateSystemTariffSettingsResponse}
     */
    updateSystemTariffSettings(systemId, opts) {
      return this.updateSystemTariffSettingsWithHttpInfo(systemId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
