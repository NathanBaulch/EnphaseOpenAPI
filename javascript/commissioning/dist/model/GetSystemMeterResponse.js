"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } /**
                                                                                                                                                                                                                                                                                                                                                                                               * The Enphase Commissioning API
                                                                                                                                                                                                                                                                                                                                                                                               * Commissioning API can be used to create and update activations on a site, manage companies and users, update Tariff, etc.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * The version of the OpenAPI document: 4.0
                                                                                                                                                                                                                                                                                                                                                                                               * 
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
                                                                                                                                                                                                                                                                                                                                                                                               * https://openapi-generator.tech
                                                                                                                                                                                                                                                                                                                                                                                               * Do not edit the class manually.
                                                                                                                                                                                                                                                                                                                                                                                               *
                                                                                                                                                                                                                                                                                                                                                                                               */
/**
 * The GetSystemMeterResponse model module.
 * @module model/GetSystemMeterResponse
 * @version 4.0
 */
var GetSystemMeterResponse = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>GetSystemMeterResponse</code>.
   * @alias module:model/GetSystemMeterResponse
   */
  function GetSystemMeterResponse() {
    _classCallCheck(this, GetSystemMeterResponse);
    GetSystemMeterResponse.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  _createClass(GetSystemMeterResponse, null, [{
    key: "initialize",
    value: function initialize(obj) {}

    /**
     * Constructs a <code>GetSystemMeterResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetSystemMeterResponse} obj Optional instance to populate.
     * @return {module:model/GetSystemMeterResponse} The populated <code>GetSystemMeterResponse</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new GetSystemMeterResponse();
        if (data.hasOwnProperty('serial_number')) {
          obj['serial_number'] = _ApiClient["default"].convertToType(data['serial_number'], 'String');
        }
        if (data.hasOwnProperty('manufacturer')) {
          obj['manufacturer'] = _ApiClient["default"].convertToType(data['manufacturer'], 'String');
        }
        if (data.hasOwnProperty('model')) {
          obj['model'] = _ApiClient["default"].convertToType(data['model'], 'String');
        }
        if (data.hasOwnProperty('type')) {
          obj['type'] = _ApiClient["default"].convertToType(data['type'], 'String');
        }
        if (data.hasOwnProperty('operational_date')) {
          obj['operational_date'] = _ApiClient["default"].convertToType(data['operational_date'], 'Date');
        }
        if (data.hasOwnProperty('first_report_date')) {
          obj['first_report_date'] = _ApiClient["default"].convertToType(data['first_report_date'], 'Date');
        }
        if (data.hasOwnProperty('last_report_date')) {
          obj['last_report_date'] = _ApiClient["default"].convertToType(data['last_report_date'], 'Date');
        }
        if (data.hasOwnProperty('phase')) {
          obj['phase'] = _ApiClient["default"].convertToType(data['phase'], 'String');
        }
        if (data.hasOwnProperty('envoy_serial_number')) {
          obj['envoy_serial_number'] = _ApiClient["default"].convertToType(data['envoy_serial_number'], 'String');
        }
        if (data.hasOwnProperty('status')) {
          obj['status'] = _ApiClient["default"].convertToType(data['status'], 'String');
        }
        if (data.hasOwnProperty('state')) {
          obj['state'] = _ApiClient["default"].convertToType(data['state'], 'String');
        }
      }
      return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetSystemMeterResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetSystemMeterResponse</code>.
     */
  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // ensure the json data is a string
      if (data['serial_number'] && !(typeof data['serial_number'] === 'string' || data['serial_number'] instanceof String)) {
        throw new Error("Expected the field `serial_number` to be a primitive type in the JSON string but got " + data['serial_number']);
      }
      // ensure the json data is a string
      if (data['manufacturer'] && !(typeof data['manufacturer'] === 'string' || data['manufacturer'] instanceof String)) {
        throw new Error("Expected the field `manufacturer` to be a primitive type in the JSON string but got " + data['manufacturer']);
      }
      // ensure the json data is a string
      if (data['model'] && !(typeof data['model'] === 'string' || data['model'] instanceof String)) {
        throw new Error("Expected the field `model` to be a primitive type in the JSON string but got " + data['model']);
      }
      // ensure the json data is a string
      if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
        throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
      }
      // ensure the json data is a string
      if (data['phase'] && !(typeof data['phase'] === 'string' || data['phase'] instanceof String)) {
        throw new Error("Expected the field `phase` to be a primitive type in the JSON string but got " + data['phase']);
      }
      // ensure the json data is a string
      if (data['envoy_serial_number'] && !(typeof data['envoy_serial_number'] === 'string' || data['envoy_serial_number'] instanceof String)) {
        throw new Error("Expected the field `envoy_serial_number` to be a primitive type in the JSON string but got " + data['envoy_serial_number']);
      }
      // ensure the json data is a string
      if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
        throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
      }
      // ensure the json data is a string
      if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
        throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
      }
      return true;
    }
  }]);
  return GetSystemMeterResponse;
}();
/**
 * Meter serial number.
 * @member {String} serial_number
 */
GetSystemMeterResponse.prototype['serial_number'] = undefined;

/**
 * Name of the manufacturer.
 * @member {String} manufacturer
 */
GetSystemMeterResponse.prototype['manufacturer'] = undefined;

/**
 * Model.
 * @member {String} model
 */
GetSystemMeterResponse.prototype['model'] = undefined;

/**
 * Meter type.
 * @member {String} type
 */
GetSystemMeterResponse.prototype['type'] = undefined;

/**
 * Operational date.
 * @member {Date} operational_date
 */
GetSystemMeterResponse.prototype['operational_date'] = undefined;

/**
 * First report date.
 * @member {Date} first_report_date
 */
GetSystemMeterResponse.prototype['first_report_date'] = undefined;

/**
 * Last report date.
 * @member {Date} last_report_date
 */
GetSystemMeterResponse.prototype['last_report_date'] = undefined;

/**
 * Phase.
 * @member {String} phase
 */
GetSystemMeterResponse.prototype['phase'] = undefined;

/**
 * Envoy serial number.
 * @member {String} envoy_serial_number
 */
GetSystemMeterResponse.prototype['envoy_serial_number'] = undefined;

/**
 * Meter status.
 * @member {String} status
 */
GetSystemMeterResponse.prototype['status'] = undefined;

/**
 * Meter state.
 * @member {String} state
 */
GetSystemMeterResponse.prototype['state'] = undefined;
var _default = GetSystemMeterResponse;
exports["default"] = _default;