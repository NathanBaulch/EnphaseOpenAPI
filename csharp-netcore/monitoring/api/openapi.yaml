openapi: 3.0.1
info:
  description: "Monitoring API can be used to fetch system details on a site, system-level\
    \ production and consumption data, and device-level production data."
  license:
    name: Enphase Energy API License Agreement.
    url: https://enphase.com/api-license-agreement-v4
  termsOfService: https://enphase.com/legal/terms-of-service
  title: The Enphase Monitoring API
  version: "4.0"
servers:
- url: https://api.enphaseenergy.com/api/v4
security:
- OAuth2: []
- ApiKey: []
paths:
  /systems:
    get:
      description: "Returns a list of systems for which the user can make API requests.\
        \ By default, systems are returned in batches of 10. The maximum size is 100."
      operationId: GetSystems
      parameters:
      - description: "Page to be returned. Default=1, Min=1. For example, if page\
          \ is set to 2, 2nd page is returned."
        explode: true
        in: query
        name: page
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: "Maximum number of records shown per page. Default=10, Min=1,\
          \ Max=100.  For example, if set to 5, 5 records are shown per page."
        explode: true
        in: query
        name: size
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: "Returns list of systems sorted by <sort_by> field. To get ASC\
          \ order sorted list, user sort_by = <key>. To get DESC order sorted list,\
          \ use sort_by = (-)<key>. Current sort keys supported are id, name, and\
          \ last_report_date. By default the list is sorted by decreasing system ID."
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          $ref: '#/components/schemas/SystemSortByEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemsResponse'
          description: List of systems.
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "422":
          content:
            application/json:
              example:
                message: Unprocessable Entity
                details: system is missing at Json body location
                code: 422
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: Fetch systems
      tags:
      - System Details
  /systems/search:
    post:
      description: Search and filter systems. Provide only valid values in request
        parameters. Empty and invalid values will be ignored. Invalid keys will be
        rejected.
      operationId: SearchSystems
      parameters:
      - description: "Page to be returned. Default=1, Min=1, e.g=2."
        explode: true
        in: query
        name: page
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      - description: "Maximum number of records shown per page. Default=10, Min=1,\
          \ Max=1000, e.g=5."
        explode: true
        in: query
        name: size
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSystemsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSystemsResponse'
          description: List of systems.
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                message: Not Found
                details: "System not found for {:id=>\"1\"}"
                code: 404
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Not Found
        "422":
          content:
            application/json:
              example:
                message: Unprocessable Entity
                details: System are missing at JSON body location
                code: 422
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: Search and filter systems
      tags:
      - System Details
      x-codegen-request-body-name: params
  /systems/{system_id}:
    get:
      description: Retrieves a system by ID.
      operationId: GetSystem
      parameters:
      - description: Unique numeric ID of the system.
        explode: false
        in: path
        name: system_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemResponse'
          description: System fetched.
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                message: Forbidden
                details: Not authorized to access this resource
                code: 403
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: Not Found
                details: "System not found for {:id=>\"1\"}"
                code: 404
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Not Found
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: Retrieves a System by ID
      tags:
      - System Details
  /systems/{system_id}/summary:
    get:
      description: Returns system summary based on the specified system ID.
      operationId: GetSystemSummary
      parameters:
      - description: Unique numeric ID of the system.
        explode: false
        in: path
        name: system_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemSummaryResponse'
          description: System summary fetched.
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                message: Forbidden
                details: Not authorized to access this resource
                code: 403
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: Not Found
                details: "System not found for {:id=>\"1\"}"
                code: 404
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Not Found
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: Retrieves a system summary
      tags:
      - System Details
  /systems/{system_id}/devices:
    get:
      description: Retrieves devices for a given system. Only devices that are active
        will be returned in the response.
      operationId: GetSystemDevices
      parameters:
      - description: Unique numeric ID of the system.
        explode: false
        in: path
        name: system_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemDevicesResponse'
          description: List of devices.
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                message: Forbidden
                details: Not authorized to access this resource
                code: 403
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: Not Found
                details: "System not found for {:id=>\"1\"}"
                code: 404
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Not Found
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: Retrieves devices for a given system
      tags:
      - System Details
  /systems/retrieve_system_id:
    get:
      description: "Get system ID by passing envoy serial number. If the serial number\
        \ of a retired envoy is passed in the request param, a 404 Not Found response\
        \ will be returned."
      operationId: RetrieveSystemId
      parameters:
      - description: Envoy serial number.
        explode: true
        in: query
        name: serial_num
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveSystemIdResponse'
          description: retrieve_system_id
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "404":
          content:
            application/json:
              example:
                message: Not Found
                details: "System not found for {:id=>\"1\"}"
                code: 404
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Not Found
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "422":
          content:
            application/json:
              example:
                message: Unprocessable Entity
                details: Provide envoy serial number
                code: 422
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: Retrieve system for a given envoy serial number
      tags:
      - System Details
  /systems/{system_id}/production_meter_readings:
    get:
      description: |-
        Returns the last known reading of each production meter on the system as of the requested time, regardless of whether the meter is currently in service or retired.
        Read_at is the time at which the reading was taken, and is always less than or equal to the requested end_at. Commonly, the reading will be within 30 minutes of the requested end_at.
        However, larger deltas can occur and do not necessarily mean there is a problem with the meter or the system.
        Systems that are configured to report infrequently can show large deltas on all meters, especially when end_at is close to the current time.
        Meters that have been retired from a system will show an end_at that doesn't change, and that eventually is far away from the current time.
      operationId: GetSystemProductionMeterReadings
      parameters:
      - description: Unique numeric ID of the system.
        explode: false
        in: path
        name: system_id
        required: true
        schema:
          type: integer
        style: simple
      - description: "End of reporting period in Unix epoch time. If no end is specified,\
          \ defaults to the time of the request. If the end is later than the last\
          \ reported interval the response data ends with the last reported interval."
        explode: true
        in: query
        name: end_at
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemProductionMeterReadingsResponse'
          description: production_meter_readings
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                message: Forbidden
                details: Not authorized to access this resource
                code: 403
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: Not Found
                details: "System not found for {:id=>\"1\"}"
                code: 404
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Not Found
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "422":
          content:
            application/json:
              example:
                message: Unprocessable Entity
                details: Failed to parse date 1613543106
                code: 422
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: production_meter_readings
      tags:
      - Site Level Production Monitoring
  /systems/{system_id}/rgm_stats:
    get:
      description: |-
        Returns performance statistics as measured by the revenue-grade meters installed on the specified system. If the total duration requested is more than one week, returns one week of intervals.
        Intervals are 15 minutes in length and start at the top of the hour.
        Requests for times that do not fall on the 15-minute marks are rounded down.
        For example, a request for 08:01, 08:08, 08:11, or 08:14 (in epoch format) is treated as a request for 08:00 (in epoch format). Intervals are listed by their end times in epoch format.
        The requested date range in one API hit cannot be more than 7 days and the requested start at must be within 2 years from current time.
        If the start_at specified is earlier than the system's first reported date, then midnight of the system's first reported date is considered as start_at.
      operationId: GetSystemRgmStats
      parameters:
      - description: Unique numeric ID of the system.
        explode: false
        in: path
        name: system_id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Start of period to report on in Unix epoch time. If no start\
          \ is specified, the assumed start is midnight today, in the timezone of\
          \ the system. If the start is earlier than one year ago, the response includes\
          \ an empty intervals list. If the start is earlier than the system's operational_date,\
          \ the response data begins at midnight of the first reported interval date."
        explode: true
        in: query
        name: start_at
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "End of reporting period in Unix epoch time. If no end is specified,\
          \ default to the time of the request or (start time + 1 week), whichever\
          \ is earlier. If the end is later than the last reported interval the response\
          \ data ends with the last reported interval."
        explode: true
        in: query
        name: end_at
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemRgmStatsResponse'
          description: rgm_stats
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                message: Forbidden
                details: Not authorized to access this resource
                code: 403
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: Not Found
                details: "System not found for {:id=>\"1\"}"
                code: 404
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Not Found
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "422":
          content:
            application/json:
              example:
                message: Unprocessable Entity
                details: Requested date range is invalid for this system
                code: 422
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: rgm_stats
      tags:
      - Site Level Production Monitoring
  /systems/{system_id}/consumption_lifetime:
    get:
      description: |-
        Returns a daily time series of energy consumption as measured by the consumption meter installed on the specified system. All measurements are in Watt hours.
        The time series includes one entry for each day from the start_date to the end_date. There are no gaps in the time series.
        If the response includes trailing zeroes, such as [909, 4970, 0, 0, 0], then no data has been reported for the last three days.
      operationId: GetSystemConsumptionLifetime
      parameters:
      - description: Unique numeric ID of the system.
        explode: false
        in: path
        name: system_id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Requested start date of the time series data. Defaults to the\
          \ system's operational date. If the start_date is earlier than the system's\
          \ operational_date, then the response data begins with the system operational_date\
          \ as start_date. Pass as string in YYYY-MM-DD format."
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: "End date of the time series data. Defaults to yesterday. If\
          \ the end_date is later than yesterday, then the response data ends with\
          \ yesterday as end_date. Pass as string in YYYY-MM-DD format."
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          format: date
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemConsumptionLifetimeResponse'
          description: consumption_lifetime
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                message: Forbidden
                details: Not authorized to access this resource
                code: 403
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: Not Found
                details: "System not found for {:id=>\"1\"}"
                code: 404
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Not Found
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "422":
          content:
            application/json:
              example:
                message: Unprocessable Entity
                details: Requested date is in the future
                code: 422
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: consumption_lifetime
      tags:
      - Site Level Consumption Monitoring
  /systems/{system_id}/energy_lifetime:
    get:
      description: |-
        Returns a daily time series of energy produced by the system over its lifetime. All measurements are in Watt hours.
        The time series includes one entry for each day from the start_date to the end_date with no gaps in the time series.
        If the response includes trailing zeroes, such as [909, 4970, 0, 0, 0], then no energy has been reported for the last days in the series.
        If the system has a meter, the time series includes data as measured by the microinverters until the first full day after the meter has been installed.
        Later, it switches to using the data as measured by the meter. This is called the "merged time series".
        The attribute 'meter_start_date' indicates the time when the meter measurements begin to be used.
        You can retrieve the complete time series from the meter and from the microinverters by adding the parameter production=all to the request.
      operationId: GetSystemEnergyLifetime
      parameters:
      - description: Unique numeric ID of the system.
        explode: false
        in: path
        name: system_id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Start date of the time series data. Defaults to the system's\
          \ operational date. If the start_date is earlier than the system's operational_date,\
          \ then the response data begins with the system operational_date as start_date.\
          \ Pass as string in YYYY-MM-DD format."
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: "End date of the time series data. Defaults to yesterday. If\
          \ the end_date is later than yesterday, then the response data ends with\
          \ yesterday as end_date. Pass as string in YYYY-MM-DD format."
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: "When 'all', returns the merged time series plus the time series\
          \ as reported by the microinverters and the meter on the system. Other values\
          \ are ignored."
        explode: true
        in: query
        name: production
        required: false
        schema:
          $ref: '#/components/schemas/SystemEnergyLifetimeProductionEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemEnergyLifetimeResponse'
          description: "When the query parameters include \"production=all\", returns\
            \ meter and microinverter-measured time series."
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                message: Forbidden
                details: Not authorized to access this resource
                code: 403
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: Not Found
                details: "System not found for {:id=>\"1\"}"
                code: 404
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Not Found
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "422":
          content:
            application/json:
              example:
                message: Unprocessable Entity
                details: Requested date range is invalid for this system
                code: 422
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: energy_lifetime
      tags:
      - Site Level Production Monitoring
  /systems/{system_id}/battery_lifetime:
    get:
      description: "Returns a daily time series of energy charged into the batteries\
        \ and energy discharged from the batteries for a system over its lifetime.\
        \ All measurements are in Watt hours. The time series includes one entry for\
        \ each day from the start_date to the end_date with no gaps in the time series.\
        \ If the response includes trailing zeroes, such as [909, 4970, 0, 0, 0],\
        \ then no energy has been charged/discharged for the last days in the series."
      operationId: GetSystemBatteryLifetime
      parameters:
      - description: Unique numeric ID of the system.
        explode: false
        in: path
        name: system_id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Requested start date of the time series data. Defaults to the\
          \ system's operational date. If the start_date is earlier than the system's\
          \ operational_date, then the response data begins with the system operational_date\
          \ as start_date. Pass as string in YYYY-MM-DD format."
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: "End date of the time series data. Defaults to yesterday. If\
          \ the end_date is later than yesterday, then the response data ends with\
          \ yesterday as end_date. Pass as string in YYYY-MM-DD format."
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          format: date
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemBatteryLifetimeResponse'
          description: battery_lifetime
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                message: Forbidden
                details: Not authorized to access this resource
                code: 403
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: Not Found
                details: "System not found for {:id=>\"1\"}"
                code: 404
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Not Found
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "422":
          content:
            application/json:
              example:
                message: Unprocessable Entity
                details: Requested date is in the future
                code: 422
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: battery_lifetime
      tags:
      - Site Level Consumption Monitoring
  /systems/{system_id}/energy_import_lifetime:
    get:
      description: "Returns a daily time series of energy imported to the grid by\
        \ the system over its lifetime. All measurements are in Watt hours. The time\
        \ series includes one entry for each day from the start_date to the end_date\
        \ with no gaps in the time series. If the response contains trailing zeroes,\
        \ such as [909, 4970, 0, 0, 0], then no energy has been imported for the last\
        \ days in the series."
      operationId: GetSystemEnergyImportLifetime
      parameters:
      - description: Unique numeric ID of the system.
        explode: false
        in: path
        name: system_id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Requested start date of the time series data. Defaults to the\
          \ system's operational date. If the start_date is earlier than the system's\
          \ operational_date, then the response data begins with the system operational_date\
          \ as start_date. Pass as string in YYYY-MM-DD format."
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: "End date of the time series data. Defaults to yesterday. If\
          \ the end_date is later than yesterday, then the response data ends with\
          \ yesterday as end_date. Pass as string in YYYY-MM-DD format."
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          format: date
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemEnergyImportLifetimeResponse'
          description: import_lifetime
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                message: Forbidden
                details: Not authorized to access this resource
                code: 403
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: Not Found
                details: "System not found for {:id=>\"1\"}"
                code: 404
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Not Found
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "422":
          content:
            application/json:
              example:
                message: Unprocessable Entity
                details: Requested date is in the future
                code: 422
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: import_lifetime
      tags:
      - Site Level Consumption Monitoring
  /systems/{system_id}/energy_export_lifetime:
    get:
      description: "Returns a daily time series of energy exported to the grid by\
        \ the system over its lifetime. All measurements are in Watt-hours. The time\
        \ series includes one entry for each day from the start_date to the end_date\
        \ with no gaps in the time series. If the response contains trailing zeroes,\
        \ such as [909, 4970, 0, 0, 0], then no energy has been exported for the last\
        \ days in the series."
      operationId: GetSystemEnergyExportLifetime
      parameters:
      - description: Unique numeric ID of the system.
        explode: false
        in: path
        name: system_id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Requested start date of the time series data. Defaults to the\
          \ system's operational date. If the start_date is earlier than the system's\
          \ operational_date, then the response data begins with the system operational_date\
          \ as start_date. Pass as string in YYYY-MM-DD format."
        explode: true
        in: query
        name: start_date
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: "End date of the time series data. Defaults to yesterday. If\
          \ the end_date is later than yesterday, then the response data ends with\
          \ yesterday as end_date. Pass as string in YYYY-MM-DD format."
        explode: true
        in: query
        name: end_date
        required: false
        schema:
          format: date
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemEnergyExportLifetimeResponse'
          description: export_lifetime
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                message: Forbidden
                details: Not authorized to access this resource
                code: 403
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: Not Found
                details: "System not found for {:id=>\"1\"}"
                code: 404
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Not Found
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "422":
          content:
            application/json:
              example:
                message: Unprocessable Entity
                details: Requested date is in the future
                code: 422
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: export_lifetime
      tags:
      - Site Level Consumption Monitoring
  /systems/inverters_summary_by_envoy_or_site:
    get:
      description: Returns the microinverters summary based on the specified active
        envoy serial number or system.
      operationId: GetInvertersSummaryByEnvoyOrSite
      parameters:
      - description: Site ID. The response will contain only those microinverters
          reporting to one of the active envoys of the given site.
        explode: true
        in: query
        name: site_id
        required: false
        schema:
          type: integer
        style: form
      - description: Active envoy serial number. Only microinverters reporting to
          the given active envoy will be present in the response.
        explode: true
        in: query
        name: envoy_serial_number
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInvertersSummaryByEnvoyOrSiteResponse'
          description: inverters_summary_by_envoy_or_site
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "422":
          content:
            application/json:
              example:
                message: Unprocessable Entity
                details: Envoy serial number or Site ID mandatory
                code: 422
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: inverters_summary_by_envoy_or_site
      tags:
      - System Details
  /systems/{system_id}/telemetry/production_micro:
    get:
      description: |-
        Retrieves telemetry for all the production micros of a system.
        If no start_at is specified, defaults to midnight today, in the timezone of the system.
        If the start_at specified is earlier than the system's first reported date, then midnight of the system's first reported date is considered as start_at.
        The end_at is calculated as the minimum of the time of the request and (start time + granularity).
        The meaning of granularity is as follows:

        If granularity is 15mins, maximum 3 intervals will appear in response. If granularity is day, maximum 288 intervals will appear in response where each interval is of 5 mins duration.

        The requested start date must be within 2 years from current date.
        By default start_at will appear in response. If start_date parameter is passed in the url then start_date field will appear in response.
        By default end_at will appear in response. If end_date parameter is passed in the url then end_date field will appear in response.
      operationId: GetSystemProductionMicroTelemetry
      parameters:
      - description: Unique numeric ID of the system.
        explode: false
        in: path
        name: system_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Start time for fetching the telemetry data in Epoch time format.
          Alternatively one can use start_date in place of start_at for passing the
          start date as string in YYYY-MM-DD format. By default start_at will appear
          in response. If start_date parameter is passed in the url then start_date
          field will appear in response.
        explode: true
        in: query
        name: start_at
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Granularity of the telemetry data. Default is 'day'.
        explode: true
        in: query
        name: granularity
        required: false
        schema:
          $ref: '#/components/schemas/TelemetryGranularityEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemProductionMicroTelemetryResponse'
          description: Telemetry for all production micros.
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                message: Forbidden
                details: Not authorized to access this resource
                code: 403
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: Not Found
                details: "System not found for {:id=>\"1\"}"
                code: 404
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Not Found
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "422":
          content:
            application/json:
              example:
                message: Unprocessable Entity
                details: "Invalid request because of 'Requested date range is invalid\
                  \ for this system'. {:start_at=>1566930600, :end_at=>1565333100,\
                  \ :first_interval=>1565072100, :last_interval=>1565333700}"
                code: 422
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: Retrieves telemetry for all production micros for a system
      tags:
      - Site Level Production Monitoring
  /systems/{system_id}/telemetry/production_meter:
    get:
      description: |-
        Retrieves telemetry for all the production meters of a system.
        If no start_at is specified, defaults to midnight today, in the timezone of the system.
        If the start_at specified is earlier than the system's first reported date, then midnight of the system's first reported date is considered as start_at.
        The end_at is calculated as the minimum of the time of the request and (start time + granularity).
        The meaning of granularity is as follows:

        If granularity is 15mins, maximum 1 interval will appear in response.
        If granularity is day, maximum 96 intervals, and if granularity is week, maximum 672 intervals, will appear in response where each interval is of 15 mins duration.

        The requested start date must be within 2 years from current date.
        By default start_at will appear in response. If start_date parameter is passed in the url then start_date field will appear in response.
        By default end_at will appear in response. If end_date parameter is passed in the url then end_date field will appear in response.
      operationId: GetSystemProductionMeterTelemetry
      parameters:
      - description: Unique numeric ID of the system.
        explode: false
        in: path
        name: system_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Start time for fetching the telemetry data in Epoch time format.
          Alternatively one can use start_date in place of start_at for passing the
          start date as string in YYYY-MM-DD format. By default start_at will appear
          in response. If start_date parameter is passed in the url then start_date
          field will appear in response.
        explode: true
        in: query
        name: start_at
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Granularity of the telemetry data. Default is 'day'.
        explode: true
        in: query
        name: granularity
        required: false
        schema:
          $ref: '#/components/schemas/TelemetryGranularityEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemProductionMeterTelemetryResponse'
          description: Telemetry for all production meters.
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                message: Forbidden
                details: Not authorized to access this resource
                code: 403
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: Not Found
                details: "System not found for {:id=>\"1\"}"
                code: 404
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Not Found
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "422":
          content:
            application/json:
              example:
                message: Unprocessable Entity
                details: "Invalid request because of 'Requested date range is invalid\
                  \ for this system'. {:start_at=>1566930600, :end_at=>1565333100,\
                  \ :first_interval=>1565072100, :last_interval=>1565333700}"
                code: 422
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: Retrieves telemetry for all production meters for a system
      tags:
      - Site Level Production Monitoring
  /systems/{system_id}/telemetry/battery:
    get:
      description: |-
        Retrieves telemetry for all the batteries of a system.
        If no start_at is specified, defaults to midnight today, in the timezone of the system.
        If the start_at specified is earlier than the system's first reported date, then midnight of the system's first reported date is considered as start_at.
        The end_at is calculated as the minimum of the time of the request and (start time + granularity).
        The meaning of granularity is as follows:

        If granularity is 15mins, maximum 1 interval will appear in response.
        If granularity is day, maximum 96 intervals, and if granularity is week, maximum 672 intervals, will appear in response where each interval is of 15 mins duration.

        The requested start date must be within 2 years from current date.
        By default start_at will appear in response. If start_date parameter is passed in the url then start_date field will appear in response.
        By default end_at will appear in response. If end_date parameter is passed in the url then end_date field will appear in response.
      operationId: GetSystemBatteryTelemetry
      parameters:
      - description: Unique numeric ID of the system.
        explode: false
        in: path
        name: system_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Start time for fetching the telemetry data in Epoch time format.
          Alternatively one can use start_date in place of start_at for passing the
          start date as string in YYYY-MM-DD format. By default start_at will appear
          in response. If start_date parameter is passed in the url then start_date
          field will appear in response.
        explode: true
        in: query
        name: start_at
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Granularity of the telemetry data. Default is 'day'.
        explode: true
        in: query
        name: granularity
        required: false
        schema:
          $ref: '#/components/schemas/TelemetryGranularityEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemBatteryTelemetryResponse'
          description: Telemetry for batteries.
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                message: Forbidden
                details: Not authorized to access this resource
                code: 403
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: Not Found
                details: "System not found for {:id=>\"1\"}"
                code: 404
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Not Found
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "422":
          content:
            application/json:
              example:
                message: Unprocessable Entity
                details: "Invalid request because of 'Requested date range is invalid\
                  \ for this system'. {:start_at=>1566930600, :end_at=>1565333100,\
                  \ :first_interval=>1565072100, :last_interval=>1565333700}"
                code: 422
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: Retrieves telemetry for all batteries for a system
      tags:
      - Site Level Consumption Monitoring
  /systems/{system_id}/telemetry/consumption_meter:
    get:
      description: |-
        Retrieves telemetry for all the consumption meters of a system.
        If the start_at specified is earlier than the system's first reported date, then midnight of the system's first reported date is considered as start_at.
        The end_at is calculated as the minimum of the time of the request and (start time + granularity).
        The meaning of granularity is as follows:

        If granularity is 15mins, maximum 1 interval will appear in response.
        If granularity is day, maximum 96 intervals, and if granularity is week, maximum 672 intervals, will appear in response where each interval is of 15 mins duration.

        The requested start date must be within 2 years from current date.
        By default start_at will appear in response. If start_date parameter is passed in the url then start_date field will appear in response.
        By default end_at will appear in response. If end_date parameter is passed in the url then end_date field will appear in response.
      operationId: GetSystemConsumptionMeterTelemetry
      parameters:
      - description: Unique numeric ID of the system.
        explode: false
        in: path
        name: system_id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Requested start time for telemetry data in Epoch time format.\
          \ Alternatively one can use start_date in place of start_at for passing\
          \ the start date as string in YYYY-MM-DD format. If no start_at is specified,\
          \ defaults to midnight today, in the timezone of the system. If the start_at\
          \ specified is earlier than the system's first reported date, then the system\
          \ first reported date is considered as start_at. By default start_at will\
          \ appear in response. If start_date parameter is passed in the url then\
          \ start_date field will appear in response."
        explode: true
        in: query
        name: start_at
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Granularity of the telemetry data. Default is 'day'.
        explode: true
        in: query
        name: granularity
        required: false
        schema:
          $ref: '#/components/schemas/TelemetryGranularityEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemConsumptionMeterTelemetryResponse'
          description: Telemetry for all consumption meters.
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                message: Forbidden
                details: Not authorized to access this resource
                code: 403
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: Not Found
                details: "System not found for {:id=>\"1\"}"
                code: 404
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Not Found
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "422":
          content:
            application/json:
              example:
                message: Unprocessable Entity
                details: "Invalid request because of 'Requested date range is invalid\
                  \ for this system'. {:start_at=>1566930600, :end_at=>1565333100,\
                  \ :first_interval=>1565072100, :last_interval=>1565333700}"
                code: 422
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: Retrieves telemetry for all consumption meters for a system
      tags:
      - Site Level Consumption Monitoring
  /systems/{system_id}/devices/micros/{serial_no}/telemetry:
    get:
      description: |-
        Retrieves telemetry for single micro/pcu.
        If no start_at is specified, defaults to midnight today, in the timezone of the system.
        If the start_at specified is earlier than the system's first reported date, then midnight of the system's first reported date is considered as start_at.
        The end_at is calculated as the minimum of the time of the request and (start time + granularity).
        The meaning of granularity is as follows:

        If granularity is 15mins, maximum 3 intervals will appear in response. If granularity is day, maximum 288 intervals will appear in response where each interval is of 5 mins duration.

        The requested start date must be within 2 years from current date.
        By default start_at will appear in response. If start_date parameter is passed in the url then start_date field will appear in response.
        By default end_at will appear in response. If end_date parameter is passed in the url then end_date field will appear in response.
      operationId: GetSystemMicroDeviceTelemetry
      parameters:
      - description: Unique numeric ID of the system.
        explode: false
        in: path
        name: system_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Serial number of the individual solar Microinverter.
        explode: false
        in: path
        name: serial_no
        required: true
        schema:
          type: string
        style: simple
      - description: Start time for fetching the telemetry data in Epoch time format.
          Alternatively one can use start_date in place of start_at for passing the
          start date as string in YYYY-MM-DD format. By default start_at will appear
          in response. If start_date parameter is passed in the url then start_date
          field will appear in response.
        explode: true
        in: query
        name: start_at
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Granularity of the telemetry data. Default is 'day'.
        explode: true
        in: query
        name: granularity
        required: false
        schema:
          $ref: '#/components/schemas/TelemetryGranularityEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemMicroDeviceTelemetryResponse'
          description: Telemetry for micro.
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                message: Forbidden
                details: Not authorized to access this resource
                code: 403
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: Not Found
                details: "System not found for {:id=>\"1\"}"
                code: 404
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Not Found
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "422":
          content:
            application/json:
              example:
                message: Unprocessable Entity
                details: "Invalid request because of 'Requested date range is invalid\
                  \ for this system'. {:start_at=>1566930600, :end_at=>1565333100,\
                  \ :first_interval=>1565072100, :last_interval=>1565333700}"
                code: 422
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: Retrieves telemetry for single micro/pcu
      tags:
      - Device Level Production Monitoring
  /systems/{system_id}/devices/acbs/{serial_no}/telemetry:
    get:
      description: |-
        Retrieves telemetry for single ACB.
        If no start_at is specified, defaults to midnight today, in the timezone of the system.
        If the start_at specified is earlier than the system's first reported date, then midnight of the system's first reported date is considered as start_at.
        The end_at is calculated as the minimum of the time of the request and (start time + granularity).
        The meaning of granularity is as follows:

        If granularity is 15mins, maximum 1 interval will appear in response.
        If granularity is day, maximum 96 intervals, and if granularity is week, maximum 672 intervals, will appear in response where each interval is of 15 mins duration.

        The requested start date must be within 2 years from current date.
        By default start_at will appear in response. If start_date parameter is passed in the url then start_date field will appear in response.
        By default end_at will appear in response. If end_date parameter is passed in the url then end_date field will appear in response.
      operationId: GetSystemAcbDeviceTelemetry
      parameters:
      - description: Unique numeric ID of the system.
        explode: false
        in: path
        name: system_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Serial number of the acb.
        explode: false
        in: path
        name: serial_no
        required: true
        schema:
          type: string
        style: simple
      - description: Start time for fetching the telemetry data in Epoch time format.
          Alternatively one can use start_date in place of start_at for passing the
          start date as string in YYYY-MM-DD format. By default start_at will appear
          in response. If start_date parameter is passed in the url then start_date
          field will appear in response.
        explode: true
        in: query
        name: start_at
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Granularity of the telemetry data. Default is 'day'.
        explode: true
        in: query
        name: granularity
        required: false
        schema:
          $ref: '#/components/schemas/TelemetryGranularityEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemAcbDeviceTelemetryResponse'
          description: Telemetry for the ACB.
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                message: Forbidden
                details: Not authorized to access this resource
                code: 403
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: Not Found
                details: "System not found for {:id=>\"1\"}"
                code: 404
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Not Found
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "422":
          content:
            application/json:
              example:
                message: Unprocessable Entity
                details: "Invalid request because of 'Requested date range is invalid\
                  \ for this system'. {:start_at=>1566930600, :end_at=>1565333100,\
                  \ :first_interval=>1565072100, :last_interval=>1565333700}"
                code: 422
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: Retrieves telemetry for single ACB
      tags:
      - Device Level Production Monitoring
  /systems/{system_id}/devices/encharges/{serial_no}/telemetry:
    get:
      description: |-
        Retrieves telemetry for single Encharge.
        If no start_at is specified, defaults to midnight today, in the timezone of the system.
        If the start_at specified is earlier than the system's first reported date, then midnight of the system's first reported date is considered as start_at.
        The end_at is calculated as the minimum of the time of the request and (start time + granularity).
        The meaning of granularity is as follows:

        If granularity is 15mins, maximum 1 interval will appear in response.
        If granularity is day, maximum 96 intervals, and if granularity is week, maximum 672 intervals, will appear in response where each interval is of 15 mins duration.

        The requested start date must be within 2 years from current date.
        By default start_at will appear in response. If start_date parameter is passed in the url then start_date field will appear in response.
        By default end_at will appear in response. If end_date parameter is passed in the url then end_date field will appear in response.
      operationId: GetSystemEnchargeDeviceTelemetry
      parameters:
      - description: Unique numeric ID of the system.
        explode: false
        in: path
        name: system_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Serial number of the Encharge.
        explode: false
        in: path
        name: serial_no
        required: true
        schema:
          type: string
        style: simple
      - description: Start time for fetching the telemetry data in Epoch time format.
          Alternatively one can use start_date in place of start_at for passing the
          start date as string in YYYY-MM-DD format. By default start_at will appear
          in response. If start_date parameter is passed in the url then start_date
          field will appear in response.
        explode: true
        in: query
        name: start_at
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Granularity of the telemetry data. Default is 'day'.
        explode: true
        in: query
        name: granularity
        required: false
        schema:
          $ref: '#/components/schemas/TelemetryGranularityEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemEnchargeDeviceTelemetryResponse'
          description: Telemetry for the Encharge.
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                message: Forbidden
                details: Not authorized to access this resource
                code: 403
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: Not Found
                details: "System not found for {:id=>\"1\"}"
                code: 404
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Not Found
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "422":
          content:
            application/json:
              example:
                message: Unprocessable Entity
                details: "Invalid request because of 'Requested date range is invalid\
                  \ for this system'. {:start_at=>1566930600, :end_at=>1565333100,\
                  \ :first_interval=>1565072100, :last_interval=>1565333700}"
                code: 422
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: Retrieves telemetry for single Encharge
      tags:
      - Device Level Production Monitoring
  /systems/config/{system_id}/battery_settings:
    get:
      description: Returns the current battery settings of a system.
      operationId: GetSystemBatterySettings
      parameters:
      - description: Unique numeric ID of the system.
        explode: false
        in: path
        name: system_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemBatterySettingsResponse'
          description: battery_settings
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                message: Forbidden
                details: Not authorized to access this resource
                code: 403
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: Not Found
                details: "System not found for {:id=>\"1\"}"
                code: 404
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Not Found
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "422":
          content:
            application/json:
              example:
                message: Unprocessable Entity
                details: System doesn't have encharge
                code: 422
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: Returns the current battery settings of a system
      tags:
      - System Configurations
    put:
      description: Updates the current battery settings of a system.
      operationId: UpdateSystemBatterySettings
      parameters:
      - description: Unique numeric ID of the system.
        explode: false
        in: path
        name: system_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSystemBatterySettingsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSystemBatterySettingsResponse'
          description: OK
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                message: Forbidden
                details: Not authorized to access this resource
                code: 403
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: Not Found
                details: "System not found for {:id=>\"1\"}"
                code: 404
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Not Found
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "422":
          content:
            application/json:
              example:
                message: Unprocessable Entity
                details: System doesn't have encharge
                code: 422
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: Updates the current battery settings of a system
      tags:
      - System Configurations
      x-codegen-request-body-name: battery_settings
  /systems/config/{system_id}/storm_guard:
    get:
      description: Returns the current storm guard settings of a system.
      operationId: GetSystemStormGuardSettings
      parameters:
      - description: Unique numeric ID of the system.
        explode: false
        in: path
        name: system_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemStormGuardSettingsResponse'
          description: storm_guard
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                message: Forbidden
                details: Not authorized to access this resource
                code: 403
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: Not Found
                details: "System not found for {:id=>\"1\"}"
                code: 404
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Not Found
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "422":
          content:
            application/json:
              example:
                message: Unprocessable Entity
                details: System doesn't have encharge
                code: 422
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: Returns the current storm guard settings of a system
      tags:
      - System Configurations
    put:
      description: Updates the current storm guard status of a system.
      operationId: UpdateSystemStormGuardSettings
      parameters:
      - description: Unique numeric ID of the system.
        explode: false
        in: path
        name: system_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSystemStormGuardSettingsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSystemStormGuardSettingsResponse'
          description: storm_guard
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                message: Forbidden
                details: Not authorized to access this resource
                code: 403
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: Not Found
                details: "System not found for {:id=>\"1\"}"
                code: 404
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Not Found
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "422":
          content:
            application/json:
              example:
                message: Unprocessable Entity
                details: System doesn't have encharge
                code: 422
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: Updates the current storm guard settings of a system
      tags:
      - System Configurations
      x-codegen-request-body-name: storm_guard
  /systems/config/{system_id}/grid_status:
    get:
      description: |-
        Returns the current grid status of a system.
        Please note that the status returned in the response is not real-time and is updated only after the IQ Gateway sends a new report to the Enphase cloud.
      operationId: GetSystemGridStatusSettings
      parameters:
      - description: Unique numeric ID of the system.
        explode: false
        in: path
        name: system_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemGridStatusSettingsResponse'
          description: grid_status
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                message: Forbidden
                details: Not authorized to access this resource
                code: 403
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: Not Found
                details: "System not found for {:id=>\"1\"}"
                code: 404
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Not Found
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "422":
          content:
            application/json:
              example:
                message: Unprocessable Entity
                details: grid_state not available as the site has not reported yet
                code: 422
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: Returns the current grid status of a system.
      tags:
      - System Configurations
  /systems/config/{system_id}/load_control:
    get:
      description: Returns the current load control settings of a system.
      operationId: GetSystemLoadControlSettings
      parameters:
      - description: Unique numeric ID of the system.
        explode: false
        in: path
        name: system_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemLoadControlSettingsResponse'
          description: load_control
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                message: Forbidden
                details: Not authorized to access this resource
                code: 403
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: Not Found
                details: "System not found for {:id=>\"1\"}"
                code: 404
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Not Found
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: Returns the current load control settings of a system
      tags:
      - System Configurations
    put:
      description: Updates the current load control settings of a system.
      operationId: UpdateSystemLoadControlSettings
      parameters:
      - description: Unique numeric ID of the system.
        explode: false
        in: path
        name: system_id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSystemLoadControlSettingsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSystemLoadControlSettingsResponse'
          description: load_control
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                message: Forbidden
                details: Not authorized to access this resource
                code: 403
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: Not Found
                details: "System not found for {:id=>\"1\"}"
                code: 404
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Not Found
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: Updates the current load control settings of a system
      tags:
      - System Configurations
  /systems/{system_id}/energy_import_telemetry:
    get:
      description: |-
        Retrieves energy imported from grid in regular intervals.
        If no start_at is specified, defaults to midnight today, in the timezone of the system.
        If the start_at specified is earlier than the system's first reported date, then midnight of the system's first reported date is considered as start_at.
        The end_at is calculated as the minimum of the time of the request and (start time + granularity).
        The meaning of granularity is as follows:

        If granularity is 15mins, maximum 1 intervals will appear in response. If granularity is day, maximum 96 intervals will appear in response where each interval is of 15 mins duration.

        The requested start date must be within 2 years from current date.
      operationId: GetSystemEnergyImportTelemetry
      parameters:
      - description: Unique numeric ID of the system.
        explode: false
        in: path
        name: system_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Start time for fetching the telemetry data in Epoch time format.
          Alternatively one can use start_date in place of start_at for passing the
          start date as string in YYYY-MM-DD format. By default start_at will appear
          in response. If start_date parameter is passed in the url then start_date
          field will appear in response.
        explode: true
        in: query
        name: start_at
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Granularity of the telemetry data. Default is 'day'.
        explode: true
        in: query
        name: granularity
        required: false
        schema:
          $ref: '#/components/schemas/TelemetryGranularityEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemEnergyImportTelemetryResponse'
          description: Energy import telemetry in intervals.
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                message: Forbidden
                details: Not authorized to access this resource
                code: 403
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: Not Found
                details: "System not found for {:id=>\"1\"}"
                code: 404
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Not Found
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "422":
          content:
            application/json:
              example:
                message: Unprocessable Entity
                details: "Invalid request because of 'Requested date range is invalid\
                  \ for this system. {:start_at=>1566930600, :end_at=>1565333100,\
                  \ :first_interval=>1565072100, :last_interval=>1565333700}'"
                code: 422
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: Retrieves energy imported from grid in regular intervals
      tags:
      - Site Level Consumption Monitoring
  /systems/{system_id}/energy_export_telemetry:
    get:
      description: |-
        Retrieves energy exported to grid in regular intervals. If no start_at is specified, defaults to midnight today, in the timezone of the system.
        If the start_at specified is earlier than the system's first reported date, then midnight of the system's first reported date is considered as start_at.
        The end_at is calculated as the minimum of the time of the request and (start time + granularity).
        The meaning of granularity is as follows:

        If granularity is 15mins, maximum 1 intervals will appear in response. If granularity is day, maximum 96 intervals will appear in response where each interval is of 15 mins duration.

        The requested start date must be within 2 years from current date.
      operationId: GetSystemEnergyExportTelemetry
      parameters:
      - description: Unique numeric ID of the system.
        explode: false
        in: path
        name: system_id
        required: true
        schema:
          type: integer
        style: simple
      - description: Start time for fetching the telemetry data in Epoch time format.
          Alternatively one can use start_date in place of start_at for passing the
          start date as string in YYYY-MM-DD format. By default start_at will appear
          in response. If start_date parameter is passed in the url then start_date
          field will appear in response.
        explode: true
        in: query
        name: start_at
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Granularity of the telemetry data. Default is 'day'.
        explode: true
        in: query
        name: granularity
        required: false
        schema:
          $ref: '#/components/schemas/TelemetryGranularityEnum'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemEnergyExportTelemetryResponse'
          description: Energy export telemetry in intervals.
        "401":
          content:
            application/json:
              example:
                message: Not Authorized
                details: User is not authorized
                code: 401
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unauthorized
        "403":
          content:
            application/json:
              example:
                message: Forbidden
                details: Not authorized to access this resource
                code: 403
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Forbidden
        "404":
          content:
            application/json:
              example:
                message: Not Found
                details: "System not found for {:id=>\"1\"}"
                code: 404
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Not Found
        "405":
          content:
            application/json:
              example:
                reason: "405"
                message:
                - Method not allowed
              schema:
                $ref: '#/components/schemas/MethodNotAllowedError'
          description: Method Not Allowed
        "422":
          content:
            application/json:
              example:
                message: Unprocessable Entity
                details: "Invalid request because of 'Requested date range is invalid\
                  \ for this system. {:start_at=>1566930600, :end_at=>1565333100,\
                  \ :first_interval=>1565072100, :last_interval=>1565333700}'"
                code: 422
              schema:
                $ref: '#/components/schemas/ClientError'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                message: Too Many Requests
                details: Usage limit exceeded for plan Kilowatt
                code: 429
                period: minute
                period_start: 1623825660
                period_end: 1623825720
                limit: 5
              schema:
                $ref: '#/components/schemas/TooManyRequestsError'
          description: Too Many Requests
        "500":
          content:
            application/json:
              examples:
                InternalServerError:
                  value:
                    message: Internal Server Error
                    details: "Problem parsing time. Is time passed correctly in the\
                      \ following fields {:start_date=>\"2019-08-33\", :end_at=>\"\
                      2019-08-29\"}"
                    code: 500
                DataTemporarilyUnavailableError:
                  value:
                    errorCode: 7
                    errorMessages:
                    - Data is temporarily unavailable
              schema:
                $ref: '#/components/schemas/GetSystems_500_response'
          description: Internal Server Error
        "501":
          content:
            application/json:
              example:
                reason: "501"
                message:
                - Not Implemented
              schema:
                $ref: '#/components/schemas/NotImplementedError'
          description: Not Implemented
      summary: Retrieves energy exported to grid in regular intervals
      tags:
      - Site Level Consumption Monitoring
  /systems/{system_id}/live_data:
    get:
      description: |-
        API users can get real time live status data on demand for a given system.
        User can retrieve real time power for PV Production, Grid Import/Export, Consumption, Battery Charge/Discharge, and Generator.
        Users can also retrieve Grid Status, Battery Mode, and Battery State of Charge.
        User will receive the stream for a duration of 30 seconds by default and can configure the time in seconds by passing 'duration' as a header parameter with a minimum value of 30 and maximum value of 300.
      operationId: StreamSystemLiveData
      parameters:
      - description: Unique numeric ID of the system.
        explode: false
        in: path
        name: system_id
        required: true
        schema:
          type: integer
        style: simple
      - description: "Duration of the stream in seconds. Default=30, Min=30, Max=300,\
          \ e.g=30."
        explode: false
        in: header
        name: duration
        required: false
        schema:
          maximum: 300
          minimum: 30
          type: integer
        style: simple
      responses:
        "200":
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/StreamSystemLiveDataResponse'
          description: successful operation
        "401":
          content:
            text/event-stream:
              example:
                error:
                  code: 401
                  details:
                  - {}
                  message: API Key is invalid
                  status: NOT_AUTHENTICATED
                timestamp_epoch: 1679041508556
                timestamp_utc: 2023-03-17 08:25:08.556
                type: authentication_error
              schema:
                $ref: '#/components/schemas/StreamSystemLiveData_401_response'
          description: User will get 401 in the below cases. Response content type
            is application/json. NOT_AUTHENTICATED - API key is missing UNAUTHORIZED
            - Access token is invalid UNAUTHORIZED - Access token has expired NOT_AUTHENTICATED
            - API Key is invalid UNAUTHORIZED - Application is not authorized to access
            the requested resource
        "403":
          content:
            text/event-stream:
              example:
                error:
                  code: 403
                  details:
                  - {}
                  message: User is not authorized
                  status: FORBIDDEN
                timestamp_epoch: 1679041508556
                timestamp_utc: 2023-03-17 08:25:08.556
                type: authorization_error
              schema:
                $ref: '#/components/schemas/StreamSystemLiveData_403_response'
          description: User is not authorized. Response content type is application/json.
        "429":
          content:
            text/event-stream:
              example:
                error:
                  code: 429
                  details:
                  - {}
                  message: Too Many Requests
                  status: TOO_MANY_REQUESTS
                timestamp_epoch: 1679041508556
                timestamp_utc: 2023-03-17 08:25:08.556
                type: request_exceeded_error
              schema:
                $ref: '#/components/schemas/StreamSystemLiveData_429_response'
          description: Too Many Requests. Response content type is application/json.
        "461":
          content:
            text/event-stream:
              example:
                error:
                  code: 461
                  details:
                  - {}
                  message: Duration cannot be less than 30
                  status: INVALID_DURATION
                timestamp_epoch: 1679041508556
                timestamp_utc: 2023-03-17 08:25:08.556
                type: validation_error
              schema:
                $ref: '#/components/schemas/StreamSystemLiveData_461_response'
          description: Duration is less than 30 seconds. Response content type is
            application/json.
        "462":
          content:
            text/event-stream:
              example:
                error:
                  code: 462
                  details:
                  - {}
                  message: Duration cannot be greater than 300
                  status: INVALID_DURATION
                timestamp_epoch: 1679041508556
                timestamp_utc: 2023-03-17 08:25:08.556
                type: validation_error
              schema:
                $ref: '#/components/schemas/StreamSystemLiveData_462_response'
          description: Duration is greater then 300 seconds. Response content type
            is application/json.
        "463":
          content:
            text/event-stream:
              example:
                error:
                  code: 463
                  details:
                  - {}
                  message: Duration must be an integer
                  status: INVALID_DURATION
                timestamp_epoch: 1679041508556
                timestamp_utc: 2023-03-17 08:25:08.556
                type: validation_error
              schema:
                $ref: '#/components/schemas/StreamSystemLiveData_463_response'
          description: Duration is not integer. Response content type is application/json.
        "466":
          content:
            text/event-stream:
              example:
                error:
                  code: 466
                  details:
                  - {}
                  message: Envoy must be active and envoy version must be at least
                    6.0.0
                  status: UNSUPPORTED_ENVOY
                timestamp_epoch: 1679041508556
                timestamp_utc: 2023-03-17 08:25:08.556
                type: validation_error
              schema:
                $ref: '#/components/schemas/StreamSystemLiveData_466_response'
          description: Envoy must be active and envoy version must be at least 6.0.0.
            Response content type is application/json.
        "468":
          content:
            text/event-stream:
              example:
                error:
                  code: 468
                  details:
                  - {}
                  message: System ID doesn't exist
                  status: INVALID_SYSTEM_ID
                timestamp_epoch: 1677854252
                timestamp_utc: 2023-03-17 08:25:08.556
                type: validation_error
              schema:
                $ref: '#/components/schemas/StreamSystemLiveData_468_response'
          description: System ID does not exist. Response content type is application/json.
        "472":
          content:
            text/event-stream:
              example:
                error:
                  code: 472
                  details:
                  - {}
                  message: The system doesn't support live stream
                  status: LIVE_STREAM_NOT_SUPPORTED
                timestamp_epoch: 1677854252
                timestamp_utc: 2023-03-17 08:25:08.556
                type: validation_error
              schema:
                $ref: '#/components/schemas/StreamSystemLiveData_472_response'
          description: |-
            For Ensemble sites, live stream will be supported in the following cases:
            If site has an active battery or active system controller, then site must have active production meter and active consumption meter.
            Otherwise, site must have active production meter. Response content type is application/json.
        "550":
          content:
            text/event-stream:
              example:
                error:
                  code: 550
                  details:
                  - {}
                  message: "Service unreachable, please try again"
                  status: SERVICE_UNREACHABLE
                timestamp_epoch: 1677854252
                timestamp_utc: 2023-03-17 08:25:08.556
                type: server_error
              schema:
                $ref: '#/components/schemas/StreamSystemLiveData_550_response'
          description: Service unreachable. Response content type is application/json.
        "551":
          content:
            text/event-stream:
              example:
                error:
                  code: 551
                  details:
                  - {}
                  message: "Service unreachable, please try again"
                  status: SERVICE_UNREACHABLE
                timestamp_epoch: 1677854252
                timestamp_utc: 2023-03-17 08:25:08.556
                type: server_error
              schema:
                $ref: '#/components/schemas/StreamSystemLiveData_551_response'
          description: Service unreachable. Response content type is application/json.
        "552":
          content:
            text/event-stream:
              example:
                error:
                  code: 552
                  details:
                  - {}
                  message: "Unable to connect, please try again"
                  status: CONNECTION_NOT_ESTABLISHED
                timestamp_epoch: 1677854252
                timestamp_utc: 2023-03-17 08:25:08.556
                type: server_error
              schema:
                $ref: '#/components/schemas/StreamSystemLiveData_552_response'
          description: Unable to connect. Response content type is application/json.
      summary: Site Level Live Status
      tags:
      - Streaming APIs
components:
  parameters:
    SystemId:
      description: Unique numeric ID of the system.
      explode: false
      in: path
      name: system_id
      required: true
      schema:
        type: integer
      style: simple
  responses:
    UnauthorizedError:
      content:
        application/json:
          example:
            message: Not Authorized
            details: User is not authorized
            code: 401
          schema:
            $ref: '#/components/schemas/ClientError'
      description: Unauthorized
    ForbiddenError:
      content:
        application/json:
          example:
            message: Forbidden
            details: Not authorized to access this resource
            code: 403
          schema:
            $ref: '#/components/schemas/ClientError'
      description: Forbidden
    NotFoundError:
      content:
        application/json:
          example:
            message: Not Found
            details: "System not found for {:id=>\"1\"}"
            code: 404
          schema:
            $ref: '#/components/schemas/ClientError'
      description: Not Found
    MethodNotAllowedError:
      content:
        application/json:
          example:
            reason: "405"
            message:
            - Method not allowed
          schema:
            $ref: '#/components/schemas/MethodNotAllowedError'
      description: Method Not Allowed
    TooManyRequestsError:
      content:
        application/json:
          example:
            message: Too Many Requests
            details: Usage limit exceeded for plan Kilowatt
            code: 429
            period: minute
            period_start: 1623825660
            period_end: 1623825720
            limit: 5
          schema:
            $ref: '#/components/schemas/TooManyRequestsError'
      description: Too Many Requests
    InternalServerError:
      content:
        application/json:
          examples:
            InternalServerError:
              value:
                message: Internal Server Error
                details: "Problem parsing time. Is time passed correctly in the following\
                  \ fields {:start_date=>\"2019-08-33\", :end_at=>\"2019-08-29\"}"
                code: 500
            DataTemporarilyUnavailableError:
              value:
                errorCode: 7
                errorMessages:
                - Data is temporarily unavailable
          schema:
            $ref: '#/components/schemas/GetSystems_500_response'
      description: Internal Server Error
    NotImplementedError:
      content:
        application/json:
          example:
            reason: "501"
            message:
            - Not Implemented
          schema:
            $ref: '#/components/schemas/NotImplementedError'
      description: Not Implemented
  schemas:
    GetSystemsResponse:
      example:
        total: 28
        current_page: 1
        size: 2
        count: 2
        items: systems
        systems:
        - system_id: 698910067
          name: Enphase System
          public_name: Residential System
          timezone: Australia/Sydney
          address:
            city: Sydney
            state: NSW
            country: AU
            postal_code: "2127"
          connection_type: ethernet
          energy_lifetime: 0
          energy_today: 0
          system_size: 112.3
          status: micro
          last_report_at: 1508174262
          last_energy_at: 1508174172
          operational_at: 1497445200
          reference: "106015287"
          other_references:
          - "106015287"
        - system_id: 698906018
          name: Enphase Public System
          public_name: Residential System
          timezone: US/Pacific
          address:
            city: Los Angeles
            state: CA
            country: US
            postal_code: "94954"
          connection_type: ethernet
          energy_lifetime: 0
          energy_today: 0
          system_size: 0
          status: normal
          last_report_at: 1508174262
          last_energy_at: 1508174172
          operational_at: 1497445200
      properties:
        total:
          description: Total number of systems.
          type: integer
        current_page:
          description: Number of the current page fetched.
          type: integer
        size:
          description: "Maximum number of records shown per page. Default=10, Min=1,\
            \ Max=100."
          maximum: 100
          minimum: 1
          type: integer
        count:
          description: Total number of systems actually returned for the current page.
          type: integer
        items:
          description: "Named key of the list data. In this endpoint, it is systems."
          type: string
        systems:
          description: List of systems.
          items:
            $ref: '#/components/schemas/System'
          type: array
      type: object
    SearchSystemsRequest:
      example:
        system:
          connection_type: null
          name: name
          ids:
          - 0
          - 0
          statuses:
          - null
          - null
          public_name: null
        sort_by: null
      properties:
        system:
          $ref: '#/components/schemas/SearchSystemsRequest_system'
        sort_by:
          $ref: '#/components/schemas/SystemSortByEnum'
      required:
      - system
      type: object
    SearchSystemsResponse:
      example:
        total: 28
        current_page: 1
        size: 2
        count: 2
        items: systems
        systems:
        - system_id: 698910067
          name: Enphase System
          public_name: Residential System
          timezone: Australia/Sydney
          address:
            city: Sydney
            state: NSW
            country: AU
            postal_code: "2127"
          connection_type: ethernet
          energy_lifetime: 0
          energy_today: 0
          system_size: 112.3
          status: micro
          last_report_at: 1508174262
          last_energy_at: 1508174172
          operational_at: 1497445200
          reference: "106015287"
          other_references:
          - "106015287"
        - system_id: 698906018
          name: Enphase Public System
          public_name: Residential System
          timezone: US/Pacific
          address:
            city: Los Angeles
            state: CA
            country: US
            postal_code: "94954"
          connection_type: ethernet
          energy_lifetime: 0
          energy_today: 0
          system_size: 0
          status: normal
          last_report_at: 1508174262
          last_energy_at: 1508174172
          operational_at: 1497445200
      properties:
        total:
          description: Total number of systems available.
          type: integer
        current_page:
          description: Current page of the systems result. Default is 1.
          type: integer
        size:
          description: Max number of records from API per page is 100. Default is
            10.
          maximum: 100
          type: integer
        count:
          description: Total number of systems actually returned for the current page.
          type: integer
        items:
          description: "Named key of the list data. In this endpoint, it is systems."
          type: string
        systems:
          description: List of filtered systems.
          items:
            $ref: '#/components/schemas/System'
          type: array
      type: object
    GetSystemResponse:
      $ref: '#/components/schemas/System'
    GetSystemSummaryResponse:
      example:
        system_id: 698910067
        current_power: 0
        energy_lifetime: 0
        energy_today: 0
        last_report_at: 1557400231
        modules: 5
        size_w: 1250
        source: meter
        status: normal
        summary_date: 2019-05-12
      properties:
        system_id:
          description: Unique numeric ID of the system.
          type: integer
        current_power:
          description: Current power production of the system in Watts.
          type: integer
        energy_lifetime:
          description: Energy generated by the system during its lifetime in Wh.
          type: integer
        energy_today:
          description: Energy generated by the system today in Wh.
          type: integer
        last_interval_end_at:
          description: "Last known time that the system produced energy. When a system\
            \ has not been communicating for a length of time, the last_report_at\
            \ can be recent, whereas the last_interval_end_at may be further back."
          format: int64
          type: integer
        last_report_at:
          description: Timestamp (in epoch format) at which the system's Envoy last
            submitted a report.
          format: int64
          type: integer
        modules:
          description: Total number of modules in the system.
          type: integer
        operational_at:
          description: "Timestamp (in epoch format) at which this system became operational.\
            \ Corresponds to the system's interconnect time, if one is specified.\
            \ Otherwise, it is the system's first reported interval end time."
          format: int64
          type: integer
        size_w:
          description: System size in watts.
          type: integer
        source:
          description: Source of energy measurement.
          type: string
        status:
          $ref: '#/components/schemas/SystemStatusEnum'
        summary_date:
          description: Summary date.
          format: date
          type: string
      type: object
    GetSystemDevicesResponse:
      example:
        system_id: 698910067
        total_devices: 11
        items: devices
        devices:
          micros:
          - id: 1023273222
            last_report_at: 1508174262
            name: Microinverter  902167438951
            serial_number: "902167438951"
            part_number: 800-01333-r01
            sku: IQ8A-72-2-US
            model: M250
            status: normal
            active: true
          - id: 1023273243
            last_report_at: 1508174262
            name: Microinverter  902372021616
            serial_number: "902372021616"
            part_number: 800-01333-r01
            sku: IQ8A-72-2-US
            model: M250
            status: normal
            active: true
          meters:
          - id: 1059640322
            last_report_at: 1508174262
            name: production
            serial_number: 901553005272EIM1
            part_number: 800-00655-r08
            model: Envoy S
            status: normal
            active: true
            state: enabled
            config_type: Net
          - id: 1059640322
            last_report_at: 1508174262
            name: production
            serial_number: 901553005272EIM2
            part_number: 800-00655-r08
            model: Envoy S
            status: normal
            active: true
            state: enabled
            config_type: Production
          gateways:
          - id: 1059563029
            last_report_at: 1508174262
            name: Envoy 901553005272
            serial_number: "901553005272"
            part_number: 800-00655-r08
            emu_sw_version: D4.6.11.170403 (799d2d)
            sku: ENV-IQ-AM1-240
            model: Envoy-S-Standard-NA
            status: normal
            active: true
            cellular_modem:
              imei: "352009112238477"
              part_num: 860-00157-r01
              sku: CELLMODEM-M1
              plan_start_date: 1614796200
              plan_end_date: 1772562600
          q_relays:
          - id: 1059640316
            last_report_at: 1508174262
            name: Q Relay 912158973973
            serial_number: "912158973973"
            part_number: 800-00595-r01
            sku: Q-RELAY-1P-INT
            status: normal
            active: true
          - id: 1059640326
            last_report_at: 1508174262
            name: Q Relay 912163603334
            serial_number: "912163603334"
            part_number: 800-00595-r01
            sku: Q-RELAY-1P-INT
            status: normal
            active: true
          acbs:
          - id: 1059640321
            last_report_at: 1508174262
            name: AC Battery 911364446952
            serial_number: "911364446952"
            part_number: 800-00560-r03
            sku: IQ7-B1200-LN-I-INT01-RV0
            status: normal
            active: true
          - id: 1059640321
            last_report_at: 1508174262
            name: AC Battery 911499228280
            serial_number: "911499228280"
            part_number: 800-00560-r03
            sku: IQ7-B1200-LN-I-INT01-RV0
            status: normal
            active: true
          encharges:
          - id: 1059640295
            last_report_at: 1508174262
            name: Encharge 121593621979
            serial_number: "121593621979"
            part_number: 800-00562-r01
            sku: B03-A01-US00-1-3
            status: normal
            active: true
          enpowers:
          - id: 1059640294
            last_report_at: 1508174262
            name: Enpower 121245173988
            serial_number: "121245173988"
            part_number: 800-01135-r02
            sku: EP200G101-M240US00
            status: normal
            active: true
      properties:
        system_id:
          description: System ID.
          type: integer
        total_devices:
          description: Total active devices associated with the system.
          type: integer
        items:
          description: List key.
          type: string
        devices:
          additionalProperties:
            items:
              $ref: '#/components/schemas/GetSystemDevicesResponse_devices_value_inner'
            type: array
          description: "Hash keys include all the possible device types micros, meters,\
            \ gateways, mids, q_relays, ACBs, Encharges, Enpowers (if the devices\
            \ of this type are present). For all the device types, the object will\
            \ contain the serial_number and model with some additional information\
            \ pertaining to the device type."
          type: object
      type: object
    RetrieveSystemIdResponse:
      example:
        system_id: 123
      properties:
        system_id:
          description: Unique numeric ID of the system.
          type: integer
      type: object
    GetSystemProductionMeterReadingsResponse:
      example:
        system_id: 66
        meter_readings:
        - serial_num: 123123123123EIM1
          value: 6180635
          read_at: 1473901200
        meta:
          status: normal
          last_report_at: 1473902079
          last_energy_at: 1473901200
          operational_at: 1357023600
      properties:
        system_id:
          description: System ID.
          type: integer
        meter_readings:
          description: Production meter readings.
          items:
            $ref: '#/components/schemas/GetSystemProductionMeterReadingsResponse_meter_readings_inner'
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      type: object
    GetSystemRgmStatsResponse:
      example:
        system_id: 66
        total_devices: 2
        meta:
          status: normal
          last_report_at: 1470087000
          last_energy_at: 1470086106
          operational_at: 1357023600
        intervals:
        - end_at: 1384122700
          wh_del: 50
          devices_reporting: 2
        - end_at: 1384123600
          wh_del: 100
          devices_reporting: 2
        - end_at: 1384124500
          wh_del: 15
          devices_reporting: 2
        - end_at: 1384125400
          wh_del: 21
          devices_reporting: 2
        - end_at: 1384126300
          wh_del: 34
          devices_reporting: 2
        meter_intervals:
        - meter_serial_number: "1218676784"
          envoy_serial_number: "1218347675"
          intervals:
          - channel: 1
            end_at: 1384122700
            wh_del: 30.0
            curr_w: 120
          - channel: 1
            end_at: 1384123600
            wh_del: 50.0
            curr_w: 200
          - channel: 1
            end_at: 1384124500
            wh_del: 10.0
            curr_w: 40
          - channel: 1
            end_at: 1384125400
            wh_del: 10.0
            curr_w: 40
          - channel: 1
            end_at: 1384126300
            wh_del: 20.0
            curr_w: 80
        - meter_serial_number: "1218676791"
          envoy_serial_number: "1218347675"
          intervals:
          - channel: 1
            end_at: 1384122700
            wh_del: 20.0
            curr_w: 80
          - channel: 1
            end_at: 1384123600
            wh_del: 50.0
            curr_w: 200
          - channel: 1
            end_at: 1384124500
            wh_del: 5.0
            curr_w: 20
          - channel: 1
            end_at: 1384125400
            wh_del: 11.0
            curr_w: 44
          - channel: 1
            end_at: 1384126300
            wh_del: 14.0
            curr_w: 56
      properties:
        system_id:
          description: System ID.
          type: integer
        total_devices:
          description: Number of active revenue-grade meters for this system.
          type: integer
        meta:
          $ref: '#/components/schemas/Meta'
        intervals:
          description: A list of intervals between the requested start and end times.
          items:
            $ref: '#/components/schemas/GetSystemRgmStatsResponse_intervals_inner'
          type: array
        meter_intervals:
          description: A list of intervals of a meter between the requested start
            and end times.
          items:
            $ref: '#/components/schemas/GetSystemRgmStatsResponse_meter_intervals_inner'
          type: array
      type: object
    GetSystemConsumptionLifetimeResponse:
      example:
        system_id: 66
        start_date: 2016-08-01
        consumption:
        - 15422
        - 15421
        - 17118
        - 18505
        - 18511
        - 18487
        meta:
          status: normal
          last_report_at: 1470087000
          last_energy_at: 1470086106
          operational_at: 1357023600
      properties:
        system_id:
          description: Unique numeric ID of the system.
          type: integer
        start_date:
          description: "When no start_date parameter is specified on the request,\
            \ defaults to the operational_date of the system. May be null if system\
            \ has never produced. When a start_date parameter is included in the request,\
            \ the same is included in the response."
          format: date
          type: string
        consumption:
          description: "An array of consumption measurements in Wh, one for each day\
            \ since consumption metering began, or one for each day of the requested\
            \ period."
          items:
            type: integer
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      type: object
    GetSystemEnergyLifetimeResponse:
      example:
        system_id: 66
        start_date: 2013-01-01
        meter_start_date: 2013-01-04
        production:
        - 15422
        - 15421
        - 17118
        - 18505
        - 18511
        - 18487
        micro_production:
        - 15422
        - 15421
        - 17118
        - 18513
        - 18520
        - 18494
        meter_production:
        - 0
        - 0
        - 11388
        - 18505
        - 18511
        - 18487
        meta:
          status: normal
          last_report_at: 1445619615
          last_energy_at: 1445619033
          operational_at: 1357023600
      properties:
        system_id:
          description: System ID.
          type: integer
        start_date:
          description: "When no start_date parameter is specified on the request,\
            \ this is the operational_date of the system. May be null if system has\
            \ never produced. When a start_date parameter is included in the request,\
            \ it is included here in the response."
          format: date
          type: string
        meter_start_date:
          description: First day in the time series when measurements are taken from
            a meter instead of from microinverters. This field is not present unless
            the system has a meter.
          format: date
          type: string
        production:
          description: "An array of production measurements, one for each day since\
            \ the system started producing, or one for each day of the requested period.\
            \ If the system has never produced energy, the array may be empty."
          items:
            type: integer
          type: array
        micro_production:
          items:
            type: integer
          type: array
        meter_production:
          items:
            type: integer
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      type: object
    GetSystemBatteryLifetimeResponse:
      example:
        system_id: 66
        start_date: 2016-08-01
        discharge:
        - 15422
        - 15421
        - 17118
        - 18505
        - 18511
        - 18487
        charge:
        - 15422
        - 15421
        - 17118
        - 18505
        - 18511
        - 18487
        meta:
          status: normal
          last_report_at: 1470087000
          last_energy_at: 1470086106
          operational_at: 1357023600
      properties:
        system_id:
          description: Unique numeric ID of the system.
          type: integer
        start_date:
          description: "When no start_date parameter is specified on the request,\
            \ defaults to the operational_date of the system. May be null if system\
            \ has never produced. When a start_date parameter is included in the request,\
            \ the same is included in the response."
          format: date
          type: string
        charge:
          description: "An array of charge measurements, one for each day since the\
            \ system started producing, or one for each day of the requested period.\
            \ If the system has never produced energy, the array may be empty."
          items:
            type: integer
          type: array
        discharge:
          description: "An array of discharge measurements, one for each day since\
            \ the system started producing, or one for each day of the requested period.\
            \ If the system has never produced energy, the array may be empty."
          items:
            type: integer
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      type: object
    GetSystemEnergyImportLifetimeResponse:
      example:
        system_id: 66
        start_date: 2016-08-01
        import:
        - 15422
        - 15421
        - 17118
        - 18505
        - 18511
        - 18487
        meta:
          status: normal
          last_report_at: 1470087000
          last_energy_at: 1470086106
          operational_at: 1357023600
      properties:
        system_id:
          description: Unique numeric ID of the system.
          type: integer
        start_date:
          description: "When no start_date parameter is specified on the request,\
            \ defaults to the operational_date of the system. May be null if system\
            \ has never produced. When a start_date parameter is included in the request,\
            \ the same is included in the response."
          format: date
          type: string
        import:
          description: "An array of import measurements, one for each day since the\
            \ system started producing, or one for each day of the requested period.\
            \ If the system has never produced energy, the array may be empty."
          items:
            type: integer
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      type: object
    GetSystemEnergyExportLifetimeResponse:
      example:
        system_id: 66
        start_date: 2016-08-01
        export:
        - 15422
        - 15421
        - 17118
        - 18505
        - 18511
        - 18487
        meta:
          status: normal
          last_report_at: 1470087000
          last_energy_at: 1470086106
          operational_at: 1357023600
      properties:
        system_id:
          description: Unique numeric ID of the system.
          type: integer
        start_date:
          description: "When no start_date parameter is specified on the request,\
            \ defaults to the operational_date of the system. May be null if system\
            \ has never produced. When a start_date parameter is included in the request,\
            \ the same is included in the response."
          format: date
          type: string
        export:
          description: "An array of export measurements, one for each day since the\
            \ system started producing, or one for each day of the requested period.\
            \ If the system has never produced energy, the array may be empty."
          items:
            type: integer
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      type: object
    GetInvertersSummaryByEnvoyOrSiteResponse:
      example:
      - signal_strength: 5
        micro_inverters:
        - id: 1059689835
          serial_number: "688346865858"
          model: M215
          part_number: 800-00107-r01
          sku: M215-60-2LL-S22-NA
          status: normal
          power_produced:
            value: 96
            units: W
            precision: 0
          proc_load: 521-00005-r00-v02.32.01
          param_table: 549-00018-r00-v02.32.01
          envoy_serial_number: "121842012242"
          energy:
            value: 232
            units: Wh
            precision: 0
          grid_profile: 57227c50e4d7973ae602c4e6
          last_report_date: 2020-09-18T11:17:23-04:00
        - id: 1059689836
          serial_number: "686868727227"
          model: M215
          part_number: 800-00107-r01
          sku: M215-60-2LL-S22-NA
          status: normal
          power_produced: 20
          proc_load: 521-00005-r00-v02.32.01
          param_table: 549-00018-r00-v02.32.01
          envoy_serial_number: "121842012242"
          energy:
            value: 120
            units: Wh
            precision: 0
          grid_profile: 57227c50e4d7973ae602c4e6
          last_report_date: 2020-09-18T11:17:23-04:00
      items:
        $ref: '#/components/schemas/GetInvertersSummaryByEnvoyOrSiteResponse_inner'
      type: array
    GetSystemProductionMicroTelemetryResponse:
      example:
        system_id: 698905955
        granularity: day
        total_devices: 9
        start_at: 1496526300
        end_at: 1496528300
        items: intervals
        intervals:
        - end_at: 1384122700
          devices_reporting: 1
          powr: 30
          enwh: 40
        - end_at: 1384123600
          devices_reporting: 1
          powr: 20
          enwh: 40
        meta:
          status: normal
          last_report_at: 1445619615
          last_energy_at: 1445619033
          operational_at: 1357023600
      properties:
        system_id:
          description: Unique numeric ID of the system.
          type: integer
        granularity:
          $ref: '#/components/schemas/TelemetryGranularityEnum'
        total_devices:
          description: Number of micro inverters in the site.
          type: integer
        start_at:
          description: Start time of the data series. Either start_date or start_at
            will be present. By default start_at will appear in response. If start_date
            parameter is passed in the url then start_date field will appear in response.
          format: int64
          type: integer
        end_at:
          description: End time of the data series. Either end_date or end_at will
            be present. By default end_at will appear in response. If end_date parameter
            is passed in the url then end_date field will appear in response.
          format: int64
          type: integer
        items:
          description: List key 'intervals'.
          type: string
        intervals:
          description: An array of telemetry objects.
          items:
            $ref: '#/components/schemas/GetSystemProductionMicroTelemetryResponse_intervals_inner'
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      type: object
    GetSystemProductionMeterTelemetryResponse:
      example:
        system_id: 698905955
        granularity: day
        total_devices: 9
        start_at: 1496526300
        end_at: 1496529300
        items: intervals
        intervals:
        - end_at: 1384122700
          devices_reporting: 1
          wh_del: 40
        - end_at: 1384123600
          devices_reporting: 1
          wh_del: 40
      properties:
        system_id:
          description: Unique numeric ID of the system.
          type: integer
        granularity:
          $ref: '#/components/schemas/TelemetryGranularityEnum'
        total_devices:
          description: Number of production meters in the site.
          type: integer
        start_at:
          description: Start time of the data series. Either start_date or start_at
            will be present. By default start_at will appear in response. If start_date
            parameter is passed in the url then start_date field will appear in response.
          format: int64
          type: integer
        end_at:
          description: End time of the data series. Either end_date or end_at will
            be present. By default end_at will appear in response. If end_date parameter
            is passed in the url then end_date field will appear in response.
          format: int64
          type: integer
        items:
          description: List key 'intervals'.
          type: string
        intervals:
          items:
            $ref: '#/components/schemas/GetSystemProductionMeterTelemetryResponse_intervals_inner'
          type: array
      type: object
    GetSystemBatteryTelemetryResponse:
      example:
        system_id: 698905955
        granularity: day
        total_devices: 9
        start_at: 1496526300
        end_at: 1496529300
        items: intervals
        intervals:
        - end_at: 1384122700
          charge:
            enwh: 40
            devices_reporting: 1
          discharge:
            enwh: 0
            devices_reporting: 4
          soc:
            percent: 25
            devices_reporting: 4
        last_reported_aggregate_soc: 97%
      properties:
        system_id:
          description: Unique numeric ID of the system.
          type: integer
        granularity:
          $ref: '#/components/schemas/TelemetryGranularityEnum'
        total_devices:
          description: Number of batteries in the site.
          type: integer
        start_at:
          description: Start time of the data series. Either start_date or start_at
            will be present. By default start_at will appear in response. If start_date
            parameter is passed in the url then start_date field will appear in response.
          format: int64
          type: integer
        end_at:
          description: End time of the data series. Either end_date or end_at will
            be present. By default end_at will appear in response. If end_date parameter
            is passed in the url then end_date field will appear in response.
          format: int64
          type: integer
        items:
          description: List key 'intervals'.
          type: string
        intervals:
          items:
            $ref: '#/components/schemas/GetSystemBatteryTelemetryResponse_intervals_inner'
          type: array
        last_reported_aggregate_soc:
          description: Last reported aggregate soc percentage.
          type: string
      type: object
    GetSystemConsumptionMeterTelemetryResponse:
      example:
        system_id: 698905955
        granularity: day
        total_devices: 9
        start_at: 1496526300
        end_at: 1496529300
        items: intervals
        intervals:
        - end_at: 1384122700
          devices_reporting: 1
          enwh: 40
        - end_at: 1384123600
          devices_reporting: 1
          enwh: 40
        meta:
          status: normal
          last_report_at: 1445619615
          last_energy_at: 1445619033
          operational_at: 1357023600
      properties:
        system_id:
          description: Unique numeric ID of the system.
          type: integer
        granularity:
          $ref: '#/components/schemas/TelemetryGranularityEnum'
        total_devices:
          description: Number of non-retired consumption meters in the site.
          type: integer
        start_at:
          description: Start time of the data series. Either start_date or start_at
            will be present. By default start_at will appear in response. If start_date
            parameter is passed in the url then start_date field will appear in response.
          format: int64
          type: integer
        end_at:
          description: End time of the data series. Either end_date or end_at will
            be present. By default end_at will appear in response. If end_date parameter
            is passed in the url then end_date field will appear in response.
          format: int64
          type: integer
        items:
          description: List key 'intervals'.
          type: string
        intervals:
          items:
            $ref: '#/components/schemas/GetSystemConsumptionMeterTelemetryResponse_intervals_inner'
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      type: object
    GetSystemMicroDeviceTelemetryResponse:
      example:
        system_id: 1765
        serial_number: "12345"
        granularity: day
        total_devices: 1
        start_at: 1496526300
        end_at: 1496529300
        items: intervals
        intervals:
        - end_at: 1496526300
          powr: 30
          enwh: 40
        - end_at: 1496526600
          powr: 20
          enwh: 40
      properties:
        system_id:
          description: Unique numeric ID of the system.
          type: integer
        serial_number:
          description: Device serial number.
          type: string
        granularity:
          $ref: '#/components/schemas/TelemetryGranularityEnum'
        total_devices:
          description: Shall always be 1 since this is telemetry from individual micros.
          type: integer
        start_at:
          description: Start time of the data series. Either start_date or start_at
            will be present. By default start_at will appear in response. If start_date
            parameter passed in the url then start_date field will appear in response.
          format: int64
          type: integer
        end_at:
          description: End time of the data series. Either end_date or end_at will
            be present. By default end_at will appear in response. If end_date parameter
            passed in the url then end_date field will appear in response.
          format: int64
          type: integer
        items:
          description: List key 'intervals'.
          type: string
        intervals:
          items:
            $ref: '#/components/schemas/GetSystemMicroDeviceTelemetryResponse_intervals_inner'
          type: array
      type: object
    GetSystemAcbDeviceTelemetryResponse:
      $ref: '#/components/schemas/BatteryDeviceTelemetry'
    GetSystemEnchargeDeviceTelemetryResponse:
      $ref: '#/components/schemas/BatteryDeviceTelemetry'
    GetSystemBatterySettingsResponse:
      $ref: '#/components/schemas/BatterySettings'
    UpdateSystemBatterySettingsRequest:
      example:
        reserve_soc: 0
        battery_mode: battery_mode
        energy_independence: energy_independence
      properties:
        battery_mode:
          description: "To update battery mode of the system (case sensitive). Available\
            \ values are Savings Mode, Self-consumption, Full Backup."
          type: string
        reserve_soc:
          description: Reserve soc for the current mode. Cannot be less than vls.
          type: integer
        energy_independence:
          description: |-
            Energy independence after peak hours "enabled"/"disabled".
            Enabled: Battery will discharge to save money during peak hours when electricity rates are high. Once that is done, energy independence is prioritized.
            This will increase the energy self-sufficiency until the reserve soc is hit. Battery will charge from solar in the morning to get ready for the next period.
            Disabled: Battery will discharge only during peak hours when electricity rates are high.
            During other times, battery will be idle or will charge from solar in the morning to get ready for the next period.
          type: string
      type: object
    UpdateSystemBatterySettingsResponse:
      $ref: '#/components/schemas/BatterySettings'
    GetSystemStormGuardSettingsResponse:
      $ref: '#/components/schemas/StormGuardSettings'
    UpdateSystemStormGuardSettingsRequest:
      example:
        storm_guard_status: storm_guard_status
      properties:
        storm_guard_status:
          description: "Overrides your battery profile to full backup mode when a\
            \ severe weather condition alert is issued in the locality. Available\
            \ values are enabled, disabled."
          type: string
      required:
      - storm_guard_status
      type: object
    UpdateSystemStormGuardSettingsResponse:
      $ref: '#/components/schemas/StormGuardSettings'
    GetSystemGridStatusSettingsResponse:
      example:
        system_id: 1765
        grid_state: On Grid
        last_report_date: 1676029267
      properties:
        system_id:
          type: integer
        grid_state:
          description: "Indicates whether the site is On Grid, Off Grid or grid status\
            \ of site is Unknown."
          type: string
        last_report_date:
          description: Timestamp (in epoch format) at which the system's Envoy last
            submitted a report.
          format: date-time
          type: integer
      type: object
    GetSystemLoadControlSettingsResponse:
      $ref: '#/components/schemas/LoadControlSettings'
    UpdateSystemLoadControlSettingsRequest:
      example:
        mode: mode
        load_name: load_name
        name: name
        essential_start_time: 6
        soc_low: 16
        essential_end_time: 1
      properties:
        name:
          description: Name of the dry contact. Name cannot be changed. It is only
            used to identify the dry contact that needs to be updated.
          type: string
        load_name:
          description: Load Name of the load. Load Name cannot be changed. It is only
            used to identify the dry contact that needs to be updated.
          type: string
        mode:
          description: "Mode. Available values are \"Scheduled\", \"Basic\", \"Advanced_BatteryPowered\"\
            , \"Manual_always_not_powered\", \"Manual_always_powered\", \"Advanced_GeneratorPowered\"\
            ."
          type: string
        soc_low:
          description: Applicable for advanced mode. Load will be powered off when
            the battery soc reaches this level. It can be between 10 to 90.
          maximum: 90
          minimum: 10
          type: integer
        essential_start_time:
          description: Applicable for scheduled mode. Time in seconds. Load will powered
            on between essential_start_time and essential_end_time.
          type: integer
        essential_end_time:
          description: Applicable for scheduled mode. Time in seconds. Load will powered
            on between essential_start_time and essential_end_time.
          type: integer
      required:
      - name
      type: object
    UpdateSystemLoadControlSettingsResponse:
      $ref: '#/components/schemas/LoadControlSettings'
    GetSystemEnergyImportTelemetryResponse:
      example:
        system_id: 698905955
        granularity: day
        total_devices: 1
        start_at: 1496526300
        end_at: 1496528300
        items: intervals
        intervals:
        - end_at: 1384122700
          wh_imported: 40
        - end_at: 1384123600
          wh_imported: 40
        meta:
          status: normal
          last_report_at: 1445619615
          last_energy_at: 1445619033
          operational_at: 1357023600
      properties:
        system_id:
          description: Unique numeric ID of the system.
          type: integer
        granularity:
          description: Granularity of the telemetry data. Default is 'day'.
          type: string
        total_devices:
          description: Number of consumption meters in the site.
          type: integer
        start_at:
          description: Start time of the data series. Either start_date or start_at
            will be present. By default start_at will appear in response. If start_date
            parameter is passed in the url then start_date field will appear in response.
          format: int64
          type: integer
        end_at:
          description: End time of the data series. Either end_date or end_at will
            be present. By default end_at will appear in response. If end_date parameter
            is passed in the url then end_date field will appear in response.
          format: int64
          type: integer
        items:
          description: List key 'intervals'.
          type: string
        intervals:
          description: An array of telemetry objects.
          items:
            items:
              $ref: '#/components/schemas/GetSystemEnergyImportTelemetryResponse_intervals_inner_inner'
            type: array
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      type: object
    GetSystemEnergyExportTelemetryResponse:
      example:
        system_id: 698905955
        granularity: day
        total_devices: 1
        start_at: 1496526300
        end_at: 1496528300
        items: intervals
        intervals:
        - end_at: 1384122700
          wh_exported: 40
        - end_at: 1384123600
          wh_exported: 40
        meta:
          status: normal
          last_report_at: 1445619615
          last_energy_at: 1445619033
          operational_at: 1357023600
      properties:
        system_id:
          description: Unique numeric ID of the system.
          type: integer
        granularity:
          description: Granularity of the telemetry data. Default is 'day'.
          type: string
        total_devices:
          description: Number of production meters in the site.
          type: integer
        start_at:
          description: Start time of the data series. Either start_date or start_at
            will be present. By default start_at will appear in response. If start_date
            parameter is passed in the url then start_date field will appear in response.
          format: int64
          type: integer
        end_at:
          description: End time of the data series. Either end_date or end_at will
            be present. By default end_at will appear in response. If end_date parameter
            is passed in the url then end_date field will appear in response.
          format: int64
          type: integer
        items:
          description: List key 'intervals'.
          type: string
        intervals:
          description: An array of telemetry objects.
          items:
            items:
              $ref: '#/components/schemas/GetSystemEnergyExportTelemetryResponse_intervals_inner_inner'
            type: array
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      type: object
    System:
      example:
        system_id: 72
        name: Enphase System
        public_name: Residential System
        timezone: America/Los_Angeles
        address:
          city: Los Angeles
          state: CA
          country: US
          postal_code: "94954"
        connection_type: cellular
        energy_lifetime: 0
        energy_today: 0
        system_size: 112.3
        status: normal
        last_report_at: 1445619615
        last_energy_at: 1445619033
        operational_at: 1357023600
        attachment_type: acm
        interconnect_date: 2012-10-13
        reference: "106015287"
        other_references:
        - "106015287"
      properties:
        system_id:
          description: Unique numeric ID of the system.
          type: integer
        name:
          description: Name of the system.
          type: string
        public_name:
          description: "Name displayed on the public system page. Available values\
            \ are All, Residential System, Commercial etc. Default='Residential System'.\
            \ Only for systems that allow public access."
          type: string
        timezone:
          description: Timezone to which the system belongs.
          type: string
        address:
          $ref: '#/components/schemas/System_address'
        connection_type:
          $ref: '#/components/schemas/SystemConnectionTypeEnum'
        energy_lifetime:
          description: Energy generated by the system during its lifetime in Wh. It
            is returned only if the count is less than or equal to 100.
          type: integer
        energy_today:
          description: Energy generated by the system today in Wh. It is returned
            only if the count is less than or equal to 100.
          type: integer
        system_size:
          description: Size of the system. It is returned only if the count is less
            than or equal to 100.
          type: integer
        status:
          $ref: '#/components/schemas/SystemStatusEnum'
        last_report_at:
          description: Timestamp (in epoch format) at which the system's Envoy last
            submitted a report.
          format: int64
          type: integer
        last_energy_at:
          description: "Timestamp (in epoch format) at which the system's produced\
            \ energy was last reported. Even if the last produced energy is 0, its\
            \ timestamp will be returned."
          format: int64
          type: integer
        operational_at:
          description: "Timestamp (in epoch format) at which this system became operational.\
            \ Corresponds to the system's interconnect time, if one is specified.\
            \ Otherwise, it is the system's first reported interval end time."
          format: int64
          type: integer
        attachment_type:
          $ref: '#/components/schemas/SystemAttachmentTypeEnum'
        interconnect_date:
          description: Date on which the system was approved to connect to the grid.
          format: date
          type: string
        reference:
          description: "If the calling user belongs to a company and that company\
            \ has provided its own identifier for a system, that ID is included here.\
            \ Otherwise, this attribute is not returned."
          type: string
        other_references:
          description: "If any other companies have provided their own identifiers\
            \ for a system, those identifiers are included here. Otherwise, this attribute\
            \ is not returned."
          items:
            type: string
          type: array
      type: object
    Meta:
      description: "Information about the system such as its status, when it became\
        \ operational and last reported to Envoy."
      properties:
        status:
          $ref: '#/components/schemas/SystemStatusEnum'
        last_report_at:
          description: Timestamp (in epoch format) at which the system's Envoy last
            submitted a report.
          type: integer
        last_energy_at:
          description: "Timestamp (in epoch format) at which the system's produced\
            \ energy was last reported. Even if the last produced energy is 0, its\
            \ timestamp will be returned."
          type: integer
        operational_at:
          description: "Timestamp (in epoch format) at which this system became operational.\
            \ Corresponds to the system's interconnect time, if one is specified.\
            \ Otherwise, it is the system's first reported interval end time."
          type: integer
      type: object
    BatteryDeviceTelemetry:
      example:
        system_id: 1765
        serial_number: "12345"
        granularity: day
        total_devices: 1
        start_at: 1496526300
        end_at: 1496529300
        items: intervals
        intervals:
        - end_at: 1384122700
          charge:
            enwh: 40
          discharge:
            enwh: 0
          soc:
            percent: 25
        last_reported_time: 1650349170
        last_reported_soc: 99%
      properties:
        system_id:
          description: System ID.
          type: integer
        serial_number:
          description: Device serial number.
          type: string
        granularity:
          $ref: '#/components/schemas/TelemetryGranularityEnum'
        total_devices:
          description: Shall always be 1 since this is telemetry from individual micros.
          type: integer
        start_at:
          description: Start time of the data series. Either start_date or start_at
            will be present. By default start_at will appear in response. If start_date
            parameter passed in the url then start_date field will appear in response.
          format: int64
          type: integer
        end_at:
          description: End time of the data series. Either end_date or end_at will
            be present. By default end_at will appear in response. If end_date parameter
            passed in the url then end_date field will appear in response.
          format: int64
          type: integer
        items:
          description: List key 'intervals'.
          type: string
        intervals:
          items:
            $ref: '#/components/schemas/BatteryDeviceTelemetry_intervals_inner'
          type: array
        last_reported_time:
          description: Last reported timestamp.
          type: integer
        last_reported_soc:
          description: Last reported soc percentage.
          type: string
      type: object
    BatterySettings:
      example:
        system_id: 1765
        battery_mode: Self - Consumption
        reserve_soc: 95
        energy_independence: enabled
        charge_from_grid: disabled
        battery_shutdown_level: 13
      properties:
        system_id:
          type: integer
        battery_mode:
          description: "Current battery mode of the system. Available values are Savings\
            \ Mode, Full Backup, and Self - Consumption."
          type: string
        reserve_soc:
          description: Reserve soc for the current mode.
          type: integer
        energy_independence:
          description: |-
            Energy independence after peak hours enabled/disabled.
            Enabled: Battery will discharge to save money during peak hours when electricity rates are high. Once that is done, energy independence is prioritized.
            This will increase the energy self-sufficiency until the reserve soc is hit. Battery will charge from solar in the morning to get ready for the next period.
            Disabled: Battery will discharge only during peak hours when electricity rates are high.
            During other times, battery will be idle or will charge from solar in the morning to get ready for the next period.
          type: string
        charge_from_grid:
          description: |-
            Charge battery from grid enabled/disabled.
            Enabled: Battery may also charge from the grid when in full backup mode or when battery charge is below the reserve capacity in savings or self-consumption mode.
          type: string
        battery_shutdown_level:
          description: Level at which battery shutdowns to conserve energy. Battery
            restarts by using the conserved energy when the utility grid restores
            power or solar panels start producing energy.
          type: integer
      type: object
    StormGuardSettings:
      example:
        system_id: 1765
        storm_guard_status: enabled
        storm_alert: false
      properties:
        system_id:
          type: integer
        storm_guard_status:
          description: Overrides your battery profile to full backup mode when a severe
            weather condition alert is issued in the locality.
          type: string
        storm_alert:
          description: True if severe weather condition alert is issued in the locality.
          type: boolean
      type: object
    LoadControlSettings:
      example:
        system_id: 1932237
        load_control_data:
        - name: NC1
          load_name: Downstairs A/C
          owner_can_override: true
          mode: Basic
          soc_low: 30
          soc_high: 50
          status: enabled
          essential_start_time: 32400
          essential_end_time: 57600
        - name: NC2
          load_name: Upstairs A/C
          owner_can_override: true
          mode: Basic
          soc_low: 30
          soc_high: 50
          status: enabled
          essential_start_time: 32400
          essential_end_time: 57600
      properties:
        system_id:
          type: integer
        load_control_data:
          description: Load control data for all the configured loads.
          items:
            $ref: '#/components/schemas/LoadControlSettings_load_control_data_inner'
          type: array
      type: object
    StreamSystemLiveDataResponse:
      example:
        data:
          data:
            battery_mode: Savings Mode
            battery_power: 5
            battery_soc: 40
            consumption_power: 15
            envoy_serial_number:
            - "1234"
            generator_power: 0
            grid_power: -10
            grid_status: On Grid
            pv_power: 30
            system_id: 123
          timestamp_epoch: 1679041508556
          timestamp_utc: 2023-03-17 08:25:08.556
          type: response
      properties:
        data:
          $ref: '#/components/schemas/StreamSystemLiveDataResponse_data'
      type: object
    SystemSortByEnum:
      description: "Returns list of systems sorted by <sort_by> field. To get ASC\
        \ order sorted list, user sort_by = <key>. To get DESC order sorted list,\
        \ use sort_by = (-)<key>. Current sort keys supported are id, name, and last_report_date.\
        \ By default the list is sorted by decreasing system ID."
      enum:
      - id
      - name
      - last_report_date
      - -id
      - -name
      - -last_report_date
      type: string
    TelemetryGranularityEnum:
      description: Granularity of the telemetry data. Default is 'day'.
      enum:
      - 15mins
      - day
      - week
      type: string
    SystemPublicNameEnum:
      description: Name displayed on the public system page. Default=residential.
        Only for systems that allow public access.
      enum:
      - residential
      - all
      - commercial
      - other
      type: string
    SystemStatusEnum:
      enum:
      - deactivated
      - normal
      - comm
      - micro
      - power
      - meter
      - meter_issue
      - battery
      - storage_idle
      - encharge
      - encharge_issue
      - enpower
      - enpower_issue
      - retired
      - not_monitored
      - unused
      - disabled
      - debug
      - info
      - monitored
      - muted
      - warning
      - error
      - no_data
      - rma
      - unknown
      - nsr
      - any
      - data_upload
      - on_grid
      - off_grid
      - grid_unknown
      type: string
    SystemConnectionTypeEnum:
      description: Connection type of the system.
      enum:
      - wifi
      - cellular
      - ethernet
      type: string
    SystemAttachmentTypeEnum:
      description: Micro inverter attachment type.
      enum:
      - rack_mount
      - zep
      - acm
      - bipv
      - frame_mount
      - railless_mount
      type: string
    SystemEnergyLifetimeProductionEnum:
      enum:
      - all
      type: string
    ClientError:
      properties:
        message:
          description: Error type.
          type: string
        details:
          description: Error details.
          type: string
        code:
          description: Error code.
          type: integer
      type: object
    MethodNotAllowedError:
      properties:
        reason:
          type: string
        message:
          items:
            type: string
          type: array
      type: object
    TooManyRequestsError:
      properties:
        message:
          description: Error type.
          type: string
        details:
          description: Error details.
          type: string
        code:
          description: Error code.
          type: integer
        period:
          description: Quota exceeded for minute/month.
          type: string
        period_start:
          description: Starting period timestamp.
          type: integer
        period_end:
          description: Ending period timestamp.
          type: integer
        limit:
          description: Limit count for the period.
          type: integer
      type: object
    InternalServerError:
      properties:
        reason:
          type: string
        message:
          items:
            type: string
          type: array
      type: object
    DataTemporarilyUnavailableError:
      properties:
        errorCode:
          description: Error code.
          type: integer
        errorMessages:
          description: Error messages.
          items:
            type: string
          type: array
      type: object
    NotImplementedError:
      properties:
        message:
          description: Error type.
          type: string
        details:
          description: Error details.
          type: string
        code:
          description: Error code.
          type: integer
      type: object
    GetSystems_500_response:
      oneOf:
      - $ref: '#/components/schemas/InternalServerError'
      - $ref: '#/components/schemas/DataTemporarilyUnavailableError'
    StreamSystemLiveData_401_response_error:
      properties:
        code:
          description: "401"
          type: integer
        details:
          items:
            properties: {}
            type: object
          type: array
        message:
          description: API Key is missing.
          type: string
        status:
          description: NOT_AUTHENTICATED
          type: string
      type: object
    StreamSystemLiveData_401_response:
      properties:
        error:
          $ref: '#/components/schemas/StreamSystemLiveData_401_response_error'
        timestamp_epoch:
          description: Timestamp in epoch format.
          type: integer
        timestamp_utc:
          description: Timestamp in UTC format.
          type: string
        type:
          description: authentication_error
          type: string
      type: object
    StreamSystemLiveData_403_response_error:
      properties:
        code:
          description: "403"
          type: integer
        details:
          items:
            properties: {}
            type: object
          type: array
        message:
          description: API Key is invalid.
          type: string
        status:
          description: FORBIDDEN
          type: string
      type: object
    StreamSystemLiveData_403_response:
      properties:
        error:
          $ref: '#/components/schemas/StreamSystemLiveData_403_response_error'
        timestamp_epoch:
          description: Timestamp in epoch format.
          type: integer
        timestamp_utc:
          description: Timestamp in UTC format.
          type: string
        type:
          description: authorization_error
          type: string
      type: object
    StreamSystemLiveData_429_response_error:
      properties:
        code:
          description: "429"
          type: integer
        details:
          items:
            properties: {}
            type: object
          type: array
        message:
          description: Too Many Requests.
          type: string
        status:
          description: TOO_MANY_REQUESTS
          type: string
      type: object
    StreamSystemLiveData_429_response:
      properties:
        error:
          $ref: '#/components/schemas/StreamSystemLiveData_429_response_error'
        timestamp_epoch:
          description: Timestamp in epoch format.
          type: integer
        timestamp_utc:
          description: Timestamp in UTC format.
          type: string
        type:
          description: request_exceeded_error
          type: string
      type: object
    StreamSystemLiveData_461_response_error:
      properties:
        code:
          description: "461"
          type: integer
        details:
          items:
            properties: {}
            type: object
          type: array
        message:
          description: Duration cannot be less than 30.
          type: string
        status:
          description: INVALID_DURATION
          type: string
      type: object
    StreamSystemLiveData_461_response:
      properties:
        error:
          $ref: '#/components/schemas/StreamSystemLiveData_461_response_error'
        timestamp_epoch:
          description: Timestamp in epoch format.
          type: integer
        timestamp_utc:
          description: Timestamp in UTC format.
          type: string
        type:
          description: validation_error
          type: string
      type: object
    StreamSystemLiveData_462_response_error:
      properties:
        code:
          description: "462"
          type: integer
        details:
          items:
            properties: {}
            type: object
          type: array
        message:
          description: Duration cannot be greater than 900.
          type: string
        status:
          description: INVALID_DURATION
          type: string
      type: object
    StreamSystemLiveData_462_response:
      properties:
        error:
          $ref: '#/components/schemas/StreamSystemLiveData_462_response_error'
        timestamp_epoch:
          description: Timestamp in epoch format.
          type: integer
        timestamp_utc:
          description: Timestamp in UTC format.
          type: string
        type:
          description: validation_error
          type: string
      type: object
    StreamSystemLiveData_463_response_error:
      properties:
        code:
          description: "463"
          type: integer
        details:
          items:
            properties: {}
            type: object
          type: array
        message:
          description: Duration must be an integer.
          type: string
        status:
          description: INVALID_DURATION
          type: string
      type: object
    StreamSystemLiveData_463_response:
      properties:
        error:
          $ref: '#/components/schemas/StreamSystemLiveData_463_response_error'
        timestamp_epoch:
          description: Timestamp in epoch format.
          type: integer
        timestamp_utc:
          description: Timestamp in UTC format.
          type: string
        type:
          description: validation_error
          type: string
      type: object
    StreamSystemLiveData_466_response_error:
      properties:
        code:
          description: "466"
          type: integer
        details:
          items:
            properties: {}
            type: object
          type: array
        message:
          description: Envoy must be active and envoy version must be at least 6.0.0.
          type: string
        status:
          description: UNSUPPORTED_ENVOY
          type: string
      type: object
    StreamSystemLiveData_466_response:
      properties:
        error:
          $ref: '#/components/schemas/StreamSystemLiveData_466_response_error'
        timestamp_epoch:
          description: Timestamp in epoch format.
          type: integer
        timestamp_utc:
          description: Timestamp in UTC format.
          type: string
        type:
          description: validation_error
          type: string
      type: object
    StreamSystemLiveData_468_response_error:
      properties:
        code:
          description: "468"
          type: integer
        details:
          items:
            properties: {}
            type: object
          type: array
        message:
          description: System ID doesn't exist.
          type: string
        status:
          description: INVALID_SYSTEM_ID
          type: string
      type: object
    StreamSystemLiveData_468_response:
      properties:
        error:
          $ref: '#/components/schemas/StreamSystemLiveData_468_response_error'
        timestamp_epoch:
          description: Timestamp in epoch format.
          type: integer
        timestamp_utc:
          description: Timestamp in UTC format.
          type: string
        type:
          description: validation_error
          type: string
      type: object
    StreamSystemLiveData_472_response_error:
      properties:
        code:
          description: "472"
          type: integer
        details:
          items:
            properties: {}
            type: object
          type: array
        message:
          description: The system doesn't support live stream.
          type: string
        status:
          description: LIVE_STREAM_NOT_SUPPORTED
          type: string
      type: object
    StreamSystemLiveData_472_response:
      properties:
        error:
          $ref: '#/components/schemas/StreamSystemLiveData_472_response_error'
        timestamp_epoch:
          description: Timestamp in epoch format.
          type: integer
        timestamp_utc:
          description: Timestamp in UTC format.
          type: string
        type:
          description: validation_error
          type: string
      type: object
    StreamSystemLiveData_550_response_error:
      properties:
        code:
          description: "550"
          type: integer
        details:
          items:
            properties: {}
            type: object
          type: array
        message:
          description: "Service unreachable, please try again."
          type: string
        status:
          description: SERVICE_UNREACHABLE
          type: string
      type: object
    StreamSystemLiveData_550_response:
      properties:
        error:
          $ref: '#/components/schemas/StreamSystemLiveData_550_response_error'
        timestamp_epoch:
          description: Timestamp in epoch format.
          type: integer
        timestamp_utc:
          description: Timestamp in UTC format.
          type: string
        type:
          description: server_error
          type: string
      type: object
    StreamSystemLiveData_551_response_error:
      properties:
        code:
          description: "551"
          type: integer
        details:
          items:
            properties: {}
            type: object
          type: array
        message:
          description: "Service unreachable, please try again."
          type: string
        status:
          description: SERVICE_UNREACHABLE
          type: string
      type: object
    StreamSystemLiveData_551_response:
      properties:
        error:
          $ref: '#/components/schemas/StreamSystemLiveData_551_response_error'
        timestamp_epoch:
          description: Timestamp in epoch format.
          type: integer
        timestamp_utc:
          description: Timestamp in UTC format.
          type: string
        type:
          description: server_error
          type: string
      type: object
    StreamSystemLiveData_552_response_error:
      properties:
        code:
          description: "552"
          type: integer
        details:
          items:
            properties: {}
            type: object
          type: array
        message:
          description: "Unable to connect, please try again."
          type: string
        status:
          description: CONNECTION_NOT_ESTABLISHED
          type: string
      type: object
    StreamSystemLiveData_552_response:
      properties:
        error:
          $ref: '#/components/schemas/StreamSystemLiveData_552_response_error'
        timestamp_epoch:
          description: Timestamp in epoch format.
          type: integer
        timestamp_utc:
          description: Timestamp in UTC format.
          type: string
        type:
          description: server_error
          type: string
      type: object
    SearchSystemsRequest_system:
      example:
        connection_type: null
        name: name
        ids:
        - 0
        - 0
        statuses:
        - null
        - null
        public_name: null
      properties:
        ids:
          description: Filter system by particular Ids.
          items:
            type: integer
          type: array
        name:
          description: Search by name of the system.
          type: string
        public_name:
          $ref: '#/components/schemas/SystemPublicNameEnum'
        statuses:
          description: Search by System status.
          items:
            $ref: '#/components/schemas/SystemStatusEnum'
          type: array
        connection_type:
          $ref: '#/components/schemas/SystemConnectionTypeEnum'
      type: object
    GetSystemDevicesResponse_devices_value_inner_cellular_modem:
      properties:
        imei:
          type: string
        part_num:
          type: string
        sku:
          type: string
        plan_start_date:
          format: int64
          type: integer
        plan_end_date:
          format: int64
          type: integer
      type: object
    GetSystemDevicesResponse_devices_value_inner:
      properties:
        id:
          type: integer
        last_report_at:
          format: int64
          type: integer
        name:
          type: string
        serial_number:
          type: string
        part_number:
          type: string
        emu_sw_version:
          type: string
        sku:
          type: string
        model:
          type: string
        status:
          type: string
        active:
          type: boolean
        state:
          type: string
        config_type:
          type: string
        cellular_modem:
          $ref: '#/components/schemas/GetSystemDevicesResponse_devices_value_inner_cellular_modem'
      type: object
    GetSystemProductionMeterReadingsResponse_meter_readings_inner:
      properties:
        serial_number:
          description: Serial number of the meter.
          type: string
        value:
          description: "Meter reading, in Wh."
          type: integer
        read_at:
          description: "Time when the reading was taken, always prior or equal to\
            \ the requested 'end_at'."
          format: int64
          type: integer
      type: object
    GetSystemRgmStatsResponse_intervals_inner:
      properties:
        end_at:
          description: End time of the telemetry interval.
          format: int64
          type: integer
        devices_reporting:
          description: Number of revenue-grade meters that reported data for this
            interval at the time of the request.
          type: integer
        wh_del:
          description: "Energy delivered during this interval, in Wh."
          type: integer
      type: object
    GetSystemRgmStatsResponse_meter_intervals_inner_intervals_inner:
      properties:
        channel:
          description: Reporting channel ID.
          type: integer
        end_at:
          description: End time of the telemetry interval.
          format: int64
          type: integer
        wh_del:
          description: "Energy delivered during this interval, in Wh (Watt-Hour)."
          format: float
          type: number
        curr_w:
          description: "Energy delivered during this interval, in W (Watts)."
          type: integer
      type: object
    GetSystemRgmStatsResponse_meter_intervals_inner:
      properties:
        meter_serial_number:
          description: Meter serial number.
          type: string
        envoy_serial_number:
          description: Envoy serial number of the system that the micro reports to.
          type: string
        intervals:
          description: Individual meter level interval.
          items:
            $ref: '#/components/schemas/GetSystemRgmStatsResponse_meter_intervals_inner_intervals_inner'
          type: array
      type: object
    GetInvertersSummaryByEnvoyOrSiteResponse_inner_micro_inverters_inner_power_produced:
      properties:
        value:
          description: Current power produced by the microinverter.
          type: integer
        units:
          description: Power units.
          type: string
        precision:
          type: integer
      type: object
    GetInvertersSummaryByEnvoyOrSiteResponse_inner_micro_inverters_inner_energy:
      properties:
        value:
          description: Lifetime energy produced by the microinverter.
          type: integer
        units:
          description: Energy units.
          type: string
        precision:
          type: integer
      type: object
    GetInvertersSummaryByEnvoyOrSiteResponse_inner_micro_inverters_inner:
      properties:
        id:
          description: Numeric ID of the microinverter.
          type: integer
        serial_number:
          description: Serial number of the microinverter.
          type: string
        model:
          description: Microinverter model type.
          type: string
        part_number:
          description: Microinverter part number.
          type: string
        sku:
          description: SKU of the microinverter.
          type: string
        status:
          description: Current status of the micro inverter.
          type: string
        power_produced:
          $ref: '#/components/schemas/GetInvertersSummaryByEnvoyOrSiteResponse_inner_micro_inverters_inner_power_produced'
        proc_load:
          description: Processor load.
          type: string
        param_table:
          description: Parameter table.
          type: string
        envoy_serial_number:
          description: Envoy serial number of the system that the micro reports to.
          type: string
        energy:
          $ref: '#/components/schemas/GetInvertersSummaryByEnvoyOrSiteResponse_inner_micro_inverters_inner_energy'
        grid_profile:
          description: Grid profile ID.
          type: string
        last_report_date:
          description: Date on which the microinverter last reported.
          format: date-time
          type: string
      type: object
    GetInvertersSummaryByEnvoyOrSiteResponse_inner:
      properties:
        signal_strength:
          description: Signal strength.
          type: integer
        micro_inverters:
          description: Microinverters.
          items:
            $ref: '#/components/schemas/GetInvertersSummaryByEnvoyOrSiteResponse_inner_micro_inverters_inner'
          type: array
      type: object
    GetSystemProductionMicroTelemetryResponse_intervals_inner:
      properties:
        end_at:
          description: End time of the telemetry interval.
          format: int64
          type: integer
        devices_reporting:
          description: Number of devices reporting.
          type: integer
        powr:
          description: "Average power (in Watt) produced by all the microinverters\
            \ during this interval, measured in Watts."
          type: integer
        enwh:
          description: Energy produced (in Watt-Hours) from all the microinverters
            combined during that period.
          type: integer
      type: object
    GetSystemProductionMeterTelemetryResponse_intervals_inner:
      properties:
        end_at:
          description: End time of the telemetry interval.
          format: int64
          type: integer
        devices_reporting:
          description: Number of devices reporting.
          type: integer
        wh_del:
          description: Units produced per interval.
          type: integer
      type: object
    GetSystemBatteryTelemetryResponse_intervals_inner_charge:
      properties:
        enwh:
          description: Energy into the battery during the interval.
          type: integer
        devices_reporting:
          description: Number of devices reporting.
          type: integer
      type: object
    GetSystemBatteryTelemetryResponse_intervals_inner_discharge:
      properties:
        enwh:
          description: Energy discharged from the battery during the interval.
          type: integer
        devices_reporting:
          description: Number of devices reporting.
          type: integer
      type: object
    GetSystemBatteryTelemetryResponse_intervals_inner_soc:
      properties:
        percent:
          description: Battery soc percentage.
          type: integer
        devices_reporting:
          description: Number of devices reporting.
          type: integer
      type: object
    GetSystemBatteryTelemetryResponse_intervals_inner:
      properties:
        end_at:
          description: End time of the telemetry interval.
          format: int64
          type: integer
        charge:
          $ref: '#/components/schemas/GetSystemBatteryTelemetryResponse_intervals_inner_charge'
        discharge:
          $ref: '#/components/schemas/GetSystemBatteryTelemetryResponse_intervals_inner_discharge'
        soc:
          $ref: '#/components/schemas/GetSystemBatteryTelemetryResponse_intervals_inner_soc'
      type: object
    GetSystemConsumptionMeterTelemetryResponse_intervals_inner:
      properties:
        end_at:
          description: End time of the telemetry interval.
          format: int64
          type: integer
        devices_reporting:
          description: Number of devices reporting.
          type: integer
        enwh:
          description: Units produced per interval.
          type: integer
      type: object
    GetSystemMicroDeviceTelemetryResponse_intervals_inner:
      properties:
        end_at:
          description: End time of the telemetry interval.
          format: int64
          type: integer
        powr:
          description: "Average power (in Watt) produced by all the microinverters\
            \ during this interval, measured in Watts."
          type: integer
        enwh:
          description: Energy produced (in Watt-Hours) from all the microinverters
            combined during that period.
          type: integer
      type: object
    GetSystemEnergyImportTelemetryResponse_intervals_inner_inner:
      properties:
        end_at:
          description: End time of the telemetry interval.
          format: int64
          type: integer
        wh_imported:
          description: Energy imported (in Watt-Hours) during that period.
          type: integer
      type: object
    GetSystemEnergyExportTelemetryResponse_intervals_inner_inner:
      properties:
        end_at:
          description: End time of the telemetry interval.
          format: int64
          type: integer
        wh_exported:
          description: Energy exported (in Watt-Hours) during that period.
          type: integer
      type: object
    System_address:
      description: Address object for the system.
      properties:
        city:
          description: City in which the system is located.
          type: string
        state:
          description: State in which the system is located.
          type: string
        country:
          description: Country in which the system is located.
          type: string
        postal_code:
          description: Postal code of the system's location.
          type: string
      type: object
    BatteryDeviceTelemetry_intervals_inner_charge:
      properties:
        enwh:
          description: Energy into the battery during the interval.
          type: integer
      type: object
    BatteryDeviceTelemetry_intervals_inner_discharge:
      properties:
        enwh:
          description: Energy discharged from the battery during the interval.
          type: integer
      type: object
    BatteryDeviceTelemetry_intervals_inner_soc:
      properties:
        percent:
          description: Battery soc percentage.
          type: integer
      type: object
    BatteryDeviceTelemetry_intervals_inner:
      properties:
        end_at:
          description: End time of the telemetry interval.
          format: int64
          type: integer
        charge:
          $ref: '#/components/schemas/BatteryDeviceTelemetry_intervals_inner_charge'
        discharge:
          $ref: '#/components/schemas/BatteryDeviceTelemetry_intervals_inner_discharge'
        soc:
          $ref: '#/components/schemas/BatteryDeviceTelemetry_intervals_inner_soc'
      type: object
    LoadControlSettings_load_control_data_inner:
      properties:
        name:
          description: Name of the dry contact.
          type: string
        load_name:
          description: Name of the load.
          type: string
        owner_can_override:
          description: HOs ability to override the load control settings.
          type: string
        mode:
          description: Current load control configuration.
          type: string
        soc_low:
          description: Applicable for advanced mode. Load will be powered off when
            the battery soc reaches this level.
          type: integer
        soc_high:
          description: Applicable for advanced mode. Load powers off when battery
            reaches soc_low. The load will be powered on when the battery soc reaches
            soc_high.
          type: integer
        status:
          description: "Available values are enabled, disabled."
          type: string
        essential_start_time:
          description: Applicable for scheduled mode. Time in seconds. Load will powered
            on between essential_start_time and essential_end_time.
          type: integer
        essential_end_time:
          description: Applicable for scheduled mode. Time in seconds. Load will powered
            on between essential_start_time and essential_end_time.
          type: integer
      type: object
    StreamSystemLiveDataResponse_data_data:
      properties:
        battery_mode:
          description: "Battery mode of the site. Available values are Savings Mode,\
            \ Full Backup, and Self-consumption."
          type: string
        battery_power:
          description: Battery power in watts; Power will be positive in case of discharge
            and negative in case of charge.
          type: integer
        battery_soc:
          description: Battery soc in percentage.
          type: integer
        consumption_power:
          description: Consumption power in watts.
          type: integer
        envoy_serial_number:
          items:
            description: "Serial number of the envoy; For multi-envoy sites, the data\
              \ will be returned only for one of the envoys."
            type: string
          type: array
        generator_power:
          description: Generator power in watts.
          type: integer
        grid_power:
          description: Grid power in watts; Power will be negative in case of export
            and positive in case of import.
          type: integer
        grid_status:
          description: "Grid state of the site. Available values are On Grid, Off\
            \ Grid, Unknown."
          type: string
        pv_power:
          description: PV power in watts.
          type: integer
        system_id:
          description: The unique numeric ID of the system.
          type: integer
      type: object
    StreamSystemLiveDataResponse_data:
      properties:
        data:
          $ref: '#/components/schemas/StreamSystemLiveDataResponse_data_data'
        timestamp_epoch:
          description: Timestamp in epoch format.
          type: integer
        timestamp_utc:
          description: Timestamp in UTC format.
          type: string
        type:
          description: response
          type: string
      type: object
  securitySchemes:
    OAuth2:
      flows:
        authorizationCode:
          authorizationUrl: https://api.enphaseenergy.com/oauth/authorize
          scopes: {}
          tokenUrl: https://api.enphaseenergy.com/oauth/token
      type: oauth2
    ApiKey:
      in: query
      name: key
      type: apiKey

