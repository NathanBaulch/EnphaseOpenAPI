/*
 * The Enphase Commissioning API
 *
 * Commissioning API can be used to create and update activations on a site, manage companies and users, update Tariff, etc.
 *
 * The version of the OpenAPI document: 4.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EnphaseOpenAPI.Commissioning.Client.OpenAPIDateConverter;

namespace EnphaseOpenAPI.Commissioning.Model
{
    /// <summary>
    /// How the microinverters are attached to the panels. Possible values are acm (AC Module), rack_mount (rack- or rail-mounted), zep (Zep Solar compatible), bipv (Building Integrated PV), frame_mount (Enphase Frame Mount), railless_mount (Other Railless Mount).
    /// </summary>
    /// <value>How the microinverters are attached to the panels. Possible values are acm (AC Module), rack_mount (rack- or rail-mounted), zep (Zep Solar compatible), bipv (Building Integrated PV), frame_mount (Enphase Frame Mount), railless_mount (Other Railless Mount).</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum SystemAttachmentTypeEnum
    {
        /// <summary>
        /// Enum RackMount for value: rack_mount
        /// </summary>
        [EnumMember(Value = "rack_mount")]
        RackMount = 1,

        /// <summary>
        /// Enum Zep for value: zep
        /// </summary>
        [EnumMember(Value = "zep")]
        Zep = 2,

        /// <summary>
        /// Enum Acm for value: acm
        /// </summary>
        [EnumMember(Value = "acm")]
        Acm = 3,

        /// <summary>
        /// Enum Bipv for value: bipv
        /// </summary>
        [EnumMember(Value = "bipv")]
        Bipv = 4,

        /// <summary>
        /// Enum FrameMount for value: frame_mount
        /// </summary>
        [EnumMember(Value = "frame_mount")]
        FrameMount = 5,

        /// <summary>
        /// Enum RaillessMount for value: railless_mount
        /// </summary>
        [EnumMember(Value = "railless_mount")]
        RaillessMount = 6

    }

}
