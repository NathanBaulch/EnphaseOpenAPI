/*
 * The Enlighten Systems API
 *
 * The Enlighten Systems API is a JSON-based API that provides access to performance data for a PV system. By using the Enlighten Systems API, you agree to the Enphase Energy API License Agreement.  Please note that the Enlighten Systems API does not provide performance data at a panel or microinverter level.
 *
 * The version of the OpenAPI document: 2.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = EnphaseOpenAPI.Enlighten.Client.OpenAPIDateConverter;

namespace EnphaseOpenAPI.Enlighten.Model
{
    /// <summary>
    /// The current status of the system. * &#x60;comm&#x60; - One or more Envoys on the system are not communicating to Enlighten. * &#x60;power&#x60; - There is a production issue on the system. * &#x60;meter&#x60; - There is a communication problem between an Envoy and a revenue-grade meter on the system. * &#x60;meter_issue&#x60; - One or more meters on the system are reporting unusual measurements. * &#x60;micro&#x60; - There is a communication problem between an Envoy and microinverters that it monitors. * &#x60;battery&#x60; - There is a communication problem between an Envoy and an AC battery on the system. * &#x60;storage_idle&#x60; - An AC battery on the system has not changed its state of charge for more than 72 hours. * &#x60;normal&#x60; - The system is operating normally.
    /// </summary>
    /// <value>The current status of the system. * &#x60;comm&#x60; - One or more Envoys on the system are not communicating to Enlighten. * &#x60;power&#x60; - There is a production issue on the system. * &#x60;meter&#x60; - There is a communication problem between an Envoy and a revenue-grade meter on the system. * &#x60;meter_issue&#x60; - One or more meters on the system are reporting unusual measurements. * &#x60;micro&#x60; - There is a communication problem between an Envoy and microinverters that it monitors. * &#x60;battery&#x60; - There is a communication problem between an Envoy and an AC battery on the system. * &#x60;storage_idle&#x60; - An AC battery on the system has not changed its state of charge for more than 72 hours. * &#x60;normal&#x60; - The system is operating normally.</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum Status
    {
        /// <summary>
        /// Enum Comm for value: comm
        /// </summary>
        [EnumMember(Value = "comm")]
        Comm = 1,

        /// <summary>
        /// Enum Power for value: power
        /// </summary>
        [EnumMember(Value = "power")]
        Power = 2,

        /// <summary>
        /// Enum Meter for value: meter
        /// </summary>
        [EnumMember(Value = "meter")]
        Meter = 3,

        /// <summary>
        /// Enum MeterIssue for value: meter_issue
        /// </summary>
        [EnumMember(Value = "meter_issue")]
        MeterIssue = 4,

        /// <summary>
        /// Enum Micro for value: micro
        /// </summary>
        [EnumMember(Value = "micro")]
        Micro = 5,

        /// <summary>
        /// Enum Battery for value: battery
        /// </summary>
        [EnumMember(Value = "battery")]
        Battery = 6,

        /// <summary>
        /// Enum StorageIdle for value: storage_idle
        /// </summary>
        [EnumMember(Value = "storage_idle")]
        StorageIdle = 7,

        /// <summary>
        /// Enum Normal for value: normal
        /// </summary>
        [EnumMember(Value = "normal")]
        Normal = 8

    }

}
