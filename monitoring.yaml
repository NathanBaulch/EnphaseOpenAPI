openapi: 3.0.1
info:
  title: The Enphase Monitoring API
  description: Monitoring API can be used to fetch system details on a site, system-level production and consumption data, and device-level production data.
  version: "4.0"
  termsOfService: https://enphase.com/legal/terms-of-service
  license:
    name: Enphase Energy API License Agreement.
    url: https://enphase.com/api-license-agreement-v4
servers:
  - url: https://api.enphaseenergy.com/api/v4
paths:
  /systems:
    get:
      operationId: GetSystems
      tags:
        - System Details
      summary: Fetch systems
      description: Returns a list of systems for which the user can make API requests. By default, systems are returned in batches of 10. The maximum size is 100.
      parameters:
        - name: page
          in: query
          description: Page to be returned. Default=1, Min=1. For example, if page is set to 2, 2nd page is returned.
          schema:
            type: integer
            minimum: 1
        - name: size
          in: query
          description: Maximum number of records shown per page. Default=10, Min=1, Max=100.  For example, if set to 5, 5 records are shown per page.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: sort_by
          in: query
          description: Returns list of systems sorted by <sort_by> field. To get ASC order sorted list, user sort_by = <key>. To get DESC order sorted list, use sort_by = (-)<key>.
            Current sort keys supported are id, name, and last_report_date. By default the list is sorted by decreasing system ID.
          schema:
            $ref: '#/components/schemas/SystemSortByEnum'
      responses:
        200:
          description: List of systems.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemsResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Unprocessable Entity
                details: system is missing at Json body location
                code: 422
        429:
          $ref: '#/components/responses/TooManyRequests'
        501:
          $ref: '#/components/responses/NotImplemented'
  /systems/search:
    post:
      operationId: SearchSystems
      tags:
        - System Details
      summary: Search and filter systems
      description: Search and filter systems. Provide only valid values in request parameters. Empty and invalid values will be ignored. Invalid keys will be rejected.
      parameters:
        - name: page
          in: query
          description: Page to be returned. Default=1, Min=1, e.g=2.
          schema:
            type: integer
            minimum: 1
        - name: size
          in: query
          description: Maximum number of records shown per page. Default=10, Min=1, Max=1000, e.g=5.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchSystemsRequest'
      responses:
        200:
          description: List of systems.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSystemsResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Not Found
                details: System not found for {:id=>"1"}
                code: 404
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Unprocessable Entity
                details: System are missing at JSON body location
                code: 422
        429:
          $ref: '#/components/responses/TooManyRequests'
        501:
          $ref: '#/components/responses/NotImplemented'
      x-codegen-request-body-name: params
  /systems/{system_id}:
    get:
      operationId: GetSystem
      tags:
        - System Details
      summary: Retrieves a System by ID
      description: Retrieves a system by ID.
      parameters:
        - $ref: '#/components/parameters/SystemId'
      responses:
        200:
          description: System fetched.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Not Found
                details: System not found for {:id=>"1"}
                code: 404
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        429:
          $ref: '#/components/responses/TooManyRequests'
        501:
          $ref: '#/components/responses/NotImplemented'
  /systems/{system_id}/summary:
    get:
      operationId: GetSystemSummary
      tags:
        - System Details
      summary: Retrieves a system summary
      description: Returns system summary based on the specified system ID.
      parameters:
        - $ref: '#/components/parameters/SystemId'
      responses:
        200:
          description: System summary fetched.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemSummaryResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Not Found
                details: System not found for {:id=>"1"}
                code: 404
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        429:
          $ref: '#/components/responses/TooManyRequests'
        501:
          $ref: '#/components/responses/NotImplemented'
  /systems/{system_id}/devices:
    get:
      operationId: GetSystemDevices
      tags:
        - System Details
      summary: Retrieves devices for a given system
      description: Retrieves devices for a given system. Only devices that are active will be returned in the response.
      parameters:
        - $ref: '#/components/parameters/SystemId'
      responses:
        200:
          description: List of devices.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemDevicesResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Not Found
                details: System not found for {:id=>"1"}
                code: 404
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        429:
          $ref: '#/components/responses/TooManyRequests'
        501:
          $ref: '#/components/responses/NotImplemented'
  /systems/retrieve_system_id:
    get:
      operationId: RetrieveSystemId
      tags:
        - System Details
      summary: Retrieve system for a given envoy serial number
      description: Get system ID by passing envoy serial number. If the serial number of a retired envoy is passed in the request param, a 404 Not Found response will be returned.
      parameters:
        - name: serial_num
          in: query
          description: Envoy serial number.
          required: true
          schema:
            type: string
      responses:
        200:
          description: retrieve_system_id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveSystemIdResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Not Found
                details: Envoy not found with this serial number
                code: 404
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Unprocessable Entity
                details: Provide envoy serial number
                code: 422
        429:
          $ref: '#/components/responses/TooManyRequests'
        501:
          $ref: '#/components/responses/NotImplemented'
  /systems/{system_id}/production_meter_readings:
    get:
      operationId: GetSystemProductionMeterReadings
      tags:
        - Site Level Production Monitoring
      summary: production_meter_readings
      description: |-
        Returns the last known reading of each production meter on the system as of the requested time, regardless of whether the meter is currently in service or retired.
        Read_at is the time at which the reading was taken, and is always less than or equal to the requested end_at. Commonly, the reading will be within 30 minutes of the requested end_at.
        However, larger deltas can occur and do not necessarily mean there is a problem with the meter or the system.
        Systems that are configured to report infrequently can show large deltas on all meters, especially when end_at is close to the current time.
        Meters that have been retired from a system will show an end_at that doesn't change, and that eventually is far away from the current time.
      parameters:
        - $ref: '#/components/parameters/SystemId'
        - name: end_at
          in: query
          description: End of reporting period in Unix epoch time. If no end is specified, defaults to the time of the request.
            If the end is later than the last reported interval the response data ends with the last reported interval.
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: production_meter_readings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemProductionMeterReadingsResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Not Authorized
                details: System not found for {:id=>"1"}
                code: 404
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Unprocessable Entity
                details: Failed to parse date 1613543106
                code: 422
        429:
          $ref: '#/components/responses/TooManyRequests'
        501:
          $ref: '#/components/responses/NotImplemented'
  /systems/{system_id}/rgm_stats:
    get:
      operationId: GetSystemRgmStats
      tags:
        - Site Level Production Monitoring
      summary: rgm_stats
      description: |-
        Returns performance statistics as measured by the revenue-grade meters installed on the specified system. If the total duration requested is more than one week, returns one week of intervals.
        Intervals are 15 minutes in length and start at the top of the hour.
        Requests for times that do not fall on the 15-minute marks are rounded down.
        For example, a request for 08:01, 08:08, 08:11, or 08:14 (in epoch format) is treated as a request for 08:00 (in epoch format). Intervals are listed by their end times in epoch format.
        The requested date range in one API hit cannot be more than 7 days and the requested start at must be within 2 years from current time.
        If the start_at specified is earlier than the system's first reported date, then midnight of the system's first reported date is considered as start_at.
      parameters:
        - $ref: '#/components/parameters/SystemId'
        - name: start_at
          in: query
          description: Start of period to report on in Unix epoch time. If no start is specified, the assumed start is midnight today, in the timezone of the system.
            If the start is earlier than one year ago, the response includes an empty intervals list.
            If the start is earlier than the system's operational_date, the response data begins at midnight of the first reported interval date.
          schema:
            type: integer
            format: int64
        - name: end_at
          in: query
          description: End of reporting period in Unix epoch time. If no end is specified, default to the time of the request or (start time + 1 week), whichever is earlier.
            If the end is later than the last reported interval the response data ends with the last reported interval.
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: rgm_stats
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemRgmStatsResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Not Found
                details: System not found for {:id=>"1"}
                code: 404
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Unprocessable Entity
                details: Requested date range is invalid for this system
                code: 422
        429:
          $ref: '#/components/responses/TooManyRequests'
        500:
          $ref: '#/components/responses/DataTemporarilyUnavailable'
        501:
          $ref: '#/components/responses/NotImplemented'
  /systems/{system_id}/consumption_lifetime:
    get:
      operationId: GetSystemConsumptionLifetime
      tags:
        - Site Level Consumption Monitoring
      summary: consumption_lifetime
      description: |-
        Returns a daily time series of energy consumption as measured by the consumption meter installed on the specified system. All measurements are in Watt hours.
        The time series includes one entry for each day from the start_date to the end_date. There are no gaps in the time series.
        If the response includes trailing zeroes, such as [909, 4970, 0, 0, 0], then no data has been reported for the last three days.
      parameters:
        - $ref: '#/components/parameters/SystemId'
        - name: start_date
          in: query
          description: Requested start date of the time series data. Defaults to the system's operational date.
            If the start_date is earlier than the system's operational_date, then the response data begins with the system operational_date as start_date. Pass as string in YYYY-MM-DD format.
          schema:
            type: string
        - name: end_date
          in: query
          description: End date of the time series data. Defaults to yesterday. If the end_date is later than yesterday, then the response data ends with yesterday as end_date.
            Pass as string in YYYY-MM-DD format.
          schema:
            type: string
      responses:
        200:
          description: consumption_lifetime
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemConsumptionLifetimeResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Not Found
                details: System not found for {:id=>"1"}
                code: 404
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Unprocessable Entity
                details: Requested date is in the future
                code: 422
        429:
          $ref: '#/components/responses/TooManyRequests'
        501:
          $ref: '#/components/responses/NotImplemented'
  /systems/{system_id}/energy_lifetime:
    get:
      operationId: GetSystemEnergyLifetime
      tags:
        - Site Level Production Monitoring
      summary: energy_lifetime
      description: |-
        Returns a daily time series of energy produced by the system over its lifetime. All measurements are in Watt hours.
        The time series includes one entry for each day from the start_date to the end_date with no gaps in the time series.
        If the response includes trailing zeroes, such as [909, 4970, 0, 0, 0], then no energy has been reported for the last days in the series.
        If the system has a meter, the time series includes data as measured by the microinverters until the first full day after the meter has been installed.
        Later, it switches to using the data as measured by the meter. This is called the "merged time series".
        The attribute 'meter_start_date' indicates the time when the meter measurements begin to be used.
        You can retrieve the complete time series from the meter and from the microinverters by adding the parameter production=all to the request.
      parameters:
        - $ref: '#/components/parameters/SystemId'
        - name: start_date
          in: query
          description: Start date of the time series data. Defaults to the system's operational date.
            If the start_date is earlier than the system's operational_date, then the response data begins with the system operational_date as start_date. Pass as string in YYYY-MM-DD format.
          schema:
            type: string
        - name: end_date
          in: query
          description: End date of the time series data. Defaults to yesterday. If the end_date is later than yesterday, then the response data ends with yesterday as end_date.
            Pass as string in YYYY-MM-DD format.
          schema:
            type: string
        - name: production
          in: query
          description: When 'all', returns the merged time series plus the time series as reported by the microinverters and the meter on the system. Other values are ignored.
          schema:
            $ref: '#/components/schemas/SystemEnergyLifetimeProductionEnum'
      responses:
        200:
          description: When the query parameters include "production=all", returns meter and microinverter-measured time series.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemEnergyLifetimeResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Not Found
                details: System not found for {:id=>"1"}
                code: 404
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Unprocessable Entity
                details: Requested date range is invalid for this system
                code: 422
        429:
          $ref: '#/components/responses/TooManyRequests'
        501:
          $ref: '#/components/responses/NotImplemented'
  /systems/{system_id}/battery_lifetime:
    get:
      operationId: GetSystemBatteryLifetime
      tags:
        - Site Level Consumption Monitoring
      summary: battery_lifetime
      description: Returns a daily time series of energy charged into the batteries and energy discharged from the batteries for a system over its lifetime.
        All measurements are in Watt hours. The time series includes one entry for each day from the start_date to the end_date with no gaps in the time series.
        If the response includes trailing zeroes, such as [909, 4970, 0, 0, 0], then no energy has been charged/discharged for the last days in the series.
      parameters:
        - $ref: '#/components/parameters/SystemId'
        - name: start_date
          in: query
          description: Requested start date of the time series data. Defaults to the system's operational date.
            If the start_date is earlier than the system's operational_date, then the response data begins with the system operational_date as start_date. Pass as string in YYYY-MM-DD format.
          schema:
            type: string
        - name: end_date
          in: query
          description: End date of the time series data. Defaults to yesterday. If the end_date is later than yesterday, then the response data ends with yesterday as end_date.
            Pass as string in YYYY-MM-DD format.
          schema:
            type: string
      responses:
        200:
          description: battery_lifetime
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemBatteryLifetimeResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Not Found
                details: System not found for {:id=>"1"}
                code: 404
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Unprocessable Entity
                details: Requested date is in the future
                code: 422
        429:
          $ref: '#/components/responses/TooManyRequests'
        501:
          $ref: '#/components/responses/NotImplemented'
  /systems/{system_id}/energy_import_lifetime:
    get:
      operationId: GetSystemEnergyImportLifetime
      tags:
        - Site Level Consumption Monitoring
      summary: import_lifetime
      description: Returns a daily time series of energy imported to the grid by the system over its lifetime. All measurements are in Watt hours.
        The time series includes one entry for each day from the start_date to the end_date with no gaps in the time series.
        If the response contains trailing zeroes, such as [909, 4970, 0, 0, 0], then no energy has been imported for the last days in the series.
      parameters:
        - $ref: '#/components/parameters/SystemId'
        - name: start_date
          in: query
          description: Requested start date of the time series data. Defaults to the system's operational date.
            If the start_date is earlier than the system's operational_date, then the response data begins with the system operational_date as start_date. Pass as string in YYYY-MM-DD format.
          schema:
            type: string
        - name: end_date
          in: query
          description: End date of the time series data. Defaults to yesterday. If the end_date is later than yesterday, then the response data ends with yesterday as end_date.
            Pass as string in YYYY-MM-DD format.
          schema:
            type: string
      responses:
        200:
          description: import_lifetime
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemEnergyImportLifetimeResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Not Found
                details: System not found for {:id=>"1"}
                code: 404
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Unprocessable Entity
                details: Requested date is in the future
                code: 422
        429:
          $ref: '#/components/responses/TooManyRequests'
        501:
          $ref: '#/components/responses/NotImplemented'
  /systems/{system_id}/energy_export_lifetime:
    get:
      operationId: GetSystemEnergyExportLifetime
      tags:
        - Site Level Consumption Monitoring
      summary: export_lifetime
      description: Returns a daily time series of energy exported to the grid by the system over its lifetime. All measurements are in Watt-hours.
        The time series includes one entry for each day from the start_date to the end_date with no gaps in the time series.
        If the response contains trailing zeroes, such as [909, 4970, 0, 0, 0], then no energy has been exported for the last days in the series.
      parameters:
        - $ref: '#/components/parameters/SystemId'
        - name: start_date
          in: query
          description: Requested start date of the time series data. Defaults to the system's operational date.
            If the start_date is earlier than the system's operational_date, then the response data begins with the system operational_date as start_date. Pass as string in YYYY-MM-DD format.
          schema:
            type: string
        - name: end_date
          in: query
          description: End date of the time series data. Defaults to yesterday. If the end_date is later than yesterday, then the response data ends with yesterday as end_date.
            Pass as string in YYYY-MM-DD format.
          schema:
            type: string
      responses:
        200:
          description: export_lifetime
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemEnergyExportLifetimeResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Not Found
                details: System not found for {:id=>"1"}
                code: 404
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Unprocessable Entity
                details: Requested date is in the future
                code: 422
        429:
          $ref: '#/components/responses/TooManyRequests'
        501:
          $ref: '#/components/responses/NotImplemented'
  /systems/inverters_summary_by_envoy_or_site:
    get:
      operationId: GetInvertersSummaryByEnvoyOrSite
      tags:
        - System Details
      summary: inverters_summary_by_envoy_or_site
      description: Returns the microinverters summary based on the specified active envoy serial number or system.
      parameters:
        - name: site_id
          in: query
          description: Site ID. The response will contain only those microinverters reporting to one of the active envoys of the given site.
          schema:
            type: integer
        - name: envoy_serial_number
          in: query
          description: Active envoy serial number. Only microinverters reporting to the given active envoy will be present in the response.
          schema:
            type: string
      responses:
        200:
          description: inverters_summary_by_envoy_or_site
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInvertersSummaryByEnvoyOrSiteResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Unprocessable Entity
                details: Envoy serial number or Site ID mandatory
                code: 422
        429:
          $ref: '#/components/responses/TooManyRequests'
        501:
          $ref: '#/components/responses/NotImplemented'
  /systems/{system_id}/telemetry/production_micro:
    get:
      operationId: GetSystemProductionMicroTelemetry
      tags:
        - Site Level Production Monitoring
      summary: Retrieves telemetry for all production micros for a system
      description: |-
        Retrieves telemetry for all the production micros of a system.
        If no start_at is specified, defaults to midnight today, in the timezone of the system.
        If the start_at specified is earlier than the system's first reported date, then midnight of the system's first reported date is considered as start_at.
        The end_at is calculated as the minimum of the time of the request and (start time + granularity).
        The meaning of granularity is as follows:

        If granularity is 15mins, maximum 3 intervals will appear in response. If granularity is day, maximum 288 intervals will appear in response where each interval is of 5 mins duration.

        The requested start date must be within 2 years from current date.
        By default start_at will appear in response. If start_date parameter is passed in the url then start_date field will appear in response.
        By default end_at will appear in response. If end_date parameter is passed in the url then end_date field will appear in response.
      parameters:
        - $ref: '#/components/parameters/SystemId'
        - name: start_at
          in: query
          description: Start time for fetching the telemetry data in Epoch time format.
            Alternatively one can use start_date in place of start_at for passing the start date as string in YYYY-MM-DD format. By default start_at will appear in response.
            If start_date parameter is passed in the url then start_date field will appear in response.
          schema:
            type: integer
            format: int64
        - name: granularity
          in: query
          description: Granularity of the telemetry data. Default is 'day'.
          schema:
            $ref: '#/components/schemas/TelemetryGranularityEnum'
      responses:
        200:
          description: Telemetry for all production micros.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemProductionMicroTelemetryResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Not Found
                details: System not found for {:id=>"1"}
                code: 404
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Unprocessable Entity
                details: Invalid request because of 'Requested date range is invalid for this system'.
                  {:start_at=>1566930600, :end_at=>1565333100, :first_interval=>1565072100, :last_interval=>1565333700}
                code: 422
        429:
          $ref: '#/components/responses/TooManyRequests'
        500:
          $ref: '#/components/responses/InternalServerError'
        501:
          $ref: '#/components/responses/NotImplemented'
  /systems/{system_id}/telemetry/production_meter:
    get:
      operationId: GetSystemProductionMeterTelemetry
      tags:
        - Site Level Production Monitoring
      summary: Retrieves telemetry for all production meters for a system
      description: |-
        Retrieves telemetry for all the production meters of a system.
        If no start_at is specified, defaults to midnight today, in the timezone of the system.
        If the start_at specified is earlier than the system's first reported date, then midnight of the system's first reported date is considered as start_at.
        The end_at is calculated as the minimum of the time of the request and (start time + granularity).
        The meaning of granularity is as follows:

        If granularity is 15mins, maximum 1 interval will appear in response.
        If granularity is day, maximum 96 intervals, and if granularity is week, maximum 672 intervals, will appear in response where each interval is of 15 mins duration.

        The requested start date must be within 2 years from current date.
        By default start_at will appear in response. If start_date parameter is passed in the url then start_date field will appear in response.
        By default end_at will appear in response. If end_date parameter is passed in the url then end_date field will appear in response.
      parameters:
        - $ref: '#/components/parameters/SystemId'
        - name: start_at
          in: query
          description: Start time for fetching the telemetry data in Epoch time format.
            Alternatively one can use start_date in place of start_at for passing the start date as string in YYYY-MM-DD format. By default start_at will appear in response.
            If start_date parameter is passed in the url then start_date field will appear in response.
          schema:
            type: integer
            format: int64
        - name: granularity
          in: query
          description: Granularity of the telemetry data. Default is 'day'.
          schema:
            $ref: '#/components/schemas/TelemetryGranularityEnum'
      responses:
        200:
          description: Telemetry for all production meters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemProductionMeterTelemetryResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Not Found
                details: System not found for {:id=>"1"}
                code: 404
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Unprocessable Entity
                details: Invalid request because of 'Requested date range is invalid for this system'.
                  {:start_at=>1566930600, :end_at=>1565333100, :first_interval=>1565072100, :last_interval=>1565333700}
                code: 422
        429:
          $ref: '#/components/responses/TooManyRequests'
        500:
          $ref: '#/components/responses/InternalServerError'
        501:
          $ref: '#/components/responses/NotImplemented'
  /systems/{system_id}/telemetry/battery:
    get:
      operationId: GetSystemBatteryTelemetry
      tags:
        - Site Level Consumption Monitoring
      summary: Retrieves telemetry for all batteries for a system
      description: |-
        Retrieves telemetry for all the batteries of a system.
        If no start_at is specified, defaults to midnight today, in the timezone of the system.
        If the start_at specified is earlier than the system's first reported date, then midnight of the system's first reported date is considered as start_at.
        The end_at is calculated as the minimum of the time of the request and (start time + granularity).
        The meaning of granularity is as follows:

        If granularity is 15mins, maximum 1 interval will appear in response.
        If granularity is day, maximum 96 intervals, and if granularity is week, maximum 672 intervals, will appear in response where each interval is of 15 mins duration.

        The requested start date must be within 2 years from current date.
        By default start_at will appear in response. If start_date parameter is passed in the url then start_date field will appear in response.
        By default end_at will appear in response. If end_date parameter is passed in the url then end_date field will appear in response.
      parameters:
        - $ref: '#/components/parameters/SystemId'
        - name: start_at
          in: query
          description: Start time for fetching the telemetry data in Epoch time format.
            Alternatively one can use start_date in place of start_at for passing the start date as string in YYYY-MM-DD format. By default start_at will appear in response.
            If start_date parameter is passed in the url then start_date field will appear in response.
          schema:
            type: integer
            format: int64
        - name: granularity
          in: query
          description: Granularity of the telemetry data. Default is 'day'.
          schema:
            $ref: '#/components/schemas/TelemetryGranularityEnum'
      responses:
        200:
          description: Telemetry for batteries.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemBatteryTelemetryResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Not Found
                details: System not found for {:id=>"1"}
                code: 404
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Unprocessable Entity
                details: Invalid request because of 'Requested date range is invalid for this system'.
                  {:start_at=>1566930600, :end_at=>1565333100, :first_interval=>1565072100, :last_interval=>1565333700}
                code: 422
        429:
          $ref: '#/components/responses/TooManyRequests'
        500:
          $ref: '#/components/responses/InternalServerError'
        501:
          $ref: '#/components/responses/NotImplemented'
  /systems/{system_id}/telemetry/consumption_meter:
    get:
      operationId: GetSystemConsumptionMeterTelemetry
      tags:
        - Site Level Consumption Monitoring
      summary: Retrieves telemetry for all consumption meters for a system
      description: |-
        Retrieves telemetry for all the consumption meters of a system.
        If the start_at specified is earlier than the system's first reported date, then midnight of the system's first reported date is considered as start_at.
        The end_at is calculated as the minimum of the time of the request and (start time + granularity).
        The meaning of granularity is as follows:
        
        If granularity is 15mins, maximum 1 interval will appear in response.
        If granularity is day, maximum 96 intervals, and if granularity is week, maximum 672 intervals, will appear in response where each interval is of 15 mins duration.

        The requested start date must be within 2 years from current date.
        By default start_at will appear in response. If start_date parameter is passed in the url then start_date field will appear in response.
        By default end_at will appear in response. If end_date parameter is passed in the url then end_date field will appear in response.
      parameters:
        - $ref: '#/components/parameters/SystemId'
        - name: start_at
          in: query
          description: Requested start time for telemetry data in Epoch time format.
            Alternatively one can use start_date in place of start_at for passing the start date as string in YYYY-MM-DD format.
            If no start_at is specified, defaults to midnight today, in the timezone of the system.
            If the start_at specified is earlier than the system's first reported date, then the system first reported date is considered as start_at. By default start_at will appear in response.
            If start_date parameter is passed in the url then start_date field will appear in response.
          schema:
            type: integer
            format: int64
        - name: granularity
          in: query
          description: Granularity of the telemetry data. Default is 'day'.
          schema:
            $ref: '#/components/schemas/TelemetryGranularityEnum'
      responses:
        200:
          description: Telemetry for all consumption meters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemConsumptionMeterTelemetryResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Not Found
                details: System not found for {:id=>"1"}
                code: 404
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Unprocessable Entity
                details: Invalid request because of 'Requested date range is invalid for this system'.
                  {:start_at=>1566930600, :end_at=>1565333100, :first_interval=>1565072100, :last_interval=>1565333700}
                code: 422
        429:
          $ref: '#/components/responses/TooManyRequests'
        500:
          $ref: '#/components/responses/InternalServerError'
        501:
          $ref: '#/components/responses/NotImplemented'
  /systems/{system_id}/devices/micros/{serial_no}/telemetry:
    get:
      operationId: GetSystemMicroDeviceTelemetry
      tags:
        - Device Level Production Monitoring
      summary: Retrieves telemetry for single micro/pcu
      description: |-
        Retrieves telemetry for single micro/pcu.
        If no start_at is specified, defaults to midnight today, in the timezone of the system.
        If the start_at specified is earlier than the system's first reported date, then midnight of the system's first reported date is considered as start_at.
        The end_at is calculated as the minimum of the time of the request and (start time + granularity).
        The meaning of granularity is as follows:

        If granularity is 15mins, maximum 3 intervals will appear in response. If granularity is day, maximum 288 intervals will appear in response where each interval is of 5 mins duration.

        The requested start date must be within 2 years from current date.
        By default start_at will appear in response. If start_date parameter is passed in the url then start_date field will appear in response.
        By default end_at will appear in response. If end_date parameter is passed in the url then end_date field will appear in response.
      parameters:
        - $ref: '#/components/parameters/SystemId'
        - name: serial_no
          in: path
          description: Serial number of the individual solar Microinverter.
          required: true
          schema:
            type: string
        - name: start_at
          in: query
          description: Start time for fetching the telemetry data in Epoch time format.
            Alternatively one can use start_date in place of start_at for passing the start date as string in YYYY-MM-DD format. By default start_at will appear in response.
            If start_date parameter is passed in the url then start_date field will appear in response.
          schema:
            type: integer
            format: int64
        - name: granularity
          in: query
          description: Granularity of the telemetry data. Default is 'day'.
          schema:
            $ref: '#/components/schemas/TelemetryGranularityEnum'
      responses:
        200:
          description: Telemetry for micro.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemMicroDeviceTelemetryResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Not Found
                details: Micro not found for {:id=>"1"}
                code: 404
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Unprocessable Entity
                details: Invalid request because of 'Requested date range is invalid for this system'.
                  {:start_at=>1566930600, :end_at=>1565333100, :first_interval=>1565072100, :last_interval=>1565333700}
                code: 422
        429:
          $ref: '#/components/responses/TooManyRequests'
        500:
          $ref: '#/components/responses/InternalServerError'
        501:
          $ref: '#/components/responses/NotImplemented'
  /systems/{system_id}/devices/acbs/{serial_no}/telemetry:
    get:
      operationId: GetSystemAcbDeviceTelemetry
      tags:
        - Device Level Production Monitoring
      summary: Retrieves telemetry for single ACB
      description: |-
        Retrieves telemetry for single ACB.
        If no start_at is specified, defaults to midnight today, in the timezone of the system.
        If the start_at specified is earlier than the system's first reported date, then midnight of the system's first reported date is considered as start_at.
        The end_at is calculated as the minimum of the time of the request and (start time + granularity).
        The meaning of granularity is as follows:

        If granularity is 15mins, maximum 1 interval will appear in response.
        If granularity is day, maximum 96 intervals, and if granularity is week, maximum 672 intervals, will appear in response where each interval is of 15 mins duration.

        The requested start date must be within 2 years from current date.
        By default start_at will appear in response. If start_date parameter is passed in the url then start_date field will appear in response.
        By default end_at will appear in response. If end_date parameter is passed in the url then end_date field will appear in response.
      parameters:
        - $ref: '#/components/parameters/SystemId'
        - name: serial_no
          in: path
          description: Serial number of the acb.
          required: true
          schema:
            type: string
        - name: start_at
          in: query
          description: Start time for fetching the telemetry data in Epoch time format.
            Alternatively one can use start_date in place of start_at for passing the start date as string in YYYY-MM-DD format. By default start_at will appear in response.
            If start_date parameter is passed in the url then start_date field will appear in response.
          schema:
            type: integer
            format: int64
        - name: granularity
          in: query
          description: Granularity of the telemetry data. Default is 'day'.
          schema:
            $ref: '#/components/schemas/TelemetryGranularityEnum'
      responses:
        200:
          description: Telemetry for the ACB.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemAcbDeviceTelemetryResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Not Found
                details: ACB not found for {:id=>"1"}
                code: 404
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Unprocessable Entity
                details: Invalid request because of 'Requested date range is invalid for this system'.
                  {:start_at=>1566930600, :end_at=>1565333100, :first_interval=>1565072100, :last_interval=>1565333700}
                code: 422
        429:
          $ref: '#/components/responses/TooManyRequests'
        500:
          $ref: '#/components/responses/InternalServerError'
        501:
          $ref: '#/components/responses/NotImplemented'
  /systems/{system_id}/devices/encharges/{serial_no}/telemetry:
    get:
      operationId: GetSystemEnchargeDeviceTelemetry
      tags:
        - Device Level Production Monitoring
      summary: Retrieves telemetry for single Encharge
      description: |-
        Retrieves telemetry for single Encharge.
        If no start_at is specified, defaults to midnight today, in the timezone of the system.
        If the start_at specified is earlier than the system's first reported date, then midnight of the system's first reported date is considered as start_at.
        The end_at is calculated as the minimum of the time of the request and (start time + granularity).
        The meaning of granularity is as follows:

        If granularity is 15mins, maximum 1 interval will appear in response.
        If granularity is day, maximum 96 intervals, and if granularity is week, maximum 672 intervals, will appear in response where each interval is of 15 mins duration.

        The requested start date must be within 2 years from current date.
        By default start_at will appear in response. If start_date parameter is passed in the url then start_date field will appear in response.
        By default end_at will appear in response. If end_date parameter is passed in the url then end_date field will appear in response.
      parameters:
        - $ref: '#/components/parameters/SystemId'
        - name: serial_no
          in: path
          description: Serial number of the Encharge.
          required: true
          schema:
            type: string
        - name: start_at
          in: query
          description: Start time for fetching the telemetry data in Epoch time format.
            Alternatively one can use start_date in place of start_at for passing the start date as string in YYYY-MM-DD format. By default start_at will appear in response.
            If start_date parameter is passed in the url then start_date field will appear in response.
          schema:
            type: integer
            format: int64
        - name: granularity
          in: query
          description: Granularity of the telemetry data. Default is 'day'.
          schema:
            $ref: '#/components/schemas/TelemetryGranularityEnum'
      responses:
        200:
          description: Telemetry for the Encharge.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemEnchargeDeviceTelemetryResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Not Found
                details: Encharge not found for {:id=>"1"}
                code: 404
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Unprocessable Entity
                details: Invalid request because of 'Requested date range is invalid for this system'.
                  {:start_at=>1566930600, :end_at=>1565333100, :first_interval=>1565072100, :last_interval=>1565333700}
                code: 422
        429:
          $ref: '#/components/responses/TooManyRequests'
        500:
          $ref: '#/components/responses/InternalServerError'
        501:
          $ref: '#/components/responses/NotImplemented'
  /systems/config/{system_id}/battery_settings:
    get:
      operationId: GetSystemBatterySettings
      tags:
        - System Configurations
      summary: Returns the current battery settings of a system
      description: Returns the current battery settings of a system.
      parameters:
        - $ref: '#/components/parameters/SystemId'
      responses:
        200:
          description: battery_settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemBatterySettingsResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Not Found
                details: System not found for {:id=>"1"}
                code: 404
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Unprocessable Entity
                details: System doesn't have encharges
                code: 422
        429:
          $ref: '#/components/responses/TooManyRequests'
        501:
          $ref: '#/components/responses/NotImplemented'
  /systems/config/{system_id}/storm_guard:
    get:
      operationId: GetSystemStormGuardSettings
      tags:
        - System Configurations
      summary: Returns the current storm guard settings of a system
      description: Returns the current storm guard settings of a system.
      parameters:
        - $ref: '#/components/parameters/SystemId'
      responses:
        200:
          description: storm_guard
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemStormGuardSettingsResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Not Found
                details: System not found for {:id=>"1"}
                code: 404
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Unprocessable Entity
                details: System doesn't have encharges
                code: 422
        429:
          $ref: '#/components/responses/TooManyRequests'
        501:
          $ref: '#/components/responses/NotImplemented'
  /systems/config/{system_id}/grid_status:
    get:
      operationId: GetSystemGridStatusSettings
      tags:
        - System Configurations
      summary: Returns the current grid status settings of a system
      description: Returns the current grid status settings of a system.
      parameters:
        - $ref: '#/components/parameters/SystemId'
      responses:
        200:
          description: grid_status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemGridStatusSettingsResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Not Found
                details: System not found for {:id=>"1"}
                code: 404
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Unprocessable Entity
                details: System doesn't have encharges
                code: 422
        429:
          $ref: '#/components/responses/TooManyRequests'
        501:
          $ref: '#/components/responses/NotImplemented'
  /systems/config/{system_id}/load_control:
    get:
      operationId: GetSystemLoadControlSettings
      tags:
        - System Configurations
      summary: Returns the current load control settings of a system
      description: Returns the current load control settings of a system.
      parameters:
        - $ref: '#/components/parameters/SystemId'
      responses:
        200:
          description: load_control
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemLoadControlSettingsResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Not Found
                details: System not found for {:id=>"1"}
                code: 404
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Unprocessable Entity
                details: System doesn't have encharges
                code: 422
        429:
          $ref: '#/components/responses/TooManyRequests'
        501:
          $ref: '#/components/responses/NotImplemented'
  /systems/{system_id}/energy_import_telemetry:
    get:
      operationId: GetSystemEnergyImportTelemetry
      tags:
        - Site Level Consumption Monitoring
      summary: Retrieves energy imported from grid in regular intervals
      description: |-
        Retrieves energy imported from grid in regular intervals.
        If no start_at is specified, defaults to midnight today, in the timezone of the system.
        If the start_at specified is earlier than the system’s first reported date, then midnight of the system’s first reported date is considered as start_at.
        The end_at is calculated as the minimum of the time of the request and (start time + granularity).
        The meaning of granularity is as follows:
        
        If granularity is 15mins, maximum 1 intervals will appear in response. If granularity is day, maximum 96 intervals will appear in response where each interval is of 15 mins duration.
        
        The requested start date must be within 2 years from current date.
      parameters:
        - $ref: '#/components/parameters/SystemId'
        - name: start_at
          in: query
          description: Start time for fetching the telemetry data in Epoch time format.
            Alternatively one can use start_date in place of start_at for passing the start date as string in YYYY-MM-DD format. By default start_at will appear in response.
            If start_date parameter is passed in the url then start_date field will appear in response.
          schema:
            type: integer
            format: int64
        - name: granularity
          in: query
          description: Granularity of the telemetry data. Default is 'day'.
          schema:
            $ref: '#/components/schemas/TelemetryGranularityEnum'
      responses:
        200:
          description: Telemetry for all production micros.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemEnergyImportTelemetryResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Not Found
                details: System not found for {:id=>"1"}
                code: 404
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Unprocessable Entity
                details: Invalid request because of 'Requested date range is invalid
                  for this system. {:start_at=>1566930600, :end_at=>1565333100, :first_interval=>1565072100,
                  :last_interval=>1565333700}'
                code: 422
        429:
          $ref: '#/components/responses/TooManyRequests'
        500:
          $ref: '#/components/responses/InternalServerError'
        501:
          $ref: '#/components/responses/NotImplemented'
  /systems/{system_id}/energy_export_telemetry:
    get:
      operationId: GetSystemEnergyExportTelemetry
      tags:
        - Site Level Consumption Monitoring
      summary: Retrieves energy exported to grid in regular intervals
      description: |-
        Retrieves energy exported to grid in regular intervals. If no start_at is specified, defaults to midnight today, in the timezone of the system.
        If the start_at specified is earlier than the system’s first reported date, then midnight of the system’s first reported date is considered as start_at.
        The end_at is calculated as the minimum of the time of the request and (start time + granularity).
        The meaning of granularity is as follows:
        
        If granularity is 15mins, maximum 1 intervals will appear in response. If granularity is day, maximum 96 intervals will appear in response where each interval is of 15 mins duration.
        
        The requested start date must be within 2 years from current date.
      parameters:
        - $ref: '#/components/parameters/SystemId'
        - name: start_at
          in: query
          description: Start time for fetching the telemetry data in Epoch time format.
            Alternatively one can use start_date in place of start_at for passing the start date as string in YYYY-MM-DD format. By default start_at will appear in response.
            If start_date parameter is passed in the url then start_date field will appear in response.
          schema:
            type: integer
            format: int64
        - name: granularity
          in: query
          description: Granularity of the telemetry data. Default is 'day'.
          schema:
            $ref: '#/components/schemas/TelemetryGranularityEnum'
      responses:
        200:
          description: Telemetry for all production micros.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSystemEnergyExportTelemetryResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Not Found
                details: System not found for {:id=>"1"}
                code: 404
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        422:
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
              example:
                message: Unprocessable Entity
                details: Invalid request because of 'Requested date range is invalid
                  for this system. {:start_at=>1566930600, :end_at=>1565333100, :first_interval=>1565072100,
                  :last_interval=>1565333700}'
                code: 422
        429:
          $ref: '#/components/responses/TooManyRequests'
        500:
          $ref: '#/components/responses/InternalServerError'
        501:
          $ref: '#/components/responses/NotImplemented'
components:
  parameters:
    SystemId:
      name: system_id
      in: path
      description: Unique numeric ID of the system.
      required: true
      schema:
        type: integer
  schemas:
    GetSystemsResponse:
      type: object
      properties:
        total:
          type: integer
          description: Total number of systems.
        current_page:
          type: integer
          description: Number of the current page fetched.
        size:
          type: integer
          description: Maximum number of records shown per page. Default=10, Min=1, Max=100.
          minimum: 1
          maximum: 100
        count:
          type: integer
          description: Total number of systems actually returned for the current page.
        items:
          type: string
          description: Named key of the list data. In this endpoint, it is systems.
        systems:
          type: array
          description: List of systems.
          items:
            $ref: '#/components/schemas/System'
      example:
        total: 28
        current_page: 1
        size: 2
        count: 2
        items: systems
        systems:
          - system_id: 698910067
            name: Enphase System
            public_name: Residential System
            timezone: Australia/Sydney
            address:
              state: NSW
              country: AU
              postal_code: "2127"
            connection_type: ethernet
            energy_lifetime: 0
            energy_today: 0
            system_size: 112.3
            status: micro
            last_report_at: 1508174262
            last_energy_at: 1508174172
            operational_at: 1497445200
            reference: "106015287"
            other_references:
              - "106015287"
          - system_id: 698906018
            name: Enphase Public System
            public_name: Residential System
            timezone: US/Pacific
            address:
              state: CA
              country: US
              postal_code: "94954"
            connection_type: ethernet
            status: normal
            last_report_at: 1508174262
            last_energy_at: 1508174172
            operational_at: 1497445200
    SearchSystemsRequest:
      type: object
      properties:
        system:
          type: object
          properties:
            ids:
              type: array
              description: Filter system by particular Ids.
              items:
                type: integer
            name:
              type: string
              description: Search by name of the system.
            public_name:
              $ref: '#/components/schemas/SystemPublicNameEnum'
            statuses:
              type: array
              description: Search by System status.
              items:
                $ref: '#/components/schemas/SystemStatusEnum'
            connection_type:
              $ref: '#/components/schemas/SystemConnectionTypeEnum'
        sort_by:
          $ref: '#/components/schemas/SystemSortByEnum'
      required:
        - system
    SearchSystemsResponse:
      type: object
      properties:
        total:
          type: integer
          description: Total number of systems available.
        current_page:
          type: integer
          description: Current page of the systems result. Default is 1.
        size:
          type: integer
          description: Max number of records from API per page is 100. Default is 10.
          maximum: 100
        count:
          type: integer
          description: Total number of systems actually returned for the current page.
        items:
          type: string
          description: Named key of the list data. In this endpoint, it is systems.
        systems:
          type: array
          description: List of filtered systems.
          items:
            $ref: '#/components/schemas/System'
      example:
        total: 28
        current_page: 1
        size: 2
        count: 2
        items: systems
        systems:
          - system_id: 698910067
            name: Enphase System
            public_name: Residential System
            address: { }
            connection_type: ethernet
            status: micro
            last_report_at: 1557400231
          - system_id: 698906018
            name: Enphase Public System
            public_name: Residential System
            timezone: US/Pacific
            address:
              state: CA
              country: US
              postal_code: "94954"
            connection_type: ethernet
            status: normal
            last_report_at: 1508174262
            last_energy_at: 1508174172
            operational_at: 1497445200
    GetSystemResponse:
      $ref: '#/components/schemas/System'
    GetSystemSummaryResponse:
      type: object
      properties:
        system_id:
          type: integer
          description: Unique numeric ID of the system.
        current_power:
          type: integer
          description: Current power production of the system in Watts.
        energy_lifetime:
          type: integer
          description: Energy generated by the system during its lifetime in Wh.
        energy_today:
          type: integer
          description: Energy generated by the system today in Wh.
        last_interval_end_at:
          type: integer
          format: int64
          description: Last known time that the system produced energy.
            When a system has not been communicating for a length of time, the last_report_at can be recent, whereas the last_interval_end_at may be further back.
        last_report_at:
          type: integer
          format: int64
          description: Timestamp (in epoch format) at which the system's Envoy last submitted a report.
        modules:
          type: integer
          description: Total number of modules in the system.
        operational_at:
          type: integer
          format: int64
          description: Timestamp (in epoch format) at which this system became operational. Corresponds to the system's interconnect time, if one is specified.
            Otherwise, it is the system's first reported interval end time.
        size_w:
          type: integer
          description: System size in watts.
        source:
          type: string
          description: Source of energy measurement.
        status:
          $ref: '#/components/schemas/SystemStatusEnum'
        summary_date:
          type: string
          description: Summary date.
      example:
        system_id: 698910067
        current_power: 0
        energy_lifetime: 0
        energy_today: 0
        last_report_at: 1557400231
        modules: 5
        size_w: 1250
        source: meter
        status: normal
        summary_date: 2019-05-12
    GetSystemDevicesResponse:
      type: object
      properties:
        system_id:
          type: integer
          description: System ID.
        total_devices:
          type: integer
          description: Total active devices associated with the system.
        items:
          type: string
          description: List key.
        devices:
          type: object
          description: Hash keys include all the possible device types micros, meters, gateways, mids, q_relays, ACBs, Encharges, Enpowers (if the devices of this type are present).
            For all the device types, the object will contain the serial_number and model with some additional information pertaining to the device type.
          additionalProperties:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                last_report_at:
                  type: integer
                  format: int64
                name:
                  type: string
                serial_number:
                  type: string
                part_number:
                  type: string
                emu_sw_version:
                  type: string
                sku:
                  type: string
                model:
                  type: string
                status:
                  type: string
                active:
                  type: string
                state:
                  type: string
                config_type:
                  type: string
      example:
        system_id: 698910067
        total_devices: 11
        items: devices
        devices:
          micros:
            - id: 1023273222
              last_report_at: 1508174262
              name: Microinverter  902167438951
              serial_number: "902167438951"
              part_number: 800-01333-r01
              sku: IQ8A-72-2-US
              model: M250
              status: normal
              active: true
            - id: 1023273243
              last_report_at: 1508174262
              name: Microinverter  902372021616
              serial_number: "902372021616"
              part_number: 800-01333-r01
              sku: IQ8A-72-2-US
              model: M250
              status: normal
              active: true
          meters:
            - id: 1059640322
              last_report_at: 1508174262
              name: production
              serial_number: 901553005272EIM1
              part_number: 800-00655-r08
              model: Envoy S
              status: normal
              active: true
              state: enabled
              config_type: Net
            - id: 1059640322
              last_report_at: 1508174262
              name: production
              serial_number: 901553005272EIM2
              part_number: 800-00655-r08
              model: Envoy S
              status: normal
              active: true
              state: enabled
              config_type: Production
          gateways:
            - id: 1059563029
              last_report_at: 1508174262
              name: Envoy 901553005272
              serial_number: "901553005272"
              part_number: 800-00655-r08
              emu_sw_version: D4.6.11.170403 (799d2d)
              sku: ENV-IQ-AM1-240
              model: Envoy-S-Standard-NA
              status: normal
              active: true
              cellular_modem:
                imei: "352009112238477"
                part_num: 860-00157-r01
                sku: CELLMODEM-M1
                plan_start_date: 1614796200
                plan_end_date: 1772562600
          q_relays:
            - id: 1059640316
              last_report_at: 1508174262
              name: Q Relay 912158973973
              serial_number: "912158973973"
              part_number: 800-00595-r01
              sku: Q-RELAY-1P-INT
              model: ""
              status: normal
              active: true
            - id: 1059640326
              last_report_at: 1508174262
              name: Q Relay 912163603334
              serial_number: "912163603334"
              part_number: 800-00595-r01
              sku: Q-RELAY-1P-INT
              model: ""
              status: normal
              active: true
          acbs:
            - id: 1059640321
              last_report_at: 1508174262
              name: AC Battery 911364446952
              serial_number: "911364446952"
              part_number: 800-00560-r03
              sku: IQ7-B1200-LN-I-INT01-RV0
              model: ""
              status: normal
              active: true
            - id: 1059640321
              last_report_at: 1508174262
              name: AC Battery 911499228280
              serial_number: "911499228280"
              part_number: 800-00560-r03
              sku: IQ7-B1200-LN-I-INT01-RV0
              model: ""
              status: normal
              active: true
          encharges:
            - id: 1059640295
              last_report_at: 1508174262
              name: Encharge 121593621979
              serial_number: "121593621979"
              part_number: 800-00562-r01
              sku: B03-A01-US00-1-3
              model: ""
              status: normal
              active: true
          enpowers:
            - id: 1059640294
              last_report_at: 1508174262
              name: Enpower 121245173988
              serial_number: "121245173988"
              part_number: 800-01135-r02
              sku: EP200G101-M240US00
              model: ""
              status: normal
              active: true
    RetrieveSystemIdResponse:
      type: object
      properties:
        system_id:
          type: integer
          description: Unique numeric ID of the system.
      example:
        system_id: 123
    GetSystemProductionMeterReadingsResponse:
      type: object
      properties:
        system_id:
          type: integer
          description: System ID.
        meter_readings:
          type: array
          description: Production meter readings.
          items:
            type: object
            properties:
              serial_number:
                type: string
                description: Serial number of the meter.
              value:
                type: integer
                description: Meter reading, in Wh.
              read_at:
                type: integer
                format: int64
                description: Time when the reading was taken, always prior or equal to the requested 'end_at'.
        meta:
          $ref: '#/components/schemas/Meta'
      example:
        system_id: 66
        meter_readings:
          - serial_num: 123123123123EIM1
            value: 6180635
            read_at: 1473901200
        meta:
          status: normal
          last_report_at: 1473902079
          last_energy_at: 1473901200
          operational_at: 1357023600
    GetSystemRgmStatsResponse:
      type: object
      properties:
        system_id:
          type: integer
          description: System ID.
        total_devices:
          type: integer
          description: Number of active revenue-grade meters for this system.
        meta:
          $ref: '#/components/schemas/Meta'
        intervals:
          type: array
          description: A list of intervals between the requested start and end times.
          items:
            type: object
            properties:
              end_at:
                type: integer
                format: int64
                description: End time of the telemetry interval.
              devices_reporting:
                type: integer
                description: Number of revenue-grade meters that reported data for this interval at the time of the request.
              wh_del:
                type: integer
                description: Energy delivered during this interval, in Wh.
        meter_intervals:
          type: array
          description: A list of intervals of a meter between the requested start and end times.
          items:
            type: object
            properties:
              meter_serial_number:
                type: string
                description: Meter serial number.
              envoy_serial_number:
                type: string
                description: Envoy serial number of the system that the micro reports to.
              intervals:
                type: array
                description: Individual meter level interval.
                items:
                  type: object
                  properties:
                    channel:
                      type: integer
                      description: Reporting channel ID.
                    end_at:
                      type: integer
                      format: int64
                      description: End time of the telemetry interval.
                    wh_del:
                      type: number
                      format: float
                      description: Energy delivered during this interval, in Wh (Watt-Hour).
                    curr_w:
                      type: integer
                      description: Energy delivered during this interval, in W (Watts).
      example:
        system_id: 66
        total_devices: 2
        meta:
          status: normal
          last_report_at: 1470087000
          last_energy_at: 1470086106
          operational_at: 1357023600
        intervals:
          - end_at: 1384122700
            wh_del: 50
            devices_reporting: 2
          - end_at: 1384123600
            wh_del: 100
            devices_reporting: 2
          - end_at: 1384124500
            wh_del: 15
            devices_reporting: 2
          - end_at: 1384125400
            wh_del: 21
            devices_reporting: 2
          - end_at: 1384126300
            wh_del: 34
            devices_reporting: 2
        meter_intervals:
          - meter_serial_number: "1218676784"
            envoy_serial_number: "1218347675"
            intervals:
              - channel: 1
                end_at: 1384122700
                wh_del: 30.0
                curr_w: 120
              - channel: 1
                end_at: 1384123600
                wh_del: 50.0
                curr_w: 200
              - channel: 1
                end_at: 1384124500
                wh_del: 10.0
                curr_w: 40
              - channel: 1
                end_at: 1384125400
                wh_del: 10.0
                curr_w: 40
              - channel: 1
                end_at: 1384126300
                wh_del: 20.0
                curr_w: 80
          - meter_serial_number: "1218676791"
            envoy_serial_number: "1218347675"
            intervals:
              - channel: 1
                end_at: 1384122700
                wh_del: 20.0
                curr_w: 80
              - channel: 1
                end_at: 1384123600
                wh_del: 50.0
                curr_w: 200
              - channel: 1
                end_at: 1384124500
                wh_del: 5.0
                curr_w: 20
              - channel: 1
                end_at: 1384125400
                wh_del: 11.0
                curr_w: 44
              - channel: 1
                end_at: 1384126300
                wh_del: 14.0
                curr_w: 56
    GetSystemConsumptionLifetimeResponse:
      type: object
      properties:
        system_id:
          type: integer
          description: Unique numeric ID of the system.
        start_date:
          type: string
          description: When no start_date parameter is specified on the request, defaults to the operational_date of the system. May be null if system has never produced.
            When a start_date parameter is included in the request, the same is included in the response.
        consumption:
          type: array
          description: An array of consumption measurements in Wh, one for each day since consumption metering began, or one for each day of the requested period.
          items:
            type: integer
        meta:
          $ref: '#/components/schemas/Meta'
      example:
        system_id: 66
        start_date: 2016-08-01
        consumption:
          - 15422
          - 15421
          - 17118
          - 18505
          - 18511
          - 18487
        meta:
          status: normal
          last_report_at: 1470087000
          last_energy_at: 1470086106
          operational_at: 1357023600
    GetSystemEnergyLifetimeResponse:
      type: object
      properties:
        system_id:
          type: integer
          description: System ID.
        start_date:
          type: string
          description: When no start_date parameter is specified on the request, this is the operational_date of the system. May be null if system has never produced.
            When a start_date parameter is included in the request, it is included here in the response.
        meter_start_date:
          type: string
          description: First day in the time series when measurements are taken from a meter instead of from microinverters. This field is not present unless the system has a meter.
        production:
          type: array
          description: An array of production measurements, one for each day since the system started producing, or one for each day of the requested period.
            If the system has never produced energy, the array may be empty.
          items:
            type: integer
        micro_production:
          type: array
          items:
            type: integer
        meter_production:
          type: array
          items:
            type: integer
        meta:
          $ref: '#/components/schemas/Meta'
      example:
        system_id: 66
        start_date: 2013-01-01
        meter_start_date: 2013-01-04
        production:
          - 15422
          - 15421
          - 17118
          - 18505
          - 18511
          - 18487
        micro_production:
          - 15422
          - 15421
          - 17118
          - 18513
          - 18520
          - 18494
        meter_production:
          - 0
          - 0
          - 11388
          - 18505
          - 18511
          - 18487
        meta:
          status: normal
          last_report_at: 1445619615
          last_energy_at: 1445619033
          operational_at: 1357023600
    GetSystemBatteryLifetimeResponse:
      type: object
      properties:
        system_id:
          type: integer
          description: Unique numeric ID of the system.
        start_date:
          type: string
          description: When no start_date parameter is specified on the request, defaults to the operational_date of the system. May be null if system has never produced.
            When a start_date parameter is included in the request, the same is included in the response.
        charge:
          type: array
          description: An array of charge measurements, one for each day since the system started producing, or one for each day of the requested period.
            If the system has never produced energy, the array may be empty.
          items:
            type: integer
        discharge:
          type: array
          description: An array of discharge measurements, one for each day since the system started producing, or one for each day of the requested period.
            If the system has never produced energy, the array may be empty.
          items:
            type: integer
        meta:
          $ref: '#/components/schemas/Meta'
      example:
        system_id: 66
        start_date: 2016-08-01
        discharge:
          - 15422
          - 15421
          - 17118
          - 18505
          - 18511
          - 18487
        charge:
          - 15422
          - 15421
          - 17118
          - 18505
          - 18511
          - 18487
        meta:
          status: normal
          last_report_at: 1470087000
          last_energy_at: 1470086106
          operational_at: 1357023600
    GetSystemEnergyImportLifetimeResponse:
      type: object
      properties:
        system_id:
          type: integer
          description: Unique numeric ID of the system.
        start_date:
          type: string
          description: When no start_date parameter is specified on the request, defaults to the operational_date of the system. May be null if system has never produced.
            When a start_date parameter is included in the request, the same is included in the response.
        import:
          type: array
          description: An array of import measurements, one for each day since the system started producing, or one for each day of the requested period.
            If the system has never produced energy, the array may be empty.
          items:
            type: integer
        meta:
          $ref: '#/components/schemas/Meta'
      example:
        system_id: 66
        start_date: 2016-08-01
        import:
          - 15422
          - 15421
          - 17118
          - 18505
          - 18511
          - 18487
        meta:
          status: normal
          last_report_at: 1470087000
          last_energy_at: 1470086106
          operational_at: 1357023600
    GetSystemEnergyExportLifetimeResponse:
      type: object
      properties:
        system_id:
          type: integer
          description: Unique numeric ID of the system.
        start_date:
          type: string
          description: When no start_date parameter is specified on the request, defaults to the operational_date of the system. May be null if system has never produced.
            When a start_date parameter is included in the request, the same is included in the response.
        export:
          type: array
          description: An array of export measurements, one for each day since the system started producing, or one for each day of the requested period.
            If the system has never produced energy, the array may be empty.
          items:
            type: integer
        meta:
          $ref: '#/components/schemas/Meta'
      example:
        system_id: 66
        start_date: 2016-08-01
        export:
          - 15422
          - 15421
          - 17118
          - 18505
          - 18511
          - 18487
        meta:
          status: normal
          last_report_at: 1470087000
          last_energy_at: 1470086106
          operational_at: 1357023600
    GetInvertersSummaryByEnvoyOrSiteResponse:
      type: array
      items:
        type: object
        properties:
          signal_strength:
            type: integer
            description: Signal strength.
          micro_inverters:
            type: array
            description: Microinverters.
            items:
              type: object
              properties:
                id:
                  type: integer
                  description: Numeric ID of the microinverter.
                serial_number:
                  type: string
                  description: Serial number of the microinverter.
                model:
                  type: string
                  description: Microinverter model type.
                part_number:
                  type: string
                  description: Microinverter part number.
                sku:
                  type: string
                  description: SKU of the microinverter.
                status:
                  type: string
                  description: Current status of the micro inverter.
                power_produced:
                  type: object
                  properties:
                    value:
                      type: integer
                      description: Current power produced by the microinverter.
                    units:
                      type: string
                      description: Power units.
                    precision:
                      type: integer
                proc_load:
                  type: string
                  description: Processor load.
                param_table:
                  type: string
                  description: Parameter table.
                envoy_serial_number:
                  type: string
                  description: Envoy serial number of the system that the micro reports to.
                energy:
                  type: object
                  properties:
                    value:
                      type: integer
                      description: Lifetime energy produced by the microinverter.
                    units:
                      type: string
                      description: Energy units.
                    precision:
                      type: integer
                grid_profile:
                  type: string
                  description: Grid profile ID.
                last_report_date:
                  type: string
                  description: Date on which the microinverter last reported.
      example:
        - signal_strength: 5
          micro_inverters:
            - id: 1059689835
              serial_number: "688346865858"
              model: M215
              part_number: 800-00107-r01
              sku: M215-60-2LL-S22-NA
              status: normal
              power_produced:
                value: 96
                units: W
                precision: 0
              proc_load: 521-00005-r00-v02.32.01
              param_table: 549-00018-r00-v02.32.01
              envoy_serial_number: "121842012242"
              energy:
                value: 232
                units: Wh
                precision: 0
              grid_profile: 57227c50e4d7973ae602c4e6
              last_report_date: 2020-09-18 11:17:23 -0400
            - id: 1059689836
              serial_number: "686868727227"
              model: M215
              part_number: 800-00107-r01
              sku: M215-60-2LL-S22-NA
              status: normal
              power_produced: 20
              proc_load: 521-00005-r00-v02.32.01
              param_table: 549-00018-r00-v02.32.01
              envoy_serial_number: "121842012242"
              energy:
                value: 120
                units: Wh
                precision: 0
              grid_profile: 57227c50e4d7973ae602c4e6
              last_report_date: 2020-09-18 11:17:23 -0400
    GetSystemProductionMicroTelemetryResponse:
      type: object
      properties:
        system_id:
          type: integer
          description: Unique numeric ID of the system.
        granularity:
          $ref: '#/components/schemas/TelemetryGranularityEnum'
        total_devices:
          type: integer
          description: Number of micro inverters in the site.
        start_at:
          type: integer
          format: int64
          description: Start time of the data series. Either start_date or start_at will be present. By default start_at will appear in response.
            If start_date parameter is passed in the url then start_date field will appear in response.
        end_at:
          type: integer
          format: int64
          description: End time of the data series. Either end_date or end_at will be present. By default end_at will appear in response.
            If end_date parameter is passed in the url then end_date field will appear in response.
        items:
          type: string
          description: List key 'intervals'.
        intervals:
          type: array
          description: An array of telemetry objects.
          items:
            type: object
            properties:
              end_at:
                type: integer
                format: int64
                description: End time of the telemetry interval.
              devices_reporting:
                type: integer
                description: Number of devices reporting.
              powr:
                type: integer
                description: Average power (in Watt) produced by all the microinverters during this interval, measured in Watts.
              enwh:
                type: integer
                description: Energy produced (in Watt-Hours) from all the microinverters combined during that period.
        meta:
          $ref: '#/components/schemas/Meta'
      example:
        system_id: 698905955
        granularity: day
        total_devices: 9
        start_at: 1496526300
        end_at: 1496528300
        items: intervals
        intervals:
          - end_at: 1384122700
            devices_reporting: 1
            powr: 30
            enwh: 40
          - end_at: 1384123600
            devices_reporting: 1
            powr: 20
            enwh: 40
        meta:
          status: normal
          last_report_at: 1445619615
          last_energy_at: 1445619033
          operational_at: 1357023600
    GetSystemProductionMeterTelemetryResponse:
      type: object
      properties:
        system_id:
          type: integer
          description: Unique numeric ID of the system.
        granularity:
          $ref: '#/components/schemas/TelemetryGranularityEnum'
        total_devices:
          type: integer
          description: Number of production meters in the site.
        start_at:
          type: integer
          format: int64
          description: Start time of the data series. Either start_date or start_at will be present. By default start_at will appear in response.
            If start_date parameter is passed in the url then start_date field will appear in response.
        end_at:
          type: integer
          format: int64
          description: End time of the data series. Either end_date or end_at will be present. By default end_at will appear in response.
            If end_date parameter is passed in the url then end_date field will appear in response.
        items:
          type: string
          description: List key 'intervals'.
        intervals:
          type: array
          items:
            type: object
            properties:
              end_at:
                type: integer
                format: int64
                description: End time of the telemetry interval.
              devices_reporting:
                type: integer
                description: Number of devices reporting.
              wh_del:
                type: integer
                description: Units produced per interval.
      example:
        system_id: 698905955
        granularity: day
        total_devices: 9
        start_at: 1496526300
        end_at: 1496529300
        items: intervals
        intervals:
          - end_at: 1384122700
            devices_reporting: 1
            wh_del: 40
          - end_at: 1384123600
            devices_reporting: 1
            wh_del: 40
    GetSystemBatteryTelemetryResponse:
      type: object
      properties:
        system_id:
          type: integer
          description: Unique numeric ID of the system.
        granularity:
          $ref: '#/components/schemas/TelemetryGranularityEnum'
        total_devices:
          type: integer
          description: Number of batteries in the site.
        start_at:
          type: integer
          format: int64
          description: Start time of the data series. Either start_date or start_at will be present. By default start_at will appear in response.
            If start_date parameter is passed in the url then start_date field will appear in response.
        end_at:
          type: integer
          format: int64
          description: End time of the data series. Either end_date or end_at will be present. By default end_at will appear in response.
            If end_date parameter is passed in the url then end_date field will appear in response.
        items:
          type: string
          description: List key 'intervals'.
        intervals:
          type: array
          items:
            type: object
            properties:
              end_at:
                type: integer
                format: int64
                description: End time of the telemetry interval.
              charge:
                type: object
                properties:
                  enwh:
                    type: integer
                    description: Energy into the battery during the interval.
                  devices_reporting:
                    type: integer
                    description: Number of devices reporting.
              discharge:
                type: object
                properties:
                  enwh:
                    type: integer
                    description: Energy discharged from the battery during the interval.
                  devices_reporting:
                    type: integer
                    description: Number of devices reporting.
              soc:
                type: object
                properties:
                  percent:
                    type: integer
                    description: Battery soc percentage.
                  devices_reporting:
                    type: integer
                    description: Number of devices reporting.
        last_reported_aggregate_soc:
          type: string
          description: Last reported aggregate soc percentage.
      example:
        system_id: 698905955
        granularity: day
        total_devices: 9
        start_at: 1496526300
        end_at: 1496529300
        items: intervals
        intervals:
          - end_at: 1384122700
            charge:
              enwh: 40
              devices_reporting: 1
            discharge:
              enwh: 0
              devices_reporting: 4
            soc:
              percent: 25
              devices_reporting: 4
        last_reported_aggregate_soc: 97%
    GetSystemConsumptionMeterTelemetryResponse:
      type: object
      properties:
        system_id:
          type: integer
          description: Unique numeric ID of the system.
        granularity:
          $ref: '#/components/schemas/TelemetryGranularityEnum'
        total_devices:
          type: integer
          description: Number of non-retired consumption meters in the site.
        start_at:
          type: integer
          format: int64
          description: Start time of the data series. Either start_date or start_at will be present. By default start_at will appear in response.
            If start_date parameter is passed in the url then start_date field will appear in response.
        end_at:
          type: integer
          format: int64
          description: End time of the data series. Either end_date or end_at will be present. By default end_at will appear in response.
            If end_date parameter is passed in the url then end_date field will appear in response.
        items:
          type: string
          description: List key 'intervals'.
        intervals:
          type: array
          items:
            type: object
            properties:
              end_at:
                type: integer
                format: int64
                description: End time of the telemetry interval.
              devices_reporting:
                type: integer
                description: Number of devices reporting.
              enwh:
                type: integer
                description: Units produced per interval.
        meta:
          $ref: '#/components/schemas/Meta'
      example:
        system_id: 698905955
        granularity: day
        total_devices: 9
        start_at: 1496526300
        end_at: 1496529300
        items: intervals
        intervals:
          - end_at: 1384122700
            devices_reporting: 1
            enwh: 40
          - end_at: 1384123600
            devices_reporting: 1
            enwh: 40
        meta:
          status: normal
          last_report_at: 1445619615
          last_energy_at: 1445619033
          operational_at: 1357023600
    GetSystemMicroDeviceTelemetryResponse:
      type: object
      properties:
        system_id:
          type: integer
          description: Unique numeric ID of the system.
        serial_number:
          type: string
          description: Device serial number.
        granularity:
          $ref: '#/components/schemas/TelemetryGranularityEnum'
        total_devices:
          type: integer
          description: Shall always be 1 since this is telemetry from individual micros.
        start_at:
          type: integer
          format: int64
          description: Start time of the data series. Either start_date or start_at will be present. By default start_at will appear in response.
            If start_date parameter passed in the url then start_date field will appear in response.
        end_at:
          type: integer
          format: int64
          description: End time of the data series. Either end_date or end_at will be present. By default end_at will appear in response.
            If end_date parameter passed in the url then end_date field will appear in response.
        items:
          type: string
          description: List key 'intervals'.
        intervals:
          type: array
          items:
            type: object
            properties:
              end_at:
                type: integer
                format: int64
                description: End time of the telemetry interval.
              powr:
                type: integer
                description: Average power (in Watt) produced by all the microinverters during this interval, measured in Watts.
              enwh:
                type: integer
                description: Energy produced (in Watt-Hours) from all the microinverters combined during that period.
      example:
        system_id: 1765
        serial_number: "12345"
        granularity: day
        total_devices: 1
        start_at: 1496526300
        end_at: 1496529300
        items: intervals
        intervals:
          - end_at: 1496526300
            powr: 30
            enwh: 40
          - end_at: 1496526600
            powr: 20
            enwh: 40
    GetSystemAcbDeviceTelemetryResponse:
      $ref: '#/components/schemas/BatteryDeviceTelemetry'
    GetSystemEnchargeDeviceTelemetryResponse:
      $ref: '#/components/schemas/BatteryDeviceTelemetry'
    GetSystemBatterySettingsResponse:
      type: object
      properties:
        system_id:
          type: integer
        battery_mode:
          type: string
          description: Current battery mode of the system.
        reserve_soc:
          type: integer
          description: Reserve soc for the current mode.
        battery_shutdown_level:
          type: integer
          description: Level at which battery shutdowns to conserve energy.
            Battery restarts by using the conserved energy when the utility grid restores power or solar panels start producing energy.
      example:
        system_id: 1765
        battery_mode: self-consumption
        reserve_soc: 95
        energy_independence: enabled
        charge_from_grid: disabled
        battery_shutdown_level: 13
    GetSystemStormGuardSettingsResponse:
      type: object
      properties:
        system_id:
          type: integer
        storm_guard_status:
          type: string
          description: Overrides your battery profile to full backup mode when a severe weather condition alert is issued in the locality.
        storm_alert:
          type: string
          description: True if severe weather condition alert is issued in the locality.
      example:
        system_id: 1765
        storm_guard_status: enabled
        storm_alert: "false"
    GetSystemGridStatusSettingsResponse:
      type: object
      properties:
        system_id:
          type: integer
        grid_state:
          type: string
          description: Indicates whether the site is connected to the grid.
        last_report_date:
          type: string
          description: Timestamp of the last report.
      example:
        system_id: 1765
        grid_state: Connected
        last_report_date: 2018-04-04 02:27:06 -0400
    GetSystemLoadControlSettingsResponse:
      type: object
      properties:
        system_id:
          type: integer
        load_control_data:
          type: array
          description: Load control data for all the configured loads.
          items:
            type: object
            properties:
              name:
                type: string
                description: Name of the dry contact.
              load_name:
                type: string
                description: Name of the load.
              owner_can_override:
                type: string
                description: HOs ability to override the load control settings.
              config:
                type: string
                description: Enabled/disabled.
              soc_low:
                type: integer
                description: Applicable for advanced mode. Load will be powered off when the battery soc reaches this level.
              soc_high:
                type: integer
                description: Applicable for advanced mode. Load powers off when battery reaches soc_low. The load will be powered on when the battery soc reaches soc_high.
              essential_start_time:
                type: integer
                description: Applicable for scheduled mode. Time in seconds. Load will powered on between essential_start_time and essential_end_time.
              essential_end_time:
                type: integer
                description: Applicable for scheduled mode. Time in seconds. Load will powered on between essential_start_time and essential_end_time.
      example:
        system_id: 1932237
        load_control_data:
          - name: NC1
            load_name: Downstairs A/C
            owner_can_override: true
            config: off_when_off_grid
            soc_low: 30
            soc_high: 50
            status: enabled
            essential_start_time: 32400
            essential_end_time: 57600
          - name: NC2
            load_name: Upstairs A/C
            owner_can_override: true
            config: off_when_off_grid
            soc_low: 30
            soc_high: 50
            status: enabled
            essential_start_time: 32400
            essential_end_time: 57600
    GetSystemEnergyImportTelemetryResponse:
      type: object
      properties:
        system_id:
          type: integer
          description: Unique numeric ID of the system.
        granularity:
          type: string
          description: Granularity of the telemetry data. Default is 'day'.
        total_devices:
          type: integer
          description: Number of consumption meters in the site.
        start_at:
          type: integer
          format: int64
          description: Start time of the data series. Either start_date or start_at will be present. By default start_at will appear in response.
            If start_date parameter is passed in the url then start_date field will appear in response.
        end_at:
          type: integer
          format: int64
          description: End time of the data series. Either end_date or end_at will be present. By default end_at will appear in response.
            If end_date parameter is passed in the url then end_date field will appear in response.
        items:
          type: string
          description: List key 'intervals'.
        intervals:
          type: array
          description: An array of telemetry objects.
          items:
            type: object
            properties:
              end_at:
                type: integer
                format: int64
                description: End time of the telemetry interval.
              wh_imported:
                type: integer
                description: Energy imported (in Watt-Hours) during that period.
        meta:
          $ref: '#/components/schemas/Meta'
      example:
        system_id: 698905955
        granularity: day
        total_devices: 1
        start_at: 1496526300
        end_at: 1496528300
        items: intervals
        intervals:
          - end_at: 1384122700
            wh_imported: 40
          - end_at: 1384123600
            wh_imported: 40
        meta:
          status: normal
          last_report_at: 1445619615
          last_energy_at: 1445619033
          operational_at: 1357023600
    GetSystemEnergyExportTelemetryResponse:
      type: object
      properties:
        system_id:
          type: integer
          description: Unique numeric ID of the system.
        granularity:
          type: string
          description: Granularity of the telemetry data. Default is 'day'.
        total_devices:
          type: integer
          description: Number of production meters in the site.
        start_at:
          type: integer
          format: int64
          description: Start time of the data series. Either start_date or start_at will be present. By default start_at will appear in response.
            If start_date parameter is passed in the url then start_date field will appear in response.
        end_at:
          type: integer
          format: int64
          description: End time of the data series. Either end_date or end_at will be present. By default end_at will appear in response.
            If end_date parameter is passed in the url then end_date field will appear in response.
        items:
          type: string
          description: List key 'intervals'.
        intervals:
          type: array
          description: An array of telemetry objects.
          items:
            type: object
            properties:
              end_at:
                type: integer
                format: int64
                description: End time of the telemetry interval.
              wh_exported:
                type: integer
                description: Energy exported (in Watt-Hours) during that period.
        meta:
          $ref: '#/components/schemas/Meta'
      example:
        system_id: 698905955
        granularity: day
        total_devices: 1
        start_at: 1496526300
        end_at: 1496528300
        items: intervals
        intervals:
          - end_at: 1384122700
            wh_exported: 40
          - end_at: 1384123600
            wh_exported: 40
        meta:
          status: normal
          last_report_at: 1445619615
          last_energy_at: 1445619033
          operational_at: 1357023600
    System:
      type: object
      properties:
        system_id:
          type: integer
          description: Unique numeric ID of the system.
        name:
          type: string
          description: Name of the system.
        public_name:
          type: string
          description: Name displayed on the public system page. Available values are All, Residential System, Commercial etc. Default='Residential System'.
            Only for systems that allow public access.
        timezone:
          type: string
          description: Timezone to which the system belongs.
        address:
          type: object
          description: Address object for the system.
          properties:
            state:
              type: string
              description: State in which the system is located.
            country:
              type: string
              description: Country in which the system is located.
            postal_code:
              type: string
              description: Postal code of the system's location.
        connection_type:
          $ref: '#/components/schemas/SystemConnectionTypeEnum'
        energy_lifetime:
          type: integer
          description: Energy generated by the system during its lifetime in Wh. It is returned only if the count is less than or equal to 100.
        energy_today:
          type: integer
          description: Energy generated by the system today in Wh. It is returned only if the count is less than or equal to 100.
        system_size:
          type: number
          description: Size of the system. It is returned only if the count is less than or equal to 100.
          format: float
        status:
          $ref: '#/components/schemas/SystemStatusEnum'
        last_report_at:
          type: integer
          format: int64
          description: Timestamp (in epoch format) at which the system's Envoy last submitted a report.
        last_energy_at:
          type: integer
          format: int64
          description: Timestamp (in epoch format) at which the system's produced energy was last reported. Even if the last produced energy is 0, its timestamp will be returned.
        operational_at:
          type: integer
          format: int64
          description: Timestamp (in epoch format) at which this system became operational. Corresponds to the system's interconnect time, if one is specified.
            Otherwise, it is the system's first reported interval end time.
        attachment_type:
          $ref: '#/components/schemas/SystemAttachmentTypeEnum'
        interconnect_date:
          type: string
          description: Date on which the system was approved to connect to the grid.
        reference:
          type: string
          description: If the calling user belongs to a company and that company has provided its own identifier for a system, that ID is included here.
            Otherwise, this attribute is not returned.
        other_references:
          type: array
          description: If any other companies have provided their own identifiers for a system, those identifiers are included here. Otherwise, this attribute is not returned.
          items:
            type: string
      example:
        system_id: 72
        name: Enphase System
        public_name: Residential System
        timezone: America/Los_Angeles
        address:
          state: CA
          country: US
          postal_code: "94954"
        connection_type: cellular
        energy_lifetime: 0
        energy_today: 0
        system_size: 112.3
        status: normal
        last_report_at: 1445619615
        last_energy_at: 1445619033
        operational_at: 1357023600
        attachment_type: acm
        interconnect_date: 2012-10-13
        reference: "106015287"
        other_references:
          - "106015287"
    Meta:
      type: object
      description: Information about the system such as its status, when it became operational and last reported to Envoy.
      properties:
        status:
          $ref: '#/components/schemas/SystemStatusEnum'
        last_report_at:
          type: integer
          description: Timestamp (in epoch format) at which the system's Envoy last submitted a report.
        last_energy_at:
          type: integer
          description: Timestamp (in epoch format) at which the system's produced energy was last reported. Even if the last produced energy is 0, its timestamp will be returned.
        operational_at:
          type: integer
          description: Timestamp (in epoch format) at which this system became operational. Corresponds to the system's interconnect time, if one is specified.
            Otherwise, it is the system's first reported interval end time.
    BatteryDeviceTelemetry:
      type: object
      properties:
        system_id:
          type: integer
          description: System ID.
        serial_number:
          type: string
          description: Device serial number.
        granularity:
          $ref: '#/components/schemas/TelemetryGranularityEnum'
        total_devices:
          type: integer
          description: Shall always be 1 since this is telemetry from individual micros.
        start_at:
          type: integer
          format: int64
          description: Start time of the data series. Either start_date or start_at will be present. By default start_at will appear in response.
            If start_date parameter passed in the url then start_date field will appear in response.
        end_at:
          type: integer
          format: int64
          description: End time of the data series. Either end_date or end_at will be present. By default end_at will appear in response.
            If end_date parameter passed in the url then end_date field will appear in response.
        items:
          type: string
          description: List key 'intervals'.
        intervals:
          type: array
          items:
            type: object
            properties:
              end_at:
                type: integer
                format: int64
                description: End time of the telemetry interval.
              charge:
                type: object
                properties:
                  enwh:
                    type: integer
                    description: Energy into the battery during the interval.
              discharge:
                type: object
                properties:
                  enwh:
                    type: integer
                    description: Energy discharged from the battery during the interval.
              soc:
                type: object
                properties:
                  percent:
                    type: integer
                    description: Battery soc percentage.
        last_reported_time:
          type: integer
          description: Last reported timestamp.
        last_reported_soc:
          type: string
          description: Last reported soc percentage.
      example:
        system_id: 1765
        serial_number: "12345"
        granularity: day
        total_devices: 1
        start_at: 1496526300
        end_at: 1496529300
        items: intervals
        intervals:
          - end_at: 1384122700
            charge:
              enwh: 40
            discharge:
              enwh: 0
            soc:
              percent: 25
        last_reported_time: 1650349170
        last_reported_soc: 99%
    SystemSortByEnum:
      type: string
      description: Returns list of systems sorted by <sort_by> field. To get ASC order sorted list, user sort_by = <key>. To get DESC order sorted list, use sort_by = (-)<key>.
        Current sort keys supported are id, name, and last_report_date. By default the list is sorted by decreasing system ID.
      enum:
        - id
        - name
        - last_report_date
        - -id
        - -name
        - -last_report_date
    TelemetryGranularityEnum:
      type: string
      description: Granularity of the telemetry data. Default is 'day'.
      enum:
        - 15mins
        - day
        - week
    SystemPublicNameEnum:
      type: string
      description: Name displayed on the public system page. Default=residential. Only for systems that allow public access.
      enum:
        - residential
        - all
        - commercial
        - other
    SystemStatusEnum:
      type: string
      enum:
        - deactivated
        - normal
        - comm
        - micro
        - power
        - meter
        - meter_issue
        - battery
        - storage_idle
        - encharge
        - encharge_issue
        - enpower
        - enpower_issue
        - retired
        - not_monitored
        - unused
        - disabled
        - debug
        - info
        - monitored
        - muted
        - warning
        - error
        - no_data
        - rma
        - unknown
        - nsr
        - any
        - data_upload
        - on_grid
        - off_grid
        - grid_unknown
    SystemConnectionTypeEnum:
      type: string
      description: Connection type of the system.
      enum:
        - wifi
        - cellular
        - ethernet
    SystemAttachmentTypeEnum:
      type: string
      description: Micro inverter attachment type.
      enum:
        - rack_mount
        - zep
        - acm
        - bipv
        - frame_mount
        - railless_mount
    SystemEnergyLifetimeProductionEnum:
      type: string
      enum:
        - all
    TooManyRequestsError:
      type: object
      properties:
        message:
          type: string
          description: Error type.
        details:
          type: string
          description: Error details.
        code:
          type: integer
          description: Error code.
        period:
          type: string
          description: Quota exceeded for minute/month.
        period_start:
          type: integer
          description: Starting period timestamp.
        period_end:
          type: integer
          description: Ending period timestamp.
        limit:
          type: integer
          description: Limit count for the period.
    DataTemporarilyUnavailableError:
      type: object
      properties:
        errorCode:
          type: integer
          description: Error code.
        errorMessages:
          type: array
          description: Error messages.
          items:
            type: string
    ClientError:
      type: object
      properties:
        message:
          type: string
          description: Error type.
        details:
          type: string
          description: Error details.
        code:
          type: integer
          description: Error code.
    ServerError:
      type: object
      properties:
        reason:
          type: string
        message:
          type: array
          items:
            type: string
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClientError'
          example:
            message: Not Authorized
            details: User is not authorized
            code: 401
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClientError'
          example:
            message: Forbidden
            details: Not authorized to access this resource
            code: 403
    MethodNotAllowed:
      description: Method Not Allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServerError'
          example:
            reason: "405"
            message:
              - Method not allowed
    TooManyRequests:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TooManyRequestsError'
          example:
            message: Too Many Requests
            details: Usage limit exceeded for plan Kilowatt
            code: 429
            period: minute
            period_start: 1623825660
            period_end: 1623825720
            limit: 5
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClientError'
          example:
            message: Internal Server Error
            details: Problem parsing time. Is time passed correctly in the following fields {:start_date=>"2019-08-33", :end_at=>"2019-08-29"}
            code: 500
    DataTemporarilyUnavailable:
      description: Under some conditions, data for a given period may be temporarily unavailable. When this condition is detected, the response code is 500.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DataTemporarilyUnavailableError'
          example:
            errorCode: 7
            errorMessages:
              - Data is temporarily unavailable
    NotImplemented:
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServerError'
          example:
            reason: "501"
            message:
              - Not Implemented
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://api.enphaseenergy.com/oauth/authorize
          tokenUrl: https://api.enphaseenergy.com/oauth/token
          scopes: { }
    ApiKey:
      type: apiKey
      name: key
      in: query
security:
  - OAuth2: [ ]
  - ApiKey: [ ]
