<?php
/**
 * StatusTest
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * The Enlighten Systems API
 *
 * The Enlighten Systems API is a JSON-based API that provides access to performance data for a PV system. By using the Enlighten Systems API, you agree to the Enphase Energy API License Agreement.  Please note that the Enlighten Systems API does not provide performance data at a panel or microinverter level.
 *
 * The version of the OpenAPI document: 2.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.1.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * StatusTest Class Doc Comment
 *
 * @category    Class
 * @description The current status of the system. * &#x60;comm&#x60; - One or more Envoys on the system are not communicating to Enlighten. * &#x60;power&#x60; - There is a production issue on the system. * &#x60;meter&#x60; - There is a communication problem between an Envoy and a revenue-grade meter on the system. * &#x60;meter_issue&#x60; - One or more meters on the system are reporting unusual measurements. * &#x60;micro&#x60; - There is a communication problem between an Envoy and microinverters that it monitors. * &#x60;battery&#x60; - There is a communication problem between an Envoy and an AC battery on the system. * &#x60;storage_idle&#x60; - An AC battery on the system has not changed its state of charge for more than 72 hours. * &#x60;normal&#x60; - The system is operating normally.
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class StatusTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "Status"
     */
    public function testStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
